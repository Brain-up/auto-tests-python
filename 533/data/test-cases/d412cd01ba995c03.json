{
  "uid" : "d412cd01ba995c03",
  "name" : "Solutions to a random task in the \"Слова\" .",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_solve_word_cards_ru",
  "historyId" : "97a1dfc93de55b98f3507f18d0af26f8",
  "time" : {
    "start" : 1744148538153,
    "stop" : 1744148542125,
    "duration" : 3972
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 1",
  "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f5ad1116a50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eca6198985f24d2c8d8078eafb48b42c\")>\ndefault_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Solutions to a random task in the \"Слова\" .')\n    def test_solve_word_cards_ru(self, driver, default_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.click_button_exercises()\n        page.select_group(SpeechExercisesPageLocators.WORDS_BUTTON_RU)\n        seria_id = page.set_url_to_get_id_words_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       payloads = page.get_random_id_from_list_sub_group_default(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 1, seria_id = '1'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group_default')\n    def get_random_id_from_list_sub_group_default(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token_default)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token_default}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n        payloads = {}\n>       payloads.setdefault('ids', result_get['data'][card_id]['exercises'])\nE       KeyError: 1\n\npages/speech_exercises_page_api.py:141: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "default_user_authorized",
    "time" : {
      "start" : 1744148535397,
      "stop" : 1744148538153,
      "duration" : 2756
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "DEFAULT user authorized",
      "time" : {
        "start" : 1744148535397,
        "stop" : 1744148538153,
        "duration" : 2756
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check url is present: https://www.brainup.site/groups",
        "time" : {
          "start" : 1744148536071,
          "stop" : 1744148538109,
          "duration" : 2038
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Loader checking",
        "time" : {
          "start" : 1744148538109,
          "stop" : 1744148538153,
          "duration" : 44
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eca6198985f24d2c8d8078eafb48b42c\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1744148531353,
      "stop" : 1744148532252,
      "duration" : 899
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1744148532252,
      "stop" : 1744148535396,
      "duration" : 3144
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1744148532252,
        "stop" : 1744148535396,
        "duration" : 3144
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"eca6198985f24d2c8d8078eafb48b42c\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1744138652012,
      "stop" : 1744138652012,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 1",
    "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f5ad1116a50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eca6198985f24d2c8d8078eafb48b42c\")>\ndefault_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Solutions to a random task in the \"Слова\" .')\n    def test_solve_word_cards_ru(self, driver, default_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.click_button_exercises()\n        page.select_group(SpeechExercisesPageLocators.WORDS_BUTTON_RU)\n        seria_id = page.set_url_to_get_id_words_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       payloads = page.get_random_id_from_list_sub_group_default(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 1, seria_id = '1'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group_default')\n    def get_random_id_from_list_sub_group_default(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token_default)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token_default}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n        payloads = {}\n>       payloads.setdefault('ids', result_get['data'][card_id]['exercises'])\nE       KeyError: 1\n\npages/speech_exercises_page_api.py:141: KeyError",
    "steps" : [ {
      "name" : "Click button \"Упражнения\".",
      "time" : {
        "start" : 1744148538153,
        "stop" : 1744148538490,
        "duration" : 337
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Click button \"RU\".",
        "time" : {
          "start" : 1744148538153,
          "stop" : 1744148538306,
          "duration" : 153
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "select_group",
      "time" : {
        "start" : 1744148538490,
        "stop" : 1744148540568,
        "duration" : 2078
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Select Russian language. Click \"RU\" button.",
        "time" : {
          "start" : 1744148538490,
          "stop" : 1744148538628,
          "duration" : 138
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"Речевые упражнения\".",
        "time" : {
          "start" : 1744148538628,
          "stop" : 1744148539349,
          "duration" : 721
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"СЛОВА\".",
        "time" : {
          "start" : 1744148540441,
          "stop" : 1744148540568,
          "duration" : 127
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "selector_for_sub_group",
        "value" : "('xpath', '//button[@data-test-active-link=\"Слова\"]')"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get seria ID from URL: https://www.brainup.site/groups/2/series/1",
      "time" : {
        "start" : 1744148540568,
        "stop" : 1744148540576,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Wait until url to be: https://www.brainup.site/groups/2/series/1.",
        "time" : {
          "start" : 1744148540568,
          "stop" : 1744148540573,
          "duration" : 5
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "click_random_card",
      "time" : {
        "start" : 1744148540576,
        "stop" : 1744148541666,
        "duration" : 1090
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Getting list cards: ['Семья', 'Любимый дом', 'Что я ем', 'Одежда', 'В школе', 'Математика', 'Домашние питомцы', 'Мир животных', 'Транспорт', 'Цвета и форма', 'В городе', 'В деревне', 'На прогулке', 'Погода', 'Стану кем хочу', 'Тело человека', 'Развлечения', 'Путешествия', 'В больнице', 'Что я чувствую', 'Игрушки', 'Насекомые', 'Интерьер', 'На кухне', 'Музыка', 'Музыкальные инструменты', 'Птицы', 'Украшения', 'История', 'Действия', 'Действия(слышимые)', 'Транспорт Дополнение', 'Транспорт (спецтехника)', 'Плодовые деревья и кусты', 'Растения', 'Деревья и кустарники', 'Спорт', 'В магазине', 'Парнокопытные', 'Породы собак', 'Канцелярские принадлежности', 'Цветы', 'Русский язык и литература', 'Физика', 'Биология', 'Инструменты']",
        "time" : {
          "start" : 1744148541490,
          "stop" : 1744148541490,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Select random id from list of cards. \nCard ID in list is:, 2",
        "time" : {
          "start" : 1744148541490,
          "stop" : 1744148541490,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Selected card is: Любимый дом",
        "time" : {
          "start" : 1744148541520,
          "stop" : 1744148541648,
          "duration" : 128
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "get_random_id_from_list_sub_group_default",
      "time" : {
        "start" : 1744148541666,
        "stop" : 1744148542125,
        "duration" : 459
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 1\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/speech_exercises_page_api.py\", line 141, in get_random_id_from_list_sub_group_default\n    payloads.setdefault('ids', result_get['data'][card_id]['exercises'])\n                               ~~~~~~~~~~~~~~~~~~^^^^^^^^^\n",
      "steps" : [ {
        "name" : "Status code is: 403",
        "time" : {
          "start" : 1744148542125,
          "stop" : 1744148542125,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Send GET request with params: https://www.brainup.site/api/subgroups?seriesId=1headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{id_token_default}\"",
        "time" : {
          "start" : 1744148542125,
          "stop" : 1744148542125,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Getting list of cards id: {'data': {}, 'errors': ['Доступ запрещен'], 'meta': []}",
        "time" : {
          "start" : 1744148542125,
          "stop" : 1744148542125,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "card_id",
        "value" : "1"
      }, {
        "name" : "seria_id",
        "value" : "'1'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 16,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1744148542136,
      "stop" : 1744148542204,
      "duration" : 68
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Речевые упражнения."
  }, {
    "name" : "epic",
    "value" : "Speech exercises."
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1692-384"
  }, {
    "name" : "thread",
    "value" : "2417-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 3,
        "passed" : 82,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "184222c7c5efbb33",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/328//#testresult/184222c7c5efbb33",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744075419157,
          "stop" : 1744075453554,
          "duration" : 34397
        }
      }, {
        "uid" : "310a5901bf9d847d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/532//#testresult/310a5901bf9d847d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744022154549,
          "stop" : 1744022183236,
          "duration" : 28687
        }
      }, {
        "uid" : "f77bf9a3b4026d6d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/327//#testresult/f77bf9a3b4026d6d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743989446029,
          "stop" : 1743989474354,
          "duration" : 28325
        }
      }, {
        "uid" : "aa01e6a7c29463dd",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/531//#testresult/aa01e6a7c29463dd",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743970601625,
          "stop" : 1743970649867,
          "duration" : 48242
        }
      }, {
        "uid" : "53023d11c82f0225",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/326//#testresult/53023d11c82f0225",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743902889698,
          "stop" : 1743902918604,
          "duration" : 28906
        }
      }, {
        "uid" : "111a693a4ad2babe",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/530//#testresult/111a693a4ad2babe",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743845134482,
          "stop" : 1743845183433,
          "duration" : 48951
        }
      }, {
        "uid" : "fe325a1cc593ab0e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/325//#testresult/fe325a1cc593ab0e",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743816181638,
          "stop" : 1743816229710,
          "duration" : 48072
        }
      }, {
        "uid" : "c79f5203d5c09d4",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/529//#testresult/c79f5203d5c09d4",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743797801160,
          "stop" : 1743797829603,
          "duration" : 28443
        }
      }, {
        "uid" : "519d6767b38334b6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/324//#testresult/519d6767b38334b6",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743729950535,
          "stop" : 1743730009195,
          "duration" : 58660
        }
      }, {
        "uid" : "f44f36bc9c20e861",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/528//#testresult/f44f36bc9c20e861",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743678315090,
          "stop" : 1743678358462,
          "duration" : 43372
        }
      }, {
        "uid" : "7a990377b99eca38",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/323//#testresult/7a990377b99eca38",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743643716307,
          "stop" : 1743643746094,
          "duration" : 29787
        }
      }, {
        "uid" : "978d663572ea0bc2",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/527//#testresult/978d663572ea0bc2",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743617559248,
          "stop" : 1743617607178,
          "duration" : 47930
        }
      }, {
        "uid" : "1ae8cbd34498217f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/322//#testresult/1ae8cbd34498217f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743557058644,
          "stop" : 1743557108109,
          "duration" : 49465
        }
      }, {
        "uid" : "7a376b3215ca6bf8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/526//#testresult/7a376b3215ca6bf8",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743534757273,
          "stop" : 1743534784512,
          "duration" : 27239
        }
      }, {
        "uid" : "ccb3d36cb47093c1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/321//#testresult/ccb3d36cb47093c1",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743471142183,
          "stop" : 1743471191853,
          "duration" : 49670
        }
      }, {
        "uid" : "5321b03f50f490a8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/525//#testresult/5321b03f50f490a8",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743455329184,
          "stop" : 1743455356508,
          "duration" : 27324
        }
      }, {
        "uid" : "b475e078e1f8ba85",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/320//#testresult/b475e078e1f8ba85",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743384458174,
          "stop" : 1743384505945,
          "duration" : 47771
        }
      }, {
        "uid" : "f0eb978f952cedad",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/319//#testresult/f0eb978f952cedad",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743298328960,
          "stop" : 1743298358615,
          "duration" : 29655
        }
      }, {
        "uid" : "c010de78eebfab1b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/524//#testresult/c010de78eebfab1b",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743283699243,
          "stop" : 1743283747518,
          "duration" : 48275
        }
      }, {
        "uid" : "338117c233094092",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/523//#testresult/338117c233094092",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743262990472,
          "stop" : 1743263018942,
          "duration" : 28470
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "d412cd01ba995c03.json",
  "parameterValues" : [ ]
}
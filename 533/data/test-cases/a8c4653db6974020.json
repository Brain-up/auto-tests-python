{
  "uid" : "a8c4653db6974020",
  "name" : "Verify values of names and professions in specialist cards in the grid",
  "fullName" : "tests.specialists_page_test.TestSpecialistPageText#test_sp_02_04_verify_name_and_profession_in_cards",
  "historyId" : "78e03a13a1b27d1fe52cf41b87e50dab",
  "time" : {
    "start" : 1744148258805,
    "stop" : 1744148258903,
    "duration" : 98
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5594ad632ffa <unknown>\n#1 0x5594ad0f1970 <unknown>\n#2 0x5594ad0f850e <unknown>\n#3 0x5594ad0fad58 <unknown>\n#4 0x5594ad0fade3 <unknown>\n#5 0x5594ad13d99d <unknown>\n#6 0x5594ad169292 <unknown>\n#7 0x5594ad136e4a <unknown>\n#8 0x5594ad16945e <unknown>\n#9 0x5594ad18f70c <unknown>\n#10 0x5594ad169063 <unknown>\n#11 0x5594ad135328 <unknown>\n#12 0x5594ad136491 <unknown>\n#13 0x5594ad5fa42b <unknown>\n#14 0x5594ad5fe2ec <unknown>\n#15 0x5594ad5e1a22 <unknown>\n#16 0x5594ad5fee64 <unknown>\n#17 0x5594ad5c5bef <unknown>\n#18 0x5594ad621558 <unknown>\n#19 0x5594ad621736 <unknown>\n#20 0x5594ad631e76 <unknown>\n#21 0x7f2d79c9caa4 <unknown>\n#22 0x7f2d79d29c3c <unknown>",
  "statusTrace" : "self = <tests.specialists_page_test.TestSpecialistsPage.TestSpecialistPageText object at 0x7f5ad11a9220>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2ab9befbf8ca367e3026fc5e1f90241b\")>\nspecialists_page_open = None\n\n    @allure.title(\"Verify values of names and professions in specialist cards in the grid\")\n    def test_sp_02_04_verify_name_and_profession_in_cards(self, driver, specialists_page_open):\n        page = SpecialistsPage(driver)\n        name_values = page.get_name_values_in_cards()\n>       profession_values = page.get_profession_values_in_cards()\n\ntests/specialists_page_test.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/specialists_page.py:178: in get_profession_values_in_cards\n    return [profession.text for profession in self.get_list_of_professions_in_cards()]\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5ad10e0bc0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x5594ad631e76 \\\\u003Cunknown>\\\\n#21 0x7f2d79c9caa4 \\\\u003Cunknown>\\\\n#22 0x7f2d79d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5594ad632ffa <unknown>\nE       #1 0x5594ad0f1970 <unknown>\nE       #2 0x5594ad0f850e <unknown>\nE       #3 0x5594ad0fad58 <unknown>\nE       #4 0x5594ad0fade3 <unknown>\nE       #5 0x5594ad13d99d <unknown>\nE       #6 0x5594ad169292 <unknown>\nE       #7 0x5594ad136e4a <unknown>\nE       #8 0x5594ad16945e <unknown>\nE       #9 0x5594ad18f70c <unknown>\nE       #10 0x5594ad169063 <unknown>\nE       #11 0x5594ad135328 <unknown>\nE       #12 0x5594ad136491 <unknown>\nE       #13 0x5594ad5fa42b <unknown>\nE       #14 0x5594ad5fe2ec <unknown>\nE       #15 0x5594ad5e1a22 <unknown>\nE       #16 0x5594ad5fee64 <unknown>\nE       #17 0x5594ad5c5bef <unknown>\nE       #18 0x5594ad621558 <unknown>\nE       #19 0x5594ad621736 <unknown>\nE       #20 0x5594ad631e76 <unknown>\nE       #21 0x7f2d79c9caa4 <unknown>\nE       #22 0x7f2d79d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1744148254580,
      "stop" : 1744148257603,
      "duration" : 3023
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1744148254580,
        "stop" : 1744148257603,
        "duration" : 3023
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2ab9befbf8ca367e3026fc5e1f90241b\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1744138652012,
      "stop" : 1744138652012,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1744148253764,
      "stop" : 1744148254580,
      "duration" : 816
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "specialists_page_open",
    "time" : {
      "start" : 1744148257603,
      "stop" : 1744148258805,
      "duration" : 1202
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/specialists",
      "time" : {
        "start" : 1744148257603,
        "stop" : 1744148258805,
        "duration" : 1202
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"2ab9befbf8ca367e3026fc5e1f90241b\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5594ad632ffa <unknown>\n#1 0x5594ad0f1970 <unknown>\n#2 0x5594ad0f850e <unknown>\n#3 0x5594ad0fad58 <unknown>\n#4 0x5594ad0fade3 <unknown>\n#5 0x5594ad13d99d <unknown>\n#6 0x5594ad169292 <unknown>\n#7 0x5594ad136e4a <unknown>\n#8 0x5594ad16945e <unknown>\n#9 0x5594ad18f70c <unknown>\n#10 0x5594ad169063 <unknown>\n#11 0x5594ad135328 <unknown>\n#12 0x5594ad136491 <unknown>\n#13 0x5594ad5fa42b <unknown>\n#14 0x5594ad5fe2ec <unknown>\n#15 0x5594ad5e1a22 <unknown>\n#16 0x5594ad5fee64 <unknown>\n#17 0x5594ad5c5bef <unknown>\n#18 0x5594ad621558 <unknown>\n#19 0x5594ad621736 <unknown>\n#20 0x5594ad631e76 <unknown>\n#21 0x7f2d79c9caa4 <unknown>\n#22 0x7f2d79d29c3c <unknown>",
    "statusTrace" : "self = <tests.specialists_page_test.TestSpecialistsPage.TestSpecialistPageText object at 0x7f5ad11a9220>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2ab9befbf8ca367e3026fc5e1f90241b\")>\nspecialists_page_open = None\n\n    @allure.title(\"Verify values of names and professions in specialist cards in the grid\")\n    def test_sp_02_04_verify_name_and_profession_in_cards(self, driver, specialists_page_open):\n        page = SpecialistsPage(driver)\n        name_values = page.get_name_values_in_cards()\n>       profession_values = page.get_profession_values_in_cards()\n\ntests/specialists_page_test.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/specialists_page.py:178: in get_profession_values_in_cards\n    return [profession.text for profession in self.get_list_of_professions_in_cards()]\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5ad10e0bc0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#20 0x5594ad631e76 \\\\u003Cunknown>\\\\n#21 0x7f2d79c9caa4 \\\\u003Cunknown>\\\\n#22 0x7f2d79d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5594ad632ffa <unknown>\nE       #1 0x5594ad0f1970 <unknown>\nE       #2 0x5594ad0f850e <unknown>\nE       #3 0x5594ad0fad58 <unknown>\nE       #4 0x5594ad0fade3 <unknown>\nE       #5 0x5594ad13d99d <unknown>\nE       #6 0x5594ad169292 <unknown>\nE       #7 0x5594ad136e4a <unknown>\nE       #8 0x5594ad16945e <unknown>\nE       #9 0x5594ad18f70c <unknown>\nE       #10 0x5594ad169063 <unknown>\nE       #11 0x5594ad135328 <unknown>\nE       #12 0x5594ad136491 <unknown>\nE       #13 0x5594ad5fa42b <unknown>\nE       #14 0x5594ad5fe2ec <unknown>\nE       #15 0x5594ad5e1a22 <unknown>\nE       #16 0x5594ad5fee64 <unknown>\nE       #17 0x5594ad5c5bef <unknown>\nE       #18 0x5594ad621558 <unknown>\nE       #19 0x5594ad621736 <unknown>\nE       #20 0x5594ad631e76 <unknown>\nE       #21 0x7f2d79c9caa4 <unknown>\nE       #22 0x7f2d79d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Get the list of name values in specialist cards on the page",
      "time" : {
        "start" : 1744148258806,
        "stop" : 1744148258824,
        "duration" : 18
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Get the list of names in specialist cards on the 5th level of nesting on the page",
        "time" : {
          "start" : 1744148258806,
          "stop" : 1744148258814,
          "duration" : 8
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get the list of profession values in specialist cards on the page",
      "time" : {
        "start" : 1744148258824,
        "stop" : 1744148258902,
        "duration" : 78
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=134.0.6998.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5594ad632ffa <unknown>\n#1 0x5594ad0f1970 <unknown>\n#2 0x5594ad0f850e <unknown>\n#3 0x5594ad0fad58 <unknown>\n#4 0x5594ad0fade3 <unknown>\n#5 0x5594ad13d99d <unknown>\n#6 0x5594ad169292 <unknown>\n#7 0x5594ad136e4a <unknown>\n#8 0x5594ad16945e <unknown>\n#9 0x5594ad18f70c <unknown>\n#10 0x5594ad169063 <unknown>\n#11 0x5594ad135328 <unknown>\n#12 0x5594ad136491 <unknown>\n#13 0x5594ad5fa42b <unknown>\n#14 0x5594ad5fe2ec <unknown>\n#15 0x5594ad5e1a22 <unknown>\n#16 0x5594ad5fee64 <unknown>\n#17 0x5594ad5c5bef <unknown>\n#18 0x5594ad621558 <unknown>\n#19 0x5594ad621736 <unknown>\n#20 0x5594ad631e76 <unknown>\n#21 0x7f2d79c9caa4 <unknown>\n#22 0x7f2d79d29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/specialists_page.py\", line 178, in get_profession_values_in_cards\n    return [profession.text for profession in self.get_list_of_professions_in_cards()]\n            ^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Get the list of professions in specialist cards on the 6th level of nesting on the page",
        "time" : {
          "start" : 1744148258824,
          "stop" : 1744148258832,
          "duration" : 8
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "a80713442a19ce83",
      "name" : "Screenshot 2025-04-08 21:37:39.032495",
      "source" : "a80713442a19ce83.png",
      "type" : "image/png",
      "size" : 98461
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1744148259034,
      "stop" : 1744148259095,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Specialists Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "specialists_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestSpecialistsPage"
  }, {
    "name" : "host",
    "value" : "fv-az1692-384"
  }, {
    "name" : "thread",
    "value" : "2417-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.specialists_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 83,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "facd3903bca2eaa3",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/328//#testresult/facd3903bca2eaa3",
        "status" : "passed",
        "time" : {
          "start" : 1744075141864,
          "stop" : 1744075141974,
          "duration" : 110
        }
      }, {
        "uid" : "1f4c653e466b07f1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/532//#testresult/1f4c653e466b07f1",
        "status" : "passed",
        "time" : {
          "start" : 1744021832806,
          "stop" : 1744021832913,
          "duration" : 107
        }
      }, {
        "uid" : "45c62e4b911207e8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/327//#testresult/45c62e4b911207e8",
        "status" : "passed",
        "time" : {
          "start" : 1743989127171,
          "stop" : 1743989127275,
          "duration" : 104
        }
      }, {
        "uid" : "342930cb0ffa514f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/531//#testresult/342930cb0ffa514f",
        "status" : "passed",
        "time" : {
          "start" : 1743970324389,
          "stop" : 1743970324492,
          "duration" : 103
        }
      }, {
        "uid" : "9e4d17ac9d33292d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/326//#testresult/9e4d17ac9d33292d",
        "status" : "passed",
        "time" : {
          "start" : 1743902610846,
          "stop" : 1743902610948,
          "duration" : 102
        }
      }, {
        "uid" : "7ba742cf5f41d5da",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/530//#testresult/7ba742cf5f41d5da",
        "status" : "passed",
        "time" : {
          "start" : 1743844825771,
          "stop" : 1743844825874,
          "duration" : 103
        }
      }, {
        "uid" : "5a43062fe2bed0ef",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/325//#testresult/5a43062fe2bed0ef",
        "status" : "passed",
        "time" : {
          "start" : 1743815884319,
          "stop" : 1743815884423,
          "duration" : 104
        }
      }, {
        "uid" : "66a6da105f06fc95",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/529//#testresult/66a6da105f06fc95",
        "status" : "passed",
        "time" : {
          "start" : 1743797510754,
          "stop" : 1743797510862,
          "duration" : 108
        }
      }, {
        "uid" : "8ba17cf24eaaa9a4",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/324//#testresult/8ba17cf24eaaa9a4",
        "status" : "passed",
        "time" : {
          "start" : 1743729655824,
          "stop" : 1743729655934,
          "duration" : 110
        }
      }, {
        "uid" : "42116fbdcb4228df",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/528//#testresult/42116fbdcb4228df",
        "status" : "passed",
        "time" : {
          "start" : 1743678025932,
          "stop" : 1743678026038,
          "duration" : 106
        }
      }, {
        "uid" : "1bae77fef3dfb8c6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/323//#testresult/1bae77fef3dfb8c6",
        "status" : "passed",
        "time" : {
          "start" : 1743643394714,
          "stop" : 1743643394818,
          "duration" : 104
        }
      }, {
        "uid" : "730e2971e2d4a87a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/527//#testresult/730e2971e2d4a87a",
        "status" : "passed",
        "time" : {
          "start" : 1743617237891,
          "stop" : 1743617237997,
          "duration" : 106
        }
      }, {
        "uid" : "7ebe890b342be984",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/322//#testresult/7ebe890b342be984",
        "status" : "passed",
        "time" : {
          "start" : 1743556778607,
          "stop" : 1743556778712,
          "duration" : 105
        }
      }, {
        "uid" : "6540d1248cf178cd",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/526//#testresult/6540d1248cf178cd",
        "status" : "passed",
        "time" : {
          "start" : 1743534475305,
          "stop" : 1743534475415,
          "duration" : 110
        }
      }, {
        "uid" : "757b5d97572b2b1f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/321//#testresult/757b5d97572b2b1f",
        "status" : "passed",
        "time" : {
          "start" : 1743470877662,
          "stop" : 1743470877769,
          "duration" : 107
        }
      }, {
        "uid" : "e56d8d4676b25dd4",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/525//#testresult/e56d8d4676b25dd4",
        "status" : "passed",
        "time" : {
          "start" : 1743455040659,
          "stop" : 1743455040772,
          "duration" : 113
        }
      }, {
        "uid" : "62f4aed35c4a384b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/320//#testresult/62f4aed35c4a384b",
        "status" : "passed",
        "time" : {
          "start" : 1743384173764,
          "stop" : 1743384173868,
          "duration" : 104
        }
      }, {
        "uid" : "5c2e8ad82c502a29",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/319//#testresult/5c2e8ad82c502a29",
        "status" : "passed",
        "time" : {
          "start" : 1743298014865,
          "stop" : 1743298014967,
          "duration" : 102
        }
      }, {
        "uid" : "691737b728f08a64",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/524//#testresult/691737b728f08a64",
        "status" : "passed",
        "time" : {
          "start" : 1743283419228,
          "stop" : 1743283419330,
          "duration" : 102
        }
      }, {
        "uid" : "ba71b75e7f94eedc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/523//#testresult/ba71b75e7f94eedc",
        "status" : "passed",
        "time" : {
          "start" : 1743262712881,
          "stop" : 1743262712983,
          "duration" : 102
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a8c4653db6974020.json",
  "parameterValues" : [ ]
}
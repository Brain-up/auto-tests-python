{
  "uid" : "5ad7f529fbb46450",
  "name" : "Select random card from group \"Слова\" and compare UI vs BACKEND data.",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_random_word_cards_ru",
  "historyId" : "8a3e3d5c9f6e80dd99c857fd999b79e1",
  "time" : {
    "start" : 1744148435284,
    "stop" : 1744148439345,
    "duration" : 4061
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 12",
  "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f5ad1115c70>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"412ed8c8b5eea34f899c8ef13b4156c5\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select random card from group \"Слова\" and compare UI vs BACKEND data.')\n    def test_random_word_cards_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_BUTTON_RU)\n        seria_id = page.set_url_to_get_id_words_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 12, seria_id = '1'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group')\n    def get_random_id_from_list_sub_group(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n>       id_number = random.choice(result_get['data'][card_id]['exercises'])\nE       KeyError: 12\n\npages/speech_exercises_page_api.py:46: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1744148429443,
      "stop" : 1744148432516,
      "duration" : 3073
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1744148429443,
        "stop" : 1744148432516,
        "duration" : 3073
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"412ed8c8b5eea34f899c8ef13b4156c5\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1744148428527,
      "stop" : 1744148429443,
      "duration" : 916
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "specialist_user_authorized",
    "time" : {
      "start" : 1744148432516,
      "stop" : 1744148435284,
      "duration" : 2768
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "USER specialist authorized",
      "time" : {
        "start" : 1744148432516,
        "stop" : 1744148435284,
        "duration" : 2768
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check url is present: https://www.brainup.site/groups",
        "time" : {
          "start" : 1744148433217,
          "stop" : 1744148435252,
          "duration" : 2035
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Loader checking",
        "time" : {
          "start" : 1744148435252,
          "stop" : 1744148435284,
          "duration" : 32
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"412ed8c8b5eea34f899c8ef13b4156c5\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1744138652012,
      "stop" : 1744138652012,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 12",
    "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f5ad1115c70>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"412ed8c8b5eea34f899c8ef13b4156c5\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select random card from group \"Слова\" and compare UI vs BACKEND data.')\n    def test_random_word_cards_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_BUTTON_RU)\n        seria_id = page.set_url_to_get_id_words_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 12, seria_id = '1'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group')\n    def get_random_id_from_list_sub_group(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n>       id_number = random.choice(result_get['data'][card_id]['exercises'])\nE       KeyError: 12\n\npages/speech_exercises_page_api.py:46: KeyError",
    "steps" : [ {
      "name" : "select_group",
      "time" : {
        "start" : 1744148435285,
        "stop" : 1744148437819,
        "duration" : 2534
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Select Russian language. Click \"RU\" button.",
        "time" : {
          "start" : 1744148435285,
          "stop" : 1744148435399,
          "duration" : 114
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"Речевые упражнения\".",
        "time" : {
          "start" : 1744148435399,
          "stop" : 1744148436599,
          "duration" : 1200
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"СЛОВА\".",
        "time" : {
          "start" : 1744148437699,
          "stop" : 1744148437819,
          "duration" : 120
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "selector_for_sub_group",
        "value" : "('xpath', '//button[@data-test-active-link=\"Слова\"]')"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get seria ID from URL: https://www.brainup.site/groups/2/series/1",
      "time" : {
        "start" : 1744148437819,
        "stop" : 1744148437839,
        "duration" : 20
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Wait until url to be: https://www.brainup.site/groups/2/series/1.",
        "time" : {
          "start" : 1744148437819,
          "stop" : 1744148437827,
          "duration" : 8
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "click_random_card",
      "time" : {
        "start" : 1744148437839,
        "stop" : 1744148438371,
        "duration" : 532
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Getting list cards: ['Семья', 'Любимый дом', 'Что я ем', 'Одежда', 'В школе', 'Математика', 'Домашние питомцы', 'Мир животных', 'Транспорт', 'Цвета и форма', 'В городе', 'В деревне', 'На прогулке', 'Погода', 'Стану кем хочу', 'Тело человека', 'Развлечения', 'Путешествия', 'В больнице', 'Что я чувствую', 'Игрушки', 'Насекомые', 'Интерьер', 'На кухне', 'Музыка', 'Музыкальные инструменты', 'Птицы', 'Украшения', 'История', 'Действия', 'Действия(слышимые)', 'Транспорт Дополнение', 'Транспорт (спецтехника)', 'Плодовые деревья и кусты', 'Растения', 'Деревья и кустарники', 'Спорт', 'В магазине', 'Парнокопытные', 'Породы собак', 'Канцелярские принадлежности', 'Цветы', 'Русский язык и литература', 'Физика', 'Биология', 'Инструменты']",
        "time" : {
          "start" : 1744148438195,
          "stop" : 1744148438195,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Select random id from list of cards. \nCard ID in list is:, 13",
        "time" : {
          "start" : 1744148438195,
          "stop" : 1744148438195,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Selected card is: На прогулке",
        "time" : {
          "start" : 1744148438214,
          "stop" : 1744148438352,
          "duration" : 138
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "get_random_id_from_list_sub_group",
      "time" : {
        "start" : 1744148438371,
        "stop" : 1744148439345,
        "duration" : 974
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 12\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/speech_exercises_page_api.py\", line 46, in get_random_id_from_list_sub_group\n    id_number = random.choice(result_get['data'][card_id]['exercises'])\n                              ~~~~~~~~~~~~~~~~~~^^^^^^^^^\n",
      "steps" : [ {
        "name" : "Status code is: 403",
        "time" : {
          "start" : 1744148439345,
          "stop" : 1744148439345,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Send GET request with params: https://www.brainup.site/api/subgroups?seriesId=1headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{id_token}\"",
        "time" : {
          "start" : 1744148439345,
          "stop" : 1744148439345,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Getting list of cards id: {'data': {}, 'errors': ['Доступ запрещен'], 'meta': []}",
        "time" : {
          "start" : 1744148439345,
          "stop" : 1744148439345,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "card_id",
        "value" : "12"
      }, {
        "name" : "seria_id",
        "value" : "'1'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1744148439356,
      "stop" : 1744148439421,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Речевые упражнения."
  }, {
    "name" : "epic",
    "value" : "Speech exercises."
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1692-384"
  }, {
    "name" : "thread",
    "value" : "2417-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 4,
        "passed" : 81,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "81a77c894052e827",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/328//#testresult/81a77c894052e827",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744075305702,
          "stop" : 1744075314291,
          "duration" : 8589
        }
      }, {
        "uid" : "1190c5f3ef4d9f34",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/532//#testresult/1190c5f3ef4d9f34",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744022026432,
          "stop" : 1744022035816,
          "duration" : 9384
        }
      }, {
        "uid" : "6db613df1e569880",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/327//#testresult/6db613df1e569880",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743989320731,
          "stop" : 1743989330047,
          "duration" : 9316
        }
      }, {
        "uid" : "e7b0c9d0444ab0d8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/531//#testresult/e7b0c9d0444ab0d8",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743970487764,
          "stop" : 1743970496206,
          "duration" : 8442
        }
      }, {
        "uid" : "8eedb653ef148330",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/326//#testresult/8eedb653ef148330",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743902776459,
          "stop" : 1743902784675,
          "duration" : 8216
        }
      }, {
        "uid" : "ca33ccab791fcf93",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/530//#testresult/ca33ccab791fcf93",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743845010288,
          "stop" : 1743845019549,
          "duration" : 9261
        }
      }, {
        "uid" : "d8236bb9f6ccf6cc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/325//#testresult/d8236bb9f6ccf6cc",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743816048952,
          "stop" : 1743816058043,
          "duration" : 9091
        }
      }, {
        "uid" : "bd84cd196fd4290a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/529//#testresult/bd84cd196fd4290a",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743797682925,
          "stop" : 1743797691696,
          "duration" : 8771
        }
      }, {
        "uid" : "91a6f1071d1ad5e5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/324//#testresult/91a6f1071d1ad5e5",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743729832413,
          "stop" : 1743729840391,
          "duration" : 7978
        }
      }, {
        "uid" : "52e349c3ad28e5f1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/528//#testresult/52e349c3ad28e5f1",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743678201887,
          "stop" : 1743678209787,
          "duration" : 7900
        }
      }, {
        "uid" : "b611710ed17a6c69",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/323//#testresult/b611710ed17a6c69",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743643591961,
          "stop" : 1743643600918,
          "duration" : 8957
        }
      }, {
        "uid" : "cc137d6da0e0a237",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/527//#testresult/cc137d6da0e0a237",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743617432283,
          "stop" : 1743617441047,
          "duration" : 8764
        }
      }, {
        "uid" : "8bde4d195acee57b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/322//#testresult/8bde4d195acee57b",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743556943039,
          "stop" : 1743556951239,
          "duration" : 8200
        }
      }, {
        "uid" : "5532c005ff533a03",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/526//#testresult/5532c005ff533a03",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743534640815,
          "stop" : 1743534650428,
          "duration" : 9613
        }
      }, {
        "uid" : "3dd594c7995ba2d0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/321//#testresult/3dd594c7995ba2d0",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743471022002,
          "stop" : 1743471034333,
          "duration" : 12331
        }
      }, {
        "uid" : "67f131dfd85c8764",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/525//#testresult/67f131dfd85c8764",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743455211783,
          "stop" : 1743455220124,
          "duration" : 8341
        }
      }, {
        "uid" : "801c732b313e2e8d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/320//#testresult/801c732b313e2e8d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743384342466,
          "stop" : 1743384352032,
          "duration" : 9566
        }
      }, {
        "uid" : "deae4d71c4b60473",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/319//#testresult/deae4d71c4b60473",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743298205483,
          "stop" : 1743298214562,
          "duration" : 9079
        }
      }, {
        "uid" : "9f95686f1111c773",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/524//#testresult/9f95686f1111c773",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743283583516,
          "stop" : 1743283591775,
          "duration" : 8259
        }
      }, {
        "uid" : "4b8a602d0819f9b8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/523//#testresult/4b8a602d0819f9b8",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1743262876680,
          "stop" : 1743262884911,
          "duration" : 8231
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "5ad7f529fbb46450.json",
  "parameterValues" : [ ]
}
{
  "uid" : "813bd752474f47a4",
  "name" : "Select a random card from \"Похожие фразы\" group and compare UI vs BACKEND data.",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_random_cards_in_similar_phrases_ru",
  "historyId" : "5e981df7bf46eebe64ca49edd6dd6d63",
  "time" : {
    "start" : 1741729799779,
    "stop" : 1741729804895,
    "duration" : 5116
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 3",
  "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f50c47a7ef0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d7900a8b4442dc3b6a8f7c4b6018a4bb\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select a random card from \"Похожие фразы\" group and compare UI vs BACKEND data.')\n    def test_random_cards_in_similar_phrases_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_SIMILAR_PHRASES_RU)\n        seria_id = page.set_url_to_get_id_similar_phrase_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 3, seria_id = '2'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group')\n    def get_random_id_from_list_sub_group(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n>       id_number = random.choice(result_get['data'][card_id]['exercises'])\nE       KeyError: 3\n\npages/speech_exercises_page_api.py:46: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1741729793246,
      "stop" : 1741729794069,
      "duration" : 823
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1741722837381,
      "stop" : 1741722837381,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "specialist_user_authorized",
    "time" : {
      "start" : 1741729796829,
      "stop" : 1741729799778,
      "duration" : 2949
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "USER specialist authorized",
      "time" : {
        "start" : 1741729796829,
        "stop" : 1741729799778,
        "duration" : 2949
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check url is present: https://www.brainup.site/groups",
        "time" : {
          "start" : 1741729797231,
          "stop" : 1741729799757,
          "duration" : 2526
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Loader checking",
        "time" : {
          "start" : 1741729799757,
          "stop" : 1741729799778,
          "duration" : 21
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d7900a8b4442dc3b6a8f7c4b6018a4bb\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1741729794069,
      "stop" : 1741729796828,
      "duration" : 2759
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1741729794069,
        "stop" : 1741729796828,
        "duration" : 2759
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"d7900a8b4442dc3b6a8f7c4b6018a4bb\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 3",
    "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f50c47a7ef0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d7900a8b4442dc3b6a8f7c4b6018a4bb\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select a random card from \"Похожие фразы\" group and compare UI vs BACKEND data.')\n    def test_random_cards_in_similar_phrases_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_SIMILAR_PHRASES_RU)\n        seria_id = page.set_url_to_get_id_similar_phrase_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 3, seria_id = '2'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group')\n    def get_random_id_from_list_sub_group(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n>       id_number = random.choice(result_get['data'][card_id]['exercises'])\nE       KeyError: 3\n\npages/speech_exercises_page_api.py:46: KeyError",
    "steps" : [ {
      "name" : "select_group",
      "time" : {
        "start" : 1741729799779,
        "stop" : 1741729803155,
        "duration" : 3376
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Select Russian language. Click \"RU\" button.",
        "time" : {
          "start" : 1741729799779,
          "stop" : 1741729799857,
          "duration" : 78
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"Речевые упражнения\".",
        "time" : {
          "start" : 1741729799857,
          "stop" : 1741729801487,
          "duration" : 1630
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"ПОХОЖИЕ ФРАЗЫ\".",
        "time" : {
          "start" : 1741729803077,
          "stop" : 1741729803155,
          "duration" : 78
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "selector_for_sub_group",
        "value" : "('xpath', '//button[@title=\"Распознавание похожих фраз\"]')"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get seria ID from URL: https://www.brainup.site/groups/2/series/2",
      "time" : {
        "start" : 1741729803156,
        "stop" : 1741729804193,
        "duration" : 1037
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Wait until url to be: https://www.brainup.site/groups/2/series/2.",
        "time" : {
          "start" : 1741729803156,
          "stop" : 1741729804190,
          "duration" : 1034
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "click_random_card",
      "time" : {
        "start" : 1741729804194,
        "stop" : 1741729804343,
        "duration" : 149
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Getting list cards: ['Разной длительности', 'С частицей Не', 'Похожие', 'С разным окончанием', 'Из коротких слов', 'С разными предлогами']",
        "time" : {
          "start" : 1741729804254,
          "stop" : 1741729804254,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Select random id from list of cards. \nCard ID in list is:, 4",
        "time" : {
          "start" : 1741729804254,
          "stop" : 1741729804254,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Selected card is: С разным окончанием",
        "time" : {
          "start" : 1741729804269,
          "stop" : 1741729804335,
          "duration" : 66
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "get_random_id_from_list_sub_group",
      "time" : {
        "start" : 1741729804344,
        "stop" : 1741729804895,
        "duration" : 551
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 3\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/speech_exercises_page_api.py\", line 46, in get_random_id_from_list_sub_group\n    id_number = random.choice(result_get['data'][card_id]['exercises'])\n                              ~~~~~~~~~~~~~~~~~~^^^^^^^^^\n",
      "steps" : [ {
        "name" : "Status code is: 403",
        "time" : {
          "start" : 1741729804895,
          "stop" : 1741729804895,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Send GET request with params: https://www.brainup.site/api/subgroups?seriesId=2headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{id_token}\"",
        "time" : {
          "start" : 1741729804895,
          "stop" : 1741729804895,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Getting list of cards id: {'data': {}, 'errors': ['Доступ запрещен'], 'meta': []}",
        "time" : {
          "start" : 1741729804895,
          "stop" : 1741729804895,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "card_id",
        "value" : "3"
      }, {
        "name" : "seria_id",
        "value" : "'2'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1741729804905,
      "stop" : 1741729804976,
      "duration" : 71
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Speech exercises."
  }, {
    "name" : "suite",
    "value" : "Речевые упражнения."
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1718-750"
  }, {
    "name" : "thread",
    "value" : "2447-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 2,
        "passed" : 27,
        "unknown" : 0,
        "total" : 29
      },
      "items" : [ {
        "uid" : "458d13732acc9c29",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/300//#testresult/458d13732acc9c29",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nselenium.common.exceptions.TimeoutException: Message: Url: https://www.brainup.site/groups/2/series/2/exercise/1382 has not been changed!!!",
        "time" : {
          "start" : 1741656141479,
          "stop" : 1741656208845,
          "duration" : 67366
        }
      }, {
        "uid" : "4a5a6bccef883825",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/504//#testresult/4a5a6bccef883825",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741622969932,
          "stop" : 1741622982625,
          "duration" : 12693
        }
      }, {
        "uid" : "89628ac32a99bb92",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/299//#testresult/89628ac32a99bb92",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741569333956,
          "stop" : 1741569346061,
          "duration" : 12105
        }
      }, {
        "uid" : "9c267c7949e269f0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/503//#testresult/9c267c7949e269f0",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741553315535,
          "stop" : 1741553326984,
          "duration" : 11449
        }
      }, {
        "uid" : "95fa0ccdf1a84b3a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/298//#testresult/95fa0ccdf1a84b3a",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741482798880,
          "stop" : 1741482809735,
          "duration" : 10855
        }
      }, {
        "uid" : "7752d3a24cc4f478",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/502//#testresult/7752d3a24cc4f478",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741434116341,
          "stop" : 1741434127677,
          "duration" : 11336
        }
      }, {
        "uid" : "a009dbe20e3ddbda",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/297//#testresult/a009dbe20e3ddbda",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741396102634,
          "stop" : 1741396113982,
          "duration" : 11348
        }
      }, {
        "uid" : "4620c7769966cc95",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/501//#testresult/4620c7769966cc95",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741381254355,
          "stop" : 1741381266432,
          "duration" : 12077
        }
      }, {
        "uid" : "eec95f3f6a25d447",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/296//#testresult/eec95f3f6a25d447",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741310654552,
          "stop" : 1741310666484,
          "duration" : 11932
        }
      }, {
        "uid" : "f1dfe68bcecfcbf7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/500//#testresult/f1dfe68bcecfcbf7",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741259474131,
          "stop" : 1741259486585,
          "duration" : 12454
        }
      }, {
        "uid" : "6cccd3185d2017d9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/295//#testresult/6cccd3185d2017d9",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741223998126,
          "stop" : 1741224009482,
          "duration" : 11356
        }
      }, {
        "uid" : "f99207d9248a51c1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/499//#testresult/f99207d9248a51c1",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741207965492,
          "stop" : 1741207977620,
          "duration" : 12128
        }
      }, {
        "uid" : "81d627686a72e24e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/294//#testresult/81d627686a72e24e",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741137662101,
          "stop" : 1741137673905,
          "duration" : 11804
        }
      }, {
        "uid" : "2d738a5f07baec4d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/498//#testresult/2d738a5f07baec4d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741089396222,
          "stop" : 1741089408501,
          "duration" : 12279
        }
      }, {
        "uid" : "270b19d1e03aa03f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/293//#testresult/270b19d1e03aa03f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741051217361,
          "stop" : 1741051228620,
          "duration" : 11259
        }
      }, {
        "uid" : "8cd4405e826c4259",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/497//#testresult/8cd4405e826c4259",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741037232008,
          "stop" : 1741037244006,
          "duration" : 11998
        }
      }, {
        "uid" : "b6d7359411094856",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/497//#testresult/b6d7359411094856",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1741033245328,
          "stop" : 1741033257550,
          "duration" : 12222
        }
      }, {
        "uid" : "1b7be22b37927475",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/292//#testresult/1b7be22b37927475",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1740964836500,
          "stop" : 1740964848213,
          "duration" : 11713
        }
      }, {
        "uid" : "6492d083ef9c6991",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/496//#testresult/6492d083ef9c6991",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1740911626785,
          "stop" : 1740911638894,
          "duration" : 12109
        }
      }, {
        "uid" : "fc44dbae2895cf8a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/291//#testresult/fc44dbae2895cf8a",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1740878576512,
          "stop" : 1740878586989,
          "duration" : 10477
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "813bd752474f47a4.json",
  "parameterValues" : [ ]
}
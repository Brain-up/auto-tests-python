{
  "uid" : "7d7d30e55984fb32",
  "name" : "Checking the possibility of authorization with the correct data",
  "fullName" : "tests.authorisation_page_test.TestAuthorizedUserPage#test_auth_user_with_correct_data",
  "historyId" : "694ff1b8129511a73727da75eece5283",
  "time" : {
    "start" : 1750986484715,
    "stop" : 1750986484715,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.309\n  (Session info: chrome=137.0.7151.119)\nStacktrace:\n#0 0x55d90483745a <unknown>\n#1 0x55d9042dc760 <unknown>\n#2 0x55d9042c4411 <unknown>\n#3 0x55d9042c4115 <unknown>\n#4 0x55d9042c1f75 <unknown>\n#5 0x55d9042c28cf <unknown>\n#6 0x55d9042d1703 <unknown>\n#7 0x55d9042ead0e <unknown>\n#8 0x55d9042f150b <unknown>\n#9 0x55d9042c3010 <unknown>\n#10 0x55d9042eaa2e <unknown>\n#11 0x55d90437a66f <unknown>\n#12 0x55d904353c23 <unknown>\n#13 0x55d9043204a5 <unknown>\n#14 0x55d904321111 <unknown>\n#15 0x55d9047fbf1b <unknown>\n#16 0x55d9047ffe19 <unknown>\n#17 0x55d9047e2ac9 <unknown>\n#18 0x55d9048009c8 <unknown>\n#19 0x55d9047c734f <unknown>\n#20 0x55d904824a28 <unknown>\n#21 0x55d904824c06 <unknown>\n#22 0x55d904836336 <unknown>\n#23 0x7fdc7e69caa4 <unknown>\n#24 0x7fdc7e729c3c <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9307ba554490b6ddd294efbe41a11ad0\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f891cbf6780>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#22 0x55d904836336 \\\\u003Cunknown>\\\\n#23 0x7fdc7e69caa4 \\\\u003Cunknown>\\\\n#24 0x7fdc7e729c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.309\nE         (Session info: chrome=137.0.7151.119)\nE       Stacktrace:\nE       #0 0x55d90483745a <unknown>\nE       #1 0x55d9042dc760 <unknown>\nE       #2 0x55d9042c4411 <unknown>\nE       #3 0x55d9042c4115 <unknown>\nE       #4 0x55d9042c1f75 <unknown>\nE       #5 0x55d9042c28cf <unknown>\nE       #6 0x55d9042d1703 <unknown>\nE       #7 0x55d9042ead0e <unknown>\nE       #8 0x55d9042f150b <unknown>\nE       #9 0x55d9042c3010 <unknown>\nE       #10 0x55d9042eaa2e <unknown>\nE       #11 0x55d90437a66f <unknown>\nE       #12 0x55d904353c23 <unknown>\nE       #13 0x55d9043204a5 <unknown>\nE       #14 0x55d904321111 <unknown>\nE       #15 0x55d9047fbf1b <unknown>\nE       #16 0x55d9047ffe19 <unknown>\nE       #17 0x55d9047e2ac9 <unknown>\nE       #18 0x55d9048009c8 <unknown>\nE       #19 0x55d9047c734f <unknown>\nE       #20 0x55d904824a28 <unknown>\nE       #21 0x55d904824c06 <unknown>\nE       #22 0x55d904836336 <unknown>\nE       #23 0x7fdc7e69caa4 <unknown>\nE       #24 0x7fdc7e729c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1750986484716,
      "stop" : 1750986507431,
      "duration" : 22715
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1750986507431,
      "stop" : 1750986807482,
      "duration" : 300051
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.309\n  (Session info: chrome=137.0.7151.119)\nStacktrace:\n#0 0x55d90483745a <unknown>\n#1 0x55d9042dc760 <unknown>\n#2 0x55d9042c4411 <unknown>\n#3 0x55d9042c4115 <unknown>\n#4 0x55d9042c1f75 <unknown>\n#5 0x55d9042c28cf <unknown>\n#6 0x55d9042d1703 <unknown>\n#7 0x55d9042ead0e <unknown>\n#8 0x55d9042f150b <unknown>\n#9 0x55d9042c3010 <unknown>\n#10 0x55d9042eaa2e <unknown>\n#11 0x55d90437a66f <unknown>\n#12 0x55d904353c23 <unknown>\n#13 0x55d9043204a5 <unknown>\n#14 0x55d904321111 <unknown>\n#15 0x55d9047fbf1b <unknown>\n#16 0x55d9047ffe19 <unknown>\n#17 0x55d9047e2ac9 <unknown>\n#18 0x55d9048009c8 <unknown>\n#19 0x55d9047c734f <unknown>\n#20 0x55d904824a28 <unknown>\n#21 0x55d904824c06 <unknown>\n#22 0x55d904836336 <unknown>\n#23 0x7fdc7e69caa4 <unknown>\n#24 0x7fdc7e729c3c <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 32, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1750986507431,
        "stop" : 1750986807481,
        "duration" : 300050
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.309\n  (Session info: chrome=137.0.7151.119)\nStacktrace:\n#0 0x55d90483745a <unknown>\n#1 0x55d9042dc760 <unknown>\n#2 0x55d9042c4411 <unknown>\n#3 0x55d9042c4115 <unknown>\n#4 0x55d9042c1f75 <unknown>\n#5 0x55d9042c28cf <unknown>\n#6 0x55d9042d1703 <unknown>\n#7 0x55d9042ead0e <unknown>\n#8 0x55d9042f150b <unknown>\n#9 0x55d9042c3010 <unknown>\n#10 0x55d9042eaa2e <unknown>\n#11 0x55d90437a66f <unknown>\n#12 0x55d904353c23 <unknown>\n#13 0x55d9043204a5 <unknown>\n#14 0x55d904321111 <unknown>\n#15 0x55d9047fbf1b <unknown>\n#16 0x55d9047ffe19 <unknown>\n#17 0x55d9047e2ac9 <unknown>\n#18 0x55d9048009c8 <unknown>\n#19 0x55d9047c734f <unknown>\n#20 0x55d904824a28 <unknown>\n#21 0x55d904824c06 <unknown>\n#22 0x55d904836336 <unknown>\n#23 0x7fdc7e69caa4 <unknown>\n#24 0x7fdc7e729c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 32, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9307ba554490b6ddd294efbe41a11ad0\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1750986484716,
      "stop" : 1750986484716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1750986807537,
      "stop" : 1750986807626,
      "duration" : 89
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Authorized User Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "authorisation_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAuthorizedUserPage"
  }, {
    "name" : "host",
    "value" : "pkrvmbietmlfzoi"
  }, {
    "name" : "thread",
    "value" : "2532-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.authorisation_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 236,
        "unknown" : 0,
        "total" : 239
      },
      "items" : [ {
        "uid" : "fc0e5034702ef9e9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/610//#testresult/fc0e5034702ef9e9",
        "status" : "passed",
        "time" : {
          "start" : 1750931572842,
          "stop" : 1750931573927,
          "duration" : 1085
        }
      }, {
        "uid" : "3ffc0aa825cf9660",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/407//#testresult/3ffc0aa825cf9660",
        "status" : "passed",
        "time" : {
          "start" : 1750900045708,
          "stop" : 1750900047555,
          "duration" : 1847
        }
      }, {
        "uid" : "fb7b2c17e1901a80",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/609//#testresult/fb7b2c17e1901a80",
        "status" : "passed",
        "time" : {
          "start" : 1750851481972,
          "stop" : 1750851483401,
          "duration" : 1429
        }
      }, {
        "uid" : "bac0c5588b3cc116",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/406//#testresult/bac0c5588b3cc116",
        "status" : "passed",
        "time" : {
          "start" : 1750813686244,
          "stop" : 1750813687206,
          "duration" : 962
        }
      }, {
        "uid" : "242d139ed3dc775e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/608//#testresult/242d139ed3dc775e",
        "status" : "passed",
        "time" : {
          "start" : 1750758651911,
          "stop" : 1750758653033,
          "duration" : 1122
        }
      }, {
        "uid" : "bf231430af750940",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/405//#testresult/bf231430af750940",
        "status" : "passed",
        "time" : {
          "start" : 1750727260285,
          "stop" : 1750727261357,
          "duration" : 1072
        }
      }, {
        "uid" : "427624aa49c405b5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/607//#testresult/427624aa49c405b5",
        "status" : "passed",
        "time" : {
          "start" : 1750677700885,
          "stop" : 1750677702041,
          "duration" : 1156
        }
      }, {
        "uid" : "53f7b9b53a409d9a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/404//#testresult/53f7b9b53a409d9a",
        "status" : "passed",
        "time" : {
          "start" : 1750641095827,
          "stop" : 1750641097076,
          "duration" : 1249
        }
      }, {
        "uid" : "22b1156fccd227dc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/606//#testresult/22b1156fccd227dc",
        "status" : "passed",
        "time" : {
          "start" : 1750594486101,
          "stop" : 1750594487973,
          "duration" : 1872
        }
      }, {
        "uid" : "652840b053a68a53",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/403//#testresult/652840b053a68a53",
        "status" : "passed",
        "time" : {
          "start" : 1750554822923,
          "stop" : 1750554824022,
          "duration" : 1099
        }
      }, {
        "uid" : "eed67c52eb060c1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/605//#testresult/eed67c52eb060c1",
        "status" : "passed",
        "time" : {
          "start" : 1750503325649,
          "stop" : 1750503326705,
          "duration" : 1056
        }
      }, {
        "uid" : "5a67bad44b5fbc07",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/402//#testresult/5a67bad44b5fbc07",
        "status" : "passed",
        "time" : {
          "start" : 1750467959516,
          "stop" : 1750467960597,
          "duration" : 1081
        }
      }, {
        "uid" : "37f0f001eb077cef",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/604//#testresult/37f0f001eb077cef",
        "status" : "passed",
        "time" : {
          "start" : 1750410830353,
          "stop" : 1750410831544,
          "duration" : 1191
        }
      }, {
        "uid" : "f12af237fffae7a0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/401//#testresult/f12af237fffae7a0",
        "status" : "passed",
        "time" : {
          "start" : 1750381606707,
          "stop" : 1750381607868,
          "duration" : 1161
        }
      }, {
        "uid" : "8d2992c95f5d9a26",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/603//#testresult/8d2992c95f5d9a26",
        "status" : "passed",
        "time" : {
          "start" : 1750358399661,
          "stop" : 1750358400755,
          "duration" : 1094
        }
      }, {
        "uid" : "fd4c91a34bfb3cb5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/400//#testresult/fd4c91a34bfb3cb5",
        "status" : "passed",
        "time" : {
          "start" : 1750295238160,
          "stop" : 1750295239242,
          "duration" : 1082
        }
      }, {
        "uid" : "fdb7613e7d974373",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/602//#testresult/fdb7613e7d974373",
        "status" : "passed",
        "time" : {
          "start" : 1750234654980,
          "stop" : 1750234656204,
          "duration" : 1224
        }
      }, {
        "uid" : "e04efdc5fc1b857c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/399//#testresult/e04efdc5fc1b857c",
        "status" : "passed",
        "time" : {
          "start" : 1750208816427,
          "stop" : 1750208817559,
          "duration" : 1132
        }
      }, {
        "uid" : "3ef33f934480450e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/601//#testresult/3ef33f934480450e",
        "status" : "passed",
        "time" : {
          "start" : 1750182310634,
          "stop" : 1750182312222,
          "duration" : 1588
        }
      }, {
        "uid" : "f3d84cdf4785eeae",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/398//#testresult/f3d84cdf4785eeae",
        "status" : "passed",
        "time" : {
          "start" : 1750122455261,
          "stop" : 1750122456840,
          "duration" : 1579
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7d7d30e55984fb32.json",
  "parameterValues" : [ ]
}
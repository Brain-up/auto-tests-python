{
  "uid" : "207f06c29bb8dc20",
  "name" : "Select random card from group \"Слова Королёвой\" and compare UI vs BACKEND data.",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_random_word_by_koroleva_cards_ru",
  "historyId" : "719ec095fba3c0668a1a244a8c64916e",
  "time" : {
    "start" : 1716532222477,
    "stop" : 1716532287884,
    "duration" : 65407
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/requests/models.py:971: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0108b1ef60>\ns = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title>Error</title>\\n<style>\\nhtml { color-scheme: light dark; }\\nbody { width: 35e...ce then you should check\\nthe error log for details.</p>\\n<p><em>Faithfully yours, nginx.</em></p>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f01079bb170>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select random card from group \"Слова Королёвой\" and compare UI vs BACKEND data.')\n    def test_random_word_by_koroleva_cards_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_BY_KOROLEVA_BUTTON)\n        seria_id = page.set_url_to_get_id_words_koroleva_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/speech_exercises_page_api.py:41: in get_random_id_from_list_sub_group\n    with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/requests/models.py:975: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1716532217013,
      "stop" : 1716532220094,
      "duration" : 3081
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1716532217014,
        "stop" : 1716532220094,
        "duration" : 3080
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "specialist_user_authorized",
    "time" : {
      "start" : 1716532220094,
      "stop" : 1716532222477,
      "duration" : 2383
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "USER specialist authorized",
      "time" : {
        "start" : 1716532220094,
        "stop" : 1716532222477,
        "duration" : 2383
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check element is visible and clickable: ('xpath', '//a[@id=\"ember11\"]')",
        "time" : {
          "start" : 1716532220094,
          "stop" : 1716532220137,
          "duration" : 43
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1716532220115,
            "stop" : 1716532220137,
            "duration" : 22
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('xpath', '//a[@id=\"ember11\"]')",
            "time" : {
              "start" : 1716532220115,
              "stop" : 1716532220137,
              "duration" : 22
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('xpath', '//a[@id=\"ember11\"]')"
          } ],
          "stepsCount" : 1,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Check element is visible: ('xpath', '//input[@id=\"login\"]')",
        "time" : {
          "start" : 1716532220189,
          "stop" : 1716532220216,
          "duration" : 27
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is present: ('xpath', '//input[@id=\"login\"]')",
          "time" : {
            "start" : 1716532220189,
            "stop" : 1716532220199,
            "duration" : 10
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Go to element: <selenium.webdriver.remote.webelement.WebElement (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\", element=\"f.576CE193B058A5B1C3B03E7BC04C8270.d.8C1B911B66C1AF67F23C6643CC3EBA07.e.27\")>",
          "time" : {
            "start" : 1716532220199,
            "stop" : 1716532220204,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Check element is visible: ('xpath', '//input[@id=\"password\"]')",
        "time" : {
          "start" : 1716532220285,
          "stop" : 1716532220315,
          "duration" : 30
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is present: ('xpath', '//input[@id=\"password\"]')",
          "time" : {
            "start" : 1716532220285,
            "stop" : 1716532220295,
            "duration" : 10
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        }, {
          "name" : "Go to element: <selenium.webdriver.remote.webelement.WebElement (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\", element=\"f.576CE193B058A5B1C3B03E7BC04C8270.d.8C1B911B66C1AF67F23C6643CC3EBA07.e.30\")>",
          "time" : {
            "start" : 1716532220296,
            "stop" : 1716532220302,
            "duration" : 6
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Check element is visible and clickable: ('xpath', '//*[@type=\"submit\"]')",
        "time" : {
          "start" : 1716532220356,
          "stop" : 1716532220397,
          "duration" : 41
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1716532220371,
            "stop" : 1716532220397,
            "duration" : 26
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('xpath', '//*[@type=\"submit\"]')",
            "time" : {
              "start" : 1716532220371,
              "stop" : 1716532220397,
              "duration" : 26
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('xpath', '//*[@type=\"submit\"]')"
          } ],
          "stepsCount" : 1,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Check url is present: https://brainup.site/groups",
        "time" : {
          "start" : 1716532220454,
          "stop" : 1716532222477,
          "duration" : 2023
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 13,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1716531527783,
      "stop" : 1716531527783,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1716532216320,
      "stop" : 1716532217013,
      "duration" : 693
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
    "statusTrace" : "self = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/requests/models.py:971: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f0108b1ef60>\ns = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title>Error</title>\\n<style>\\nhtml { color-scheme: light dark; }\\nbody { width: 35e...ce then you should check\\nthe error log for details.</p>\\n<p><em>Faithfully yours, nginx.</em></p>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f01079bb170>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select random card from group \"Слова Королёвой\" and compare UI vs BACKEND data.')\n    def test_random_word_by_koroleva_cards_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_BY_KOROLEVA_BUTTON)\n        seria_id = page.set_url_to_get_id_words_koroleva_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/speech_exercises_page_api.py:41: in get_random_id_from_list_sub_group\n    with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/requests/models.py:975: JSONDecodeError",
    "steps" : [ {
      "name" : "select_group",
      "time" : {
        "start" : 1716532222478,
        "stop" : 1716532225928,
        "duration" : 3450
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Select Russian language. Click \"RU\" button.",
        "time" : {
          "start" : 1716532222478,
          "stop" : 1716532222555,
          "duration" : 77
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is visible and clickable: ('xpath', \"//*[contains(text(),'RU')]\")",
          "time" : {
            "start" : 1716532222478,
            "stop" : 1716532222521,
            "duration" : 43
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable",
            "time" : {
              "start" : 1716532222504,
              "stop" : 1716532222521,
              "duration" : 17
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Check element is clickable: ('xpath', \"//*[contains(text(),'RU')]\")",
              "time" : {
                "start" : 1716532222504,
                "stop" : 1716532222521,
                "duration" : 17
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "stepsCount" : 0,
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ {
              "name" : "locator",
              "value" : "('xpath', \"//*[contains(text(),'RU')]\")"
            } ],
            "stepsCount" : 1,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 2,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Click button \"Речевые упражнения\".",
        "time" : {
          "start" : 1716532222555,
          "stop" : 1716532223762,
          "duration" : 1207
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is visible and clickable: ('xpath', '//a[@title=\"Речевые упражнения\"]')",
          "time" : {
            "start" : 1716532222555,
            "stop" : 1716532223733,
            "duration" : 1178
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable",
            "time" : {
              "start" : 1716532223716,
              "stop" : 1716532223733,
              "duration" : 17
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Check element is clickable: ('xpath', '//a[@title=\"Речевые упражнения\"]')",
              "time" : {
                "start" : 1716532223716,
                "stop" : 1716532223733,
                "duration" : 17
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "stepsCount" : 0,
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ {
              "name" : "locator",
              "value" : "('xpath', '//a[@title=\"Речевые упражнения\"]')"
            } ],
            "stepsCount" : 1,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 2,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Check element is visible and clickable: ('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')",
        "time" : {
          "start" : 1716532223762,
          "stop" : 1716532225850,
          "duration" : 2088
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1716532225832,
            "stop" : 1716532225850,
            "duration" : 18
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')",
            "time" : {
              "start" : 1716532225832,
              "stop" : 1716532225850,
              "duration" : 18
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')"
          } ],
          "stepsCount" : 1,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Click button \"СЛОВА КОРОЛЁВОЙ\".",
        "time" : {
          "start" : 1716532225866,
          "stop" : 1716532225928,
          "duration" : 62
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is visible and clickable: ('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')",
          "time" : {
            "start" : 1716532225866,
            "stop" : 1716532225895,
            "duration" : 29
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable",
            "time" : {
              "start" : 1716532225878,
              "stop" : 1716532225895,
              "duration" : 17
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Check element is clickable: ('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')",
              "time" : {
                "start" : 1716532225878,
                "stop" : 1716532225895,
                "duration" : 17
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "stepsCount" : 0,
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ {
              "name" : "locator",
              "value" : "('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')"
            } ],
            "stepsCount" : 1,
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 2,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 3,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "selector_for_sub_group",
        "value" : "('xpath', '//button[@data-test-active-link=\"Слова Королёвой\"]')"
      } ],
      "stepsCount" : 15,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get seria ID from URL: https://brainup.site/groups/2/series/17",
      "time" : {
        "start" : 1716532225928,
        "stop" : 1716532226945,
        "duration" : 1017
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Wait until url to be: https://brainup.site/groups/2/series/17.",
        "time" : {
          "start" : 1716532225928,
          "stop" : 1716532226942,
          "duration" : 1014
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "click_random_card",
      "time" : {
        "start" : 1716532226945,
        "stop" : 1716532227079,
        "duration" : 134
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check elements are present: ('xpath', '//div[contains(@class, \"series-container\")]//a/div/div')",
        "time" : {
          "start" : 1716532226945,
          "stop" : 1716532226954,
          "duration" : 9
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Getting list cards: ['1 слово из 2..4 (1)', '1 слово из 2..4 (2)', '1 слово из 2..4 (3)', '1 слово из 2..4 (4)', '1 слово из 2..4 (5)', '1 слово из 2..4 (6)', '1 слово из 6', '2 слова из 4', '3 слова из 6', '2 слова из 6']",
        "time" : {
          "start" : 1716532227024,
          "stop" : 1716532227024,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Select random id from list of cards. \nCard ID in list is:, 3",
        "time" : {
          "start" : 1716532227024,
          "stop" : 1716532227024,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Check elements are present: ('xpath', '//div[contains(@class, \"series-container\")]//a/div/div')",
        "time" : {
          "start" : 1716532227024,
          "stop" : 1716532227030,
          "duration" : 6
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Selected card is: 1 слово из 2..4 (3)",
        "time" : {
          "start" : 1716532227036,
          "stop" : 1716532227072,
          "duration" : 36
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Go to element: <selenium.webdriver.remote.webelement.WebElement (session=\"a957ad7f66ed099ef4c3c08d8cf4b3df\", element=\"f.576CE193B058A5B1C3B03E7BC04C8270.d.8C1B911B66C1AF67F23C6643CC3EBA07.e.116\")>",
          "time" : {
            "start" : 1716532227036,
            "stop" : 1716532227041,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 6,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "get_random_id_from_list_sub_group",
      "time" : {
        "start" : 1716532227079,
        "stop" : 1716532287863,
        "duration" : 60784
      },
      "status" : "broken",
      "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/speech_exercises_page_api.py\", line 41, in get_random_id_from_list_sub_group\n    with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n                                                  ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/requests/models.py\", line 975, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n",
      "steps" : [ {
        "name" : "Status code is: 504",
        "time" : {
          "start" : 1716532287863,
          "stop" : 1716532287863,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Send GET request with params: https://brainup.site/api/subgroups?seriesId=17 headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{id_token}\"",
        "time" : {
          "start" : 1716532287863,
          "stop" : 1716532287863,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "card_id",
        "value" : "2"
      }, {
        "name" : "seria_id",
        "value" : "'17'"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "7ad33919cd0ea39b",
      "name" : "Screenshot",
      "source" : "7ad33919cd0ea39b.png",
      "type" : "image/png",
      "size" : 52661
    }, {
      "uid" : "36ef4078a8987def",
      "name" : "HTML source",
      "source" : "36ef4078a8987def.html",
      "type" : "text/html",
      "size" : 32288
    } ],
    "parameters" : [ ],
    "stepsCount" : 28,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1716532288057,
      "stop" : 1716532288225,
      "duration" : 168
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fac5e233b324dd86",
      "name" : "Screenshot 2024-05-24 06:31:28.158994",
      "source" : "fac5e233b324dd86.png",
      "type" : "image/png",
      "size" : 52661
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Speech exercises."
  }, {
    "name" : "suite",
    "value" : "Речевые упражнения."
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1210-788"
  }, {
    "name" : "thread",
    "value" : "2383-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 1,
        "passed" : 14,
        "unknown" : 0,
        "total" : 15
      },
      "items" : [ {
        "uid" : "ca4b3fd1977c61c7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/10//#testresult/ca4b3fd1977c61c7",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716530872272,
          "stop" : 1716530881326,
          "duration" : 9054
        }
      }, {
        "uid" : "6c82a2a6e84cd4e6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/9//#testresult/6c82a2a6e84cd4e6",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716512149383,
          "stop" : 1716512157533,
          "duration" : 8150
        }
      }, {
        "uid" : "8cc54c5e03109acb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/9//#testresult/8cc54c5e03109acb",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716453089679,
          "stop" : 1716453097976,
          "duration" : 8297
        }
      }, {
        "uid" : "f45c95c050d34f82",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/8//#testresult/f45c95c050d34f82",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716449527183,
          "stop" : 1716449535927,
          "duration" : 8744
        }
      }, {
        "uid" : "d515b3a718566abb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/8//#testresult/d515b3a718566abb",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716425762595,
          "stop" : 1716425771244,
          "duration" : 8649
        }
      }, {
        "uid" : "9724e9578ec661b0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/7//#testresult/9724e9578ec661b0",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716364024598,
          "stop" : 1716364034374,
          "duration" : 9776
        }
      }, {
        "uid" : "6e76cd1b010a0509",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/6//#testresult/6e76cd1b010a0509",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716362730105,
          "stop" : 1716362740595,
          "duration" : 10490
        }
      }, {
        "uid" : "bbc39143056fe08d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/7//#testresult/bbc39143056fe08d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716339319787,
          "stop" : 1716339328433,
          "duration" : 8646
        }
      }, {
        "uid" : "d8fe549790769b47",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/5//#testresult/d8fe549790769b47",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716278397832,
          "stop" : 1716278408222,
          "duration" : 10390
        }
      }, {
        "uid" : "b72035228c4ba863",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/4//#testresult/b72035228c4ba863",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716276973774,
          "stop" : 1716276984264,
          "duration" : 10490
        }
      }, {
        "uid" : "a00337e239b6e593",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/6//#testresult/a00337e239b6e593",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716253011723,
          "stop" : 1716253020759,
          "duration" : 9036
        }
      }, {
        "uid" : "61f7e83a1fa7d6d1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/3//#testresult/61f7e83a1fa7d6d1",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716218897797,
          "stop" : 1716218907085,
          "duration" : 9288
        }
      }, {
        "uid" : "214792901ab3176b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/2//#testresult/214792901ab3176b",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716217653959,
          "stop" : 1716217662781,
          "duration" : 8822
        }
      }, {
        "uid" : "afaa63fc9a325778",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/1//#testresult/afaa63fc9a325778",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1716204271336,
          "stop" : 1716204279441,
          "duration" : 8105
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "207f06c29bb8dc20.json",
  "parameterValues" : [ ]
}
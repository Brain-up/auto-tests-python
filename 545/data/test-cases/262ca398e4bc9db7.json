{
  "uid" : "262ca398e4bc9db7",
  "name" : "Select a random card from \"Группа слов\" group and compare UI vs BACKEND data.",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_random_cards_in_group_words_ru",
  "historyId" : "0c99feebb7314b5ff7efb452ee6dded7",
  "time" : {
    "start" : 1745190946365,
    "stop" : 1745190949983,
    "duration" : 3618
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nKeyError: 7",
  "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7fce211ee4b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef096d53140cc71e725412aab42587bb\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select a random card from \"Группа слов\" group and compare UI vs BACKEND data.')\n    def test_random_cards_in_group_words_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_GROUP_RU)\n        seria_id = page.set_url_to_get_id_words_group_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 7, seria_id = '3'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group')\n    def get_random_id_from_list_sub_group(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n>       id_number = random.choice(result_get['data'][card_id]['exercises'])\nE       KeyError: 7\n\npages/speech_exercises_page_api.py:46: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1745190940493,
      "stop" : 1745190943916,
      "duration" : 3423
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1745190940493,
        "stop" : 1745190943916,
        "duration" : 3423
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef096d53140cc71e725412aab42587bb\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "specialist_user_authorized",
    "time" : {
      "start" : 1745190943916,
      "stop" : 1745190946365,
      "duration" : 2449
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "USER specialist authorized",
      "time" : {
        "start" : 1745190943916,
        "stop" : 1745190946365,
        "duration" : 2449
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check url is present: https://www.brainup.site/groups",
        "time" : {
          "start" : 1745190944314,
          "stop" : 1745190946342,
          "duration" : 2028
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Loader checking",
        "time" : {
          "start" : 1745190946343,
          "stop" : 1745190946365,
          "duration" : 22
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef096d53140cc71e725412aab42587bb\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 2,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1745180885772,
      "stop" : 1745180885772,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1745190939654,
      "stop" : 1745190940493,
      "duration" : 839
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nKeyError: 7",
    "statusTrace" : "self = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7fce211ee4b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ef096d53140cc71e725412aab42587bb\")>\nspecialist_user_authorized = None\n\n    @pytest.mark.xfail\n    @allure.suite(\"Речевые упражнения.\")\n    @allure.title('Select a random card from \"Группа слов\" group and compare UI vs BACKEND data.')\n    def test_random_cards_in_group_words_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        page.select_group(SpeechExercisesPageLocators.WORDS_GROUP_RU)\n        seria_id = page.set_url_to_get_id_words_group_ru_group()\n        card_id = page.click_random_card()\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(card_id, seria_id)\n\ntests/test_speech_exercises_ru.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncard_id = 7, seria_id = '3'\n\n    @staticmethod\n    @allure.step('get_random_id_from_list_sub_group')\n    def get_random_id_from_list_sub_group(card_id, seria_id):\n        print('Card_id is:', card_id)\n        print('Seria_id is:', seria_id)\n        list_cards_id = requests.get(f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}',\n                                     headers={'Content-Type': 'application/json',\n                                              'Authorization': 'Bearer {}'.format(id_token)})\n        with allure.step(f'Status code is: {list_cards_id.status_code}'):\n            pass\n        with allure.step(\n                f'Send GET request with params: '\n                f'{Links.URL_MAIN_PAGE}api/subgroups?seriesId={seria_id}'\n                f'headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{{id_token}}\"'):\n            pass\n        with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n            pass\n        result_get = json.loads(list_cards_id.text)\n>       id_number = random.choice(result_get['data'][card_id]['exercises'])\nE       KeyError: 7\n\npages/speech_exercises_page_api.py:46: KeyError",
    "steps" : [ {
      "name" : "select_group",
      "time" : {
        "start" : 1745190946365,
        "stop" : 1745190948736,
        "duration" : 2371
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Select Russian language. Click \"RU\" button.",
        "time" : {
          "start" : 1745190946365,
          "stop" : 1745190946442,
          "duration" : 77
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"Речевые упражнения\".",
        "time" : {
          "start" : 1745190946442,
          "stop" : 1745190947559,
          "duration" : 1117
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Click button \"ГРУППА СЛОВ\".",
        "time" : {
          "start" : 1745190948657,
          "stop" : 1745190948736,
          "duration" : 79
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "selector_for_sub_group",
        "value" : "('xpath', '//button[@title=\"Распознавание последовательности слов\"]')"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get seria ID from URL: https://www.brainup.site/groups/2/series/3",
      "time" : {
        "start" : 1745190948736,
        "stop" : 1745190949259,
        "duration" : 523
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Wait until url to be: https://www.brainup.site/groups/2/series/3.",
        "time" : {
          "start" : 1745190948736,
          "stop" : 1745190949256,
          "duration" : 520
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "click_random_card",
      "time" : {
        "start" : 1745190949259,
        "stop" : 1745190949388,
        "duration" : 129
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Getting list cards: ['По 2 слова из 6', 'По 3 слова из 6', 'По 3 слова из 9', 'По 3 слова из 12', 'По 4 слова из 12', 'По 4 слова из 16', 'По 5 слов из 15', 'По 6 слов из 18']",
        "time" : {
          "start" : 1745190949308,
          "stop" : 1745190949308,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Select random id from list of cards. \nCard ID in list is:, 8",
        "time" : {
          "start" : 1745190949308,
          "stop" : 1745190949308,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Selected card is: По 6 слов из 18",
        "time" : {
          "start" : 1745190949317,
          "stop" : 1745190949369,
          "duration" : 52
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "get_random_id_from_list_sub_group",
      "time" : {
        "start" : 1745190949388,
        "stop" : 1745190949982,
        "duration" : 594
      },
      "status" : "broken",
      "statusMessage" : "KeyError: 7\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/speech_exercises_page_api.py\", line 46, in get_random_id_from_list_sub_group\n    id_number = random.choice(result_get['data'][card_id]['exercises'])\n                              ~~~~~~~~~~~~~~~~~~^^^^^^^^^\n",
      "steps" : [ {
        "name" : "Status code is: 403",
        "time" : {
          "start" : 1745190949982,
          "stop" : 1745190949982,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Send GET request with params: https://www.brainup.site/api/subgroups?seriesId=3headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{id_token}\"",
        "time" : {
          "start" : 1745190949982,
          "stop" : 1745190949982,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      }, {
        "name" : "Getting list of cards id: {'data': {}, 'errors': ['Доступ запрещен'], 'meta': []}",
        "time" : {
          "start" : 1745190949982,
          "stop" : 1745190949982,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "card_id",
        "value" : "7"
      }, {
        "name" : "seria_id",
        "value" : "'3'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1745190949993,
      "stop" : 1745190950058,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Speech exercises."
  }, {
    "name" : "suite",
    "value" : "Речевые упражнения."
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1689-76"
  }, {
    "name" : "thread",
    "value" : "2433-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 8,
        "passed" : 98,
        "unknown" : 0,
        "total" : 106
      },
      "items" : [ {
        "uid" : "535543e436633d67",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/340//#testresult/535543e436633d67",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1745112638086,
          "stop" : 1745112646806,
          "duration" : 8720
        }
      }, {
        "uid" : "7ac0a9a23f12210a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/339//#testresult/7ac0a9a23f12210a",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1745025829652,
          "stop" : 1745025838561,
          "duration" : 8909
        }
      }, {
        "uid" : "ac52dac95102f78e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/544//#testresult/ac52dac95102f78e",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1745012001339,
          "stop" : 1745012010064,
          "duration" : 8725
        }
      }, {
        "uid" : "8de82aa7d5093e1d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/543//#testresult/8de82aa7d5093e1d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1745005136272,
          "stop" : 1745005145235,
          "duration" : 8963
        }
      }, {
        "uid" : "24bbaa4de00c1258",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/338//#testresult/24bbaa4de00c1258",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744939590187,
          "stop" : 1744939598818,
          "duration" : 8631
        }
      }, {
        "uid" : "161dc5b3eceb7c62",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/541//#testresult/161dc5b3eceb7c62",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nKeyError: 3",
        "time" : {
          "start" : 1744853366458,
          "stop" : 1744853369980,
          "duration" : 3522
        }
      }, {
        "uid" : "3dd0ce7cd1c8942a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/336//#testresult/3dd0ce7cd1c8942a",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744767028509,
          "stop" : 1744767036977,
          "duration" : 8468
        }
      }, {
        "uid" : "1d6e2d55553c67a7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/540//#testresult/1d6e2d55553c67a7",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744721476044,
          "stop" : 1744721484019,
          "duration" : 7975
        }
      }, {
        "uid" : "d1a84f0ccdb4d094",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/335//#testresult/d1a84f0ccdb4d094",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744680720940,
          "stop" : 1744680730960,
          "duration" : 10020
        }
      }, {
        "uid" : "3a3616e8d6908aad",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/539//#testresult/3a3616e8d6908aad",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744665047765,
          "stop" : 1744665055620,
          "duration" : 7855
        }
      }, {
        "uid" : "1ee87be9ed8d27bb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/334//#testresult/1ee87be9ed8d27bb",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744594149748,
          "stop" : 1744594157623,
          "duration" : 7875
        }
      }, {
        "uid" : "30257d23121774d0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/333//#testresult/30257d23121774d0",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744512838566,
          "stop" : 1744512846845,
          "duration" : 8279
        }
      }, {
        "uid" : "8dc21a4626179222",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/537//#testresult/8dc21a4626179222",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744487139527,
          "stop" : 1744487151091,
          "duration" : 11564
        }
      }, {
        "uid" : "f12831263f17e95d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/332//#testresult/f12831263f17e95d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744421084002,
          "stop" : 1744421091519,
          "duration" : 7517
        }
      }, {
        "uid" : "dc44cd5565d2ddbb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/536//#testresult/dc44cd5565d2ddbb",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744398157657,
          "stop" : 1744398165790,
          "duration" : 8133
        }
      }, {
        "uid" : "e4502b69f65d051d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/331//#testresult/e4502b69f65d051d",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744334667075,
          "stop" : 1744334675166,
          "duration" : 8091
        }
      }, {
        "uid" : "5b81cdf2b649e6a6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/535//#testresult/5b81cdf2b649e6a6",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744308159635,
          "stop" : 1744308167997,
          "duration" : 8362
        }
      }, {
        "uid" : "ea8a9d1a8f3bbd27",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/330//#testresult/ea8a9d1a8f3bbd27",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744248224855,
          "stop" : 1744248233694,
          "duration" : 8839
        }
      }, {
        "uid" : "6f68988a4837fdc4",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/534//#testresult/6f68988a4837fdc4",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744198945927,
          "stop" : 1744198954588,
          "duration" : 8661
        }
      }, {
        "uid" : "5a86eefa7fead259",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/329//#testresult/5a86eefa7fead259",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1744162005224,
          "stop" : 1744162014103,
          "duration" : 8879
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "262ca398e4bc9db7.json",
  "parameterValues" : [ ]
}
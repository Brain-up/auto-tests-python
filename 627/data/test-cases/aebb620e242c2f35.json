{
  "uid" : "aebb620e242c2f35",
  "name" : "Checking the possibility of authorization with the correct data",
  "fullName" : "tests.authorisation_page_test.TestAuthorizedUserPage#test_auth_user_with_correct_data",
  "historyId" : "694ff1b8129511a73727da75eece5283",
  "time" : {
    "start" : 1752400985526,
    "stop" : 1752400985526,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.443\n  (Session info: chrome=138.0.7204.100)\nStacktrace:\n#0 0x563504c4723a <unknown>\n#1 0x5635046f1ab0 <unknown>\n#2 0x5635046d9c81 <unknown>\n#3 0x5635046d9985 <unknown>\n#4 0x5635046d77de <unknown>\n#5 0x5635046d813f <unknown>\n#6 0x5635046e6bb3 <unknown>\n#7 0x56350470006e <unknown>\n#8 0x56350470686b <unknown>\n#9 0x5635046d8880 <unknown>\n#10 0x5635046ffdc8 <unknown>\n#11 0x56350478f35b <unknown>\n#12 0x563504768f73 <unknown>\n#13 0x563504735aeb <unknown>\n#14 0x563504736751 <unknown>\n#15 0x563504c0bb4b <unknown>\n#16 0x563504c0f929 <unknown>\n#17 0x563504bf2929 <unknown>\n#18 0x563504c104e8 <unknown>\n#19 0x563504bd70df <unknown>\n#20 0x563504c348e8 <unknown>\n#21 0x563504c34ac6 <unknown>\n#22 0x563504c46556 <unknown>\n#23 0x7f04e0c9caa4 <unknown>\n#24 0x7f04e0d29c3c <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f87031123706e29a1a48527d3a03e7ea\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7af244be60>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#22 0x563504c46556 \\\\u003Cunknown>\\\\n#23 0x7f04e0c9caa4 \\\\u003Cunknown>\\\\n#24 0x7f04e0d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.443\nE         (Session info: chrome=138.0.7204.100)\nE       Stacktrace:\nE       #0 0x563504c4723a <unknown>\nE       #1 0x5635046f1ab0 <unknown>\nE       #2 0x5635046d9c81 <unknown>\nE       #3 0x5635046d9985 <unknown>\nE       #4 0x5635046d77de <unknown>\nE       #5 0x5635046d813f <unknown>\nE       #6 0x5635046e6bb3 <unknown>\nE       #7 0x56350470006e <unknown>\nE       #8 0x56350470686b <unknown>\nE       #9 0x5635046d8880 <unknown>\nE       #10 0x5635046ffdc8 <unknown>\nE       #11 0x56350478f35b <unknown>\nE       #12 0x563504768f73 <unknown>\nE       #13 0x563504735aeb <unknown>\nE       #14 0x563504736751 <unknown>\nE       #15 0x563504c0bb4b <unknown>\nE       #16 0x563504c0f929 <unknown>\nE       #17 0x563504bf2929 <unknown>\nE       #18 0x563504c104e8 <unknown>\nE       #19 0x563504bd70df <unknown>\nE       #20 0x563504c348e8 <unknown>\nE       #21 0x563504c34ac6 <unknown>\nE       #22 0x563504c46556 <unknown>\nE       #23 0x7f04e0c9caa4 <unknown>\nE       #24 0x7f04e0d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1752400998185,
      "stop" : 1752401298209,
      "duration" : 300024
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.443\n  (Session info: chrome=138.0.7204.100)\nStacktrace:\n#0 0x563504c4723a <unknown>\n#1 0x5635046f1ab0 <unknown>\n#2 0x5635046d9c81 <unknown>\n#3 0x5635046d9985 <unknown>\n#4 0x5635046d77de <unknown>\n#5 0x5635046d813f <unknown>\n#6 0x5635046e6bb3 <unknown>\n#7 0x56350470006e <unknown>\n#8 0x56350470686b <unknown>\n#9 0x5635046d8880 <unknown>\n#10 0x5635046ffdc8 <unknown>\n#11 0x56350478f35b <unknown>\n#12 0x563504768f73 <unknown>\n#13 0x563504735aeb <unknown>\n#14 0x563504736751 <unknown>\n#15 0x563504c0bb4b <unknown>\n#16 0x563504c0f929 <unknown>\n#17 0x563504bf2929 <unknown>\n#18 0x563504c104e8 <unknown>\n#19 0x563504bd70df <unknown>\n#20 0x563504c348e8 <unknown>\n#21 0x563504c34ac6 <unknown>\n#22 0x563504c46556 <unknown>\n#23 0x7f04e0c9caa4 <unknown>\n#24 0x7f04e0d29c3c <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 32, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1752400998185,
        "stop" : 1752401298208,
        "duration" : 300023
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.443\n  (Session info: chrome=138.0.7204.100)\nStacktrace:\n#0 0x563504c4723a <unknown>\n#1 0x5635046f1ab0 <unknown>\n#2 0x5635046d9c81 <unknown>\n#3 0x5635046d9985 <unknown>\n#4 0x5635046d77de <unknown>\n#5 0x5635046d813f <unknown>\n#6 0x5635046e6bb3 <unknown>\n#7 0x56350470006e <unknown>\n#8 0x56350470686b <unknown>\n#9 0x5635046d8880 <unknown>\n#10 0x5635046ffdc8 <unknown>\n#11 0x56350478f35b <unknown>\n#12 0x563504768f73 <unknown>\n#13 0x563504735aeb <unknown>\n#14 0x563504736751 <unknown>\n#15 0x563504c0bb4b <unknown>\n#16 0x563504c0f929 <unknown>\n#17 0x563504bf2929 <unknown>\n#18 0x563504c104e8 <unknown>\n#19 0x563504bd70df <unknown>\n#20 0x563504c348e8 <unknown>\n#21 0x563504c34ac6 <unknown>\n#22 0x563504c46556 <unknown>\n#23 0x7f04e0c9caa4 <unknown>\n#24 0x7f04e0d29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 32, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f87031123706e29a1a48527d3a03e7ea\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1752400985527,
      "stop" : 1752400998185,
      "duration" : 12658
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1752400985527,
      "stop" : 1752400985527,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1752401298268,
      "stop" : 1752401298345,
      "duration" : 77
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Authorized User Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "authorisation_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAuthorizedUserPage"
  }, {
    "name" : "host",
    "value" : "pkrvmq0rgcvqdmg"
  }, {
    "name" : "thread",
    "value" : "2622-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.authorisation_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 256,
        "unknown" : 0,
        "total" : 260
      },
      "items" : [ {
        "uid" : "7f289d63c9c5b596",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/626//#testresult/7f289d63c9c5b596",
        "status" : "passed",
        "time" : {
          "start" : 1752300065771,
          "stop" : 1752300066720,
          "duration" : 949
        }
      }, {
        "uid" : "6cd205f3f1840ddc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/625//#testresult/6cd205f3f1840ddc",
        "status" : "passed",
        "time" : {
          "start" : 1752215365978,
          "stop" : 1752215367086,
          "duration" : 1108
        }
      }, {
        "uid" : "96dd5fe2139f9436",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/624//#testresult/96dd5fe2139f9436",
        "status" : "passed",
        "time" : {
          "start" : 1752172237759,
          "stop" : 1752172239337,
          "duration" : 1578
        }
      }, {
        "uid" : "e31a147fffc01ad3",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/623//#testresult/e31a147fffc01ad3",
        "status" : "passed",
        "time" : {
          "start" : 1752034694926,
          "stop" : 1752034696029,
          "duration" : 1103
        }
      }, {
        "uid" : "6d337952526004f2",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/622//#testresult/6d337952526004f2",
        "status" : "passed",
        "time" : {
          "start" : 1752001578348,
          "stop" : 1752001579319,
          "duration" : 971
        }
      }, {
        "uid" : "e9fc7d9fc7fe125f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/621//#testresult/e9fc7d9fc7fe125f",
        "status" : "passed",
        "time" : {
          "start" : 1751904624976,
          "stop" : 1751904626111,
          "duration" : 1135
        }
      }, {
        "uid" : "bafb35df6ca1b5f6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/620//#testresult/bafb35df6ca1b5f6",
        "status" : "passed",
        "time" : {
          "start" : 1751782617314,
          "stop" : 1751782618610,
          "duration" : 1296
        }
      }, {
        "uid" : "acc1c3e4b126b505",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/619//#testresult/acc1c3e4b126b505",
        "status" : "passed",
        "time" : {
          "start" : 1751624406837,
          "stop" : 1751624407899,
          "duration" : 1062
        }
      }, {
        "uid" : "64b38fbcb56848bb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/618//#testresult/64b38fbcb56848bb",
        "status" : "passed",
        "time" : {
          "start" : 1751520199226,
          "stop" : 1751520200435,
          "duration" : 1209
        }
      }, {
        "uid" : "1533a57e13a2987b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/617//#testresult/1533a57e13a2987b",
        "status" : "passed",
        "time" : {
          "start" : 1751457536156,
          "stop" : 1751457537281,
          "duration" : 1125
        }
      }, {
        "uid" : "fad8b2be86b0db79",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/616//#testresult/fad8b2be86b0db79",
        "status" : "passed",
        "time" : {
          "start" : 1751380503147,
          "stop" : 1751380504218,
          "duration" : 1071
        }
      }, {
        "uid" : "ad57fa991784442f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/615//#testresult/ad57fa991784442f",
        "status" : "passed",
        "time" : {
          "start" : 1751368090647,
          "stop" : 1751368091897,
          "duration" : 1250
        }
      }, {
        "uid" : "1c8bc0e8f2bb8ee1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/412//#testresult/1c8bc0e8f2bb8ee1",
        "status" : "passed",
        "time" : {
          "start" : 1751332524077,
          "stop" : 1751332533739,
          "duration" : 9662
        }
      }, {
        "uid" : "686175ab84460733",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/614//#testresult/686175ab84460733",
        "status" : "passed",
        "time" : {
          "start" : 1751274698673,
          "stop" : 1751274699800,
          "duration" : 1127
        }
      }, {
        "uid" : "a43c4d11ac649789",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/411//#testresult/a43c4d11ac649789",
        "status" : "passed",
        "time" : {
          "start" : 1751245937724,
          "stop" : 1751245939030,
          "duration" : 1306
        }
      }, {
        "uid" : "f4f3ef585afcc982",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/613//#testresult/f4f3ef585afcc982",
        "status" : "passed",
        "time" : {
          "start" : 1751199892449,
          "stop" : 1751199893971,
          "duration" : 1522
        }
      }, {
        "uid" : "7de0ffbf475e6981",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/410//#testresult/7de0ffbf475e6981",
        "status" : "passed",
        "time" : {
          "start" : 1751159715364,
          "stop" : 1751159716519,
          "duration" : 1155
        }
      }, {
        "uid" : "41ce624630f9ca",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/612//#testresult/41ce624630f9ca",
        "status" : "passed",
        "time" : {
          "start" : 1751089055843,
          "stop" : 1751089057277,
          "duration" : 1434
        }
      }, {
        "uid" : "8cfa2c88071f3d2b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/409//#testresult/8cfa2c88071f3d2b",
        "status" : "passed",
        "time" : {
          "start" : 1751072741285,
          "stop" : 1751072742454,
          "duration" : 1169
        }
      }, {
        "uid" : "27adc1ed055ffb60",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/611//#testresult/27adc1ed055ffb60",
        "status" : "passed",
        "time" : {
          "start" : 1751021919811,
          "stop" : 1751021921112,
          "duration" : 1301
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "aebb620e242c2f35.json",
  "parameterValues" : [ ]
}
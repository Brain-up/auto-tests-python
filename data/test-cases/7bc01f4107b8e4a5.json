{
  "uid" : "7bc01f4107b8e4a5",
  "name" : "Select a random card from \"Похожие фразы\" group and compare UI vs BACKEND data.",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_random_cards_in_similar_phrases_ru",
  "historyId" : "5e981df7bf46eebe64ca49edd6dd6d63",
  "time" : {
    "start" : 1708162146782,
    "stop" : 1708162215848,
    "duration" : 69066
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
  "statusTrace" : "self = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/requests/models.py:971: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f48c4940620>\ns = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title>Error</title>\\n<style>\\nhtml { color-scheme: light dark; }\\nbody { width: 35e...ce then you should check\\nthe error log for details.</p>\\n<p><em>Faithfully yours, nginx.</em></p>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f48c3aa7fe0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\")>\nspecialist_user_authorized = <pages.base_page.BasePage object at 0x7f48c38809b0>\n\n    @allure.suite('Похожие фразы')\n    @allure.title('Select a random card from \"Похожие фразы\" group and compare UI vs BACKEND data.')\n    def test_random_cards_in_similar_phrases_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        seria_id = page.select_group(SpeechExercisesPageLocators.WORDS_SIMILAR_PHRASES_RU)\n        card_id = page.click_random_card()\n        page.wait_changed_url(driver.current_url)  # Wait until cards will be loaded\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(\n            card_id, seria_id)  # getting random ID from exercises group\n\ntests/test_speech_exercises_ru.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/speech_exercises_page_api.py:39: in get_random_id_from_list_sub_group\n    with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/requests/models.py:975: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1708162141464,
      "stop" : 1708162144440,
      "duration" : 2976
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1708162141464,
        "stop" : 1708162144440,
        "duration" : 2976
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\")>"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 1,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1708162140692,
      "stop" : 1708162141464,
      "duration" : 772
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "specialist_user_authorized",
    "time" : {
      "start" : 1708162144440,
      "stop" : 1708162146782,
      "duration" : 2342
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "USER specialist authorized",
      "time" : {
        "start" : 1708162144440,
        "stop" : 1708162146782,
        "duration" : 2342
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check element is visible and clickable: ('xpath', '//a[@id=\"ember11\"]')",
        "time" : {
          "start" : 1708162144440,
          "stop" : 1708162144476,
          "duration" : 36
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1708162144458,
            "stop" : 1708162144476,
            "duration" : 18
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('xpath', '//a[@id=\"ember11\"]')",
            "time" : {
              "start" : 1708162144458,
              "stop" : 1708162144476,
              "duration" : 18
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "stepsCount" : 0,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('xpath', '//a[@id=\"ember11\"]')"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 1,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      }, {
        "name" : "Check element is visible: ('xpath', '//input[@id=\"login\"]')",
        "time" : {
          "start" : 1708162144524,
          "stop" : 1708162144548,
          "duration" : 24
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is present: ('xpath', '//input[@id=\"login\"]')",
          "time" : {
            "start" : 1708162144524,
            "stop" : 1708162144533,
            "duration" : 9
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Go to element: <selenium.webdriver.remote.webelement.WebElement (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\", element=\"86B101EA7607F0887780CA821CAFA6EC_element_26\")>",
          "time" : {
            "start" : 1708162144533,
            "stop" : 1708162144537,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      }, {
        "name" : "Check element is visible: ('xpath', '//input[@id=\"password\"]')",
        "time" : {
          "start" : 1708162144615,
          "stop" : 1708162144642,
          "duration" : 27
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is present: ('xpath', '//input[@id=\"password\"]')",
          "time" : {
            "start" : 1708162144615,
            "stop" : 1708162144624,
            "duration" : 9
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Go to element: <selenium.webdriver.remote.webelement.WebElement (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\", element=\"86B101EA7607F0887780CA821CAFA6EC_element_29\")>",
          "time" : {
            "start" : 1708162144624,
            "stop" : 1708162144629,
            "duration" : 5
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      }, {
        "name" : "Check element is visible and clickable: ('xpath', '//*[@type=\"submit\"]')",
        "time" : {
          "start" : 1708162144681,
          "stop" : 1708162144711,
          "duration" : 30
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1708162144696,
            "stop" : 1708162144711,
            "duration" : 15
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('xpath', '//*[@type=\"submit\"]')",
            "time" : {
              "start" : 1708162144696,
              "stop" : 1708162144711,
              "duration" : 15
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "stepsCount" : 0,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('xpath', '//*[@type=\"submit\"]')"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 1,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      }, {
        "name" : "Check url is present: https://brainup.site/groups",
        "time" : {
          "start" : 1708162144762,
          "stop" : 1708162146782,
          "duration" : 2020
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 13,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 14,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1708161567890,
      "stop" : 1708161567890,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
    "statusTrace" : "self = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/requests/models.py:971: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f48c4940620>\ns = '<!DOCTYPE html>\\n<html>\\n<head>\\n<title>Error</title>\\n<style>\\nhtml { color-scheme: light dark; }\\nbody { width: 35e...ce then you should check\\nthe error log for details.</p>\\n<p><em>Faithfully yours, nginx.</em></p>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_speech_exercises_ru.TestCardsRU object at 0x7f48c3aa7fe0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\")>\nspecialist_user_authorized = <pages.base_page.BasePage object at 0x7f48c38809b0>\n\n    @allure.suite('Похожие фразы')\n    @allure.title('Select a random card from \"Похожие фразы\" group and compare UI vs BACKEND data.')\n    def test_random_cards_in_similar_phrases_ru(self, driver, specialist_user_authorized):\n        page = SpeechExercisesPageRU(driver)\n        seria_id = page.select_group(SpeechExercisesPageLocators.WORDS_SIMILAR_PHRASES_RU)\n        card_id = page.click_random_card()\n        page.wait_changed_url(driver.current_url)  # Wait until cards will be loaded\n    \n        page = SpeechExercisesAPI(driver)\n>       random_id = page.get_random_id_from_list_sub_group(\n            card_id, seria_id)  # getting random ID from exercises group\n\ntests/test_speech_exercises_ru.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/speech_exercises_page_api.py:39: in get_random_id_from_list_sub_group\n    with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [504]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Returns the json-encoded content of a response, if any.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/requests/models.py:975: JSONDecodeError",
    "steps" : [ {
      "name" : "select_group",
      "time" : {
        "start" : 1708162146782,
        "stop" : 1708162152958,
        "duration" : 6176
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Select Russian language. Click \"RU\" button.",
        "time" : {
          "start" : 1708162146782,
          "stop" : 1708162146854,
          "duration" : 72
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is visible and clickable: ('xpath', \"//*[contains(text(),'RU')]\")",
          "time" : {
            "start" : 1708162146782,
            "stop" : 1708162146813,
            "duration" : 31
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable",
            "time" : {
              "start" : 1708162146797,
              "stop" : 1708162146813,
              "duration" : 16
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Check element is clickable: ('xpath', \"//*[contains(text(),'RU')]\")",
              "time" : {
                "start" : 1708162146797,
                "stop" : 1708162146813,
                "duration" : 16
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "stepsCount" : 0,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ {
              "name" : "locator",
              "value" : "('xpath', \"//*[contains(text(),'RU')]\")"
            } ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "stepsCount" : 1,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 2,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 3,
        "hasContent" : true
      }, {
        "name" : "Click button \"Речевые упражнения\".",
        "time" : {
          "start" : 1708162146855,
          "stop" : 1708162148090,
          "duration" : 1235
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is visible and clickable: ('xpath', '//a[@title=\"Речевые упражнения\"]')",
          "time" : {
            "start" : 1708162146855,
            "stop" : 1708162148064,
            "duration" : 1209
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable",
            "time" : {
              "start" : 1708162148048,
              "stop" : 1708162148064,
              "duration" : 16
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Check element is clickable: ('xpath', '//a[@title=\"Речевые упражнения\"]')",
              "time" : {
                "start" : 1708162148048,
                "stop" : 1708162148063,
                "duration" : 15
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "stepsCount" : 0,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ {
              "name" : "locator",
              "value" : "('xpath', '//a[@title=\"Речевые упражнения\"]')"
            } ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "stepsCount" : 1,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 2,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 3,
        "hasContent" : true
      }, {
        "name" : "Check element is visible and clickable: ('xpath', '//button[@title=\"Распознавание похожих фраз\"]')",
        "time" : {
          "start" : 1708162148091,
          "stop" : 1708162150689,
          "duration" : 2598
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is clickable",
          "time" : {
            "start" : 1708162150653,
            "stop" : 1708162150689,
            "duration" : 36
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable: ('xpath', '//button[@title=\"Распознавание похожих фраз\"]')",
            "time" : {
              "start" : 1708162150653,
              "stop" : 1708162150689,
              "duration" : 36
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ ],
            "parameters" : [ ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "stepsCount" : 0,
            "hasContent" : false
          } ],
          "attachments" : [ ],
          "parameters" : [ {
            "name" : "locator",
            "value" : "('xpath', '//button[@title=\"Распознавание похожих фраз\"]')"
          } ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 1,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      }, {
        "name" : "Click button \"ПОХОЖИЕ ФРАЗЫ\".",
        "time" : {
          "start" : 1708162150707,
          "stop" : 1708162150772,
          "duration" : 65
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Check element is visible and clickable: ('xpath', '//button[@title=\"Распознавание похожих фраз\"]')",
          "time" : {
            "start" : 1708162150707,
            "stop" : 1708162150734,
            "duration" : 27
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "Check element is clickable",
            "time" : {
              "start" : 1708162150718,
              "stop" : 1708162150734,
              "duration" : 16
            },
            "status" : "passed",
            "steps" : [ {
              "name" : "Check element is clickable: ('xpath', '//button[@title=\"Распознавание похожих фраз\"]')",
              "time" : {
                "start" : 1708162150718,
                "stop" : 1708162150734,
                "duration" : 16
              },
              "status" : "passed",
              "steps" : [ ],
              "attachments" : [ ],
              "parameters" : [ ],
              "attachmentsCount" : 0,
              "shouldDisplayMessage" : false,
              "stepsCount" : 0,
              "hasContent" : false
            } ],
            "attachments" : [ ],
            "parameters" : [ {
              "name" : "locator",
              "value" : "('xpath', '//button[@title=\"Распознавание похожих фраз\"]')"
            } ],
            "attachmentsCount" : 0,
            "shouldDisplayMessage" : false,
            "stepsCount" : 1,
            "hasContent" : true
          } ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 2,
          "hasContent" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 3,
        "hasContent" : true
      }, {
        "name" : "Wait until url: https://brainup.site/groups/2/series/1 will be changed.",
        "time" : {
          "start" : 1708162150772,
          "stop" : 1708162152956,
          "duration" : 2184
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "selector_for_sub_group",
        "value" : "('xpath', '//button[@title=\"Распознавание похожих фраз\"]')"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 16,
      "hasContent" : true
    }, {
      "name" : "click_random_card",
      "time" : {
        "start" : 1708162152959,
        "stop" : 1708162153051,
        "duration" : 92
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check elements are present: ('xpath', '//div[contains(@class, \"series-container\")]//a/div/div')",
        "time" : {
          "start" : 1708162152959,
          "stop" : 1708162152967,
          "duration" : 8
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Getting list cards: ['Разной длительности', 'С частицей Не', 'Похожие', 'С разным окончанием', 'Из коротких слов', 'С разными предлогами']",
        "time" : {
          "start" : 1708162153000,
          "stop" : 1708162153000,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Select random id from list of cards. \nCard ID in list is:, 2",
        "time" : {
          "start" : 1708162153000,
          "stop" : 1708162153000,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Check elements are present: ('xpath', '//div[contains(@class, \"series-container\")]//a/div/div')",
        "time" : {
          "start" : 1708162153000,
          "stop" : 1708162153005,
          "duration" : 5
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      }, {
        "name" : "Selected card is: С частицей Не",
        "time" : {
          "start" : 1708162153011,
          "stop" : 1708162153044,
          "duration" : 33
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Go to element: <selenium.webdriver.remote.webelement.WebElement (session=\"f5b0ed98a1d3a09f8ccaba5f27e04d17\", element=\"86B101EA7607F0887780CA821CAFA6EC_element_144\")>",
          "time" : {
            "start" : 1708162153011,
            "stop" : 1708162153015,
            "duration" : 4
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 1,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 6,
      "hasContent" : true
    }, {
      "name" : "Wait until url: https://brainup.site/groups/2/series/2 will be changed.",
      "time" : {
        "start" : 1708162153053,
        "stop" : 1708162154586,
        "duration" : 1533
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "get_random_id_from_list_sub_group",
      "time" : {
        "start" : 1708162154586,
        "stop" : 1708162215792,
        "duration" : 61206
      },
      "status" : "broken",
      "statusMessage" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/speech_exercises_page_api.py\", line 39, in get_random_id_from_list_sub_group\n    with allure.step(f'Getting list of cards id: {list_cards_id.json()}'):\n                                                  ^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/requests/models.py\", line 975, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n",
      "steps" : [ {
        "name" : "Send GET request with params: https://brainup.site/api/subgroups?seriesId=2 headers=\"Content-Type\": \"application/json\",\"Authorization\": \"Bearer\": \"{id_token}\"",
        "time" : {
          "start" : 1708162215792,
          "stop" : 1708162215792,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "card_id",
        "value" : "1"
      }, {
        "name" : "seria_id",
        "value" : "'2'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3119227de9675670",
      "name" : "Screenshot",
      "source" : "3119227de9675670.png",
      "type" : "image/png",
      "size" : 74964
    }, {
      "uid" : "6f675b90f278b492",
      "name" : "HTML source",
      "source" : "6f675b90f278b492.html",
      "type" : "text/html",
      "size" : 168885
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 27,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1708162216057,
      "stop" : 1708162216238,
      "duration" : 181
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7598215f1aca1941",
      "name" : "Screenshot 2024-02-17 09:30:16.176784",
      "source" : "7598215f1aca1941.png",
      "type" : "image/png",
      "size" : 74964
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Речевые упражнения."
  }, {
    "name" : "suite",
    "value" : "Похожие фразы"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1391-270"
  }, {
    "name" : "thread",
    "value" : "1785-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 98,
        "unknown" : 0,
        "total" : 107
      },
      "items" : [ {
        "uid" : "10e117494a8be72c",
        "status" : "passed",
        "time" : {
          "start" : 1708160747057,
          "stop" : 1708160758559,
          "duration" : 11502
        }
      }, {
        "uid" : "bcfd56db6cdb0a96",
        "status" : "passed",
        "time" : {
          "start" : 1708159547031,
          "stop" : 1708159560897,
          "duration" : 13866
        }
      }, {
        "uid" : "b54a810476b03321",
        "status" : "passed",
        "time" : {
          "start" : 1708158264265,
          "stop" : 1708158278082,
          "duration" : 13817
        }
      }, {
        "uid" : "27705f595e814c86",
        "status" : "passed",
        "time" : {
          "start" : 1708099377616,
          "stop" : 1708099393069,
          "duration" : 15453
        }
      }, {
        "uid" : "d00cff0979edd4e7",
        "status" : "passed",
        "time" : {
          "start" : 1708094504534,
          "stop" : 1708094519047,
          "duration" : 14513
        }
      }, {
        "uid" : "9600e8ed7c1a9c32",
        "status" : "passed",
        "time" : {
          "start" : 1708092405795,
          "stop" : 1708092418766,
          "duration" : 12971
        }
      }, {
        "uid" : "7d389a277eaf2cfe",
        "status" : "passed",
        "time" : {
          "start" : 1708092044016,
          "stop" : 1708092058015,
          "duration" : 13999
        }
      }, {
        "uid" : "9a88ac92b40eef65",
        "status" : "passed",
        "time" : {
          "start" : 1708091212712,
          "stop" : 1708091223927,
          "duration" : 11215
        }
      }, {
        "uid" : "b8525d44ee423c62",
        "status" : "passed",
        "time" : {
          "start" : 1708087519107,
          "stop" : 1708087531214,
          "duration" : 12107
        }
      }, {
        "uid" : "a5d5ddaae6334458",
        "status" : "passed",
        "time" : {
          "start" : 1708085328279,
          "stop" : 1708085344157,
          "duration" : 15878
        }
      }, {
        "uid" : "8f5f9dcec8cca6ed",
        "status" : "passed",
        "time" : {
          "start" : 1708036480555,
          "stop" : 1708036493134,
          "duration" : 12579
        }
      }, {
        "uid" : "1b55e6d208a4333",
        "status" : "passed",
        "time" : {
          "start" : 1708025210787,
          "stop" : 1708025225653,
          "duration" : 14866
        }
      }, {
        "uid" : "93bdf12c73a8f3b6",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: Can't find element by locator https://brainup.site/groups",
        "time" : {
          "start" : 1708011072233,
          "stop" : 1708011072233,
          "duration" : 0
        }
      }, {
        "uid" : "9f4f3062cdbf91ef",
        "status" : "passed",
        "time" : {
          "start" : 1708009789508,
          "stop" : 1708009801335,
          "duration" : 11827
        }
      }, {
        "uid" : "d36c7968ae260aa1",
        "status" : "passed",
        "time" : {
          "start" : 1707995934158,
          "stop" : 1707995951868,
          "duration" : 17710
        }
      }, {
        "uid" : "df8cc9d562d9bb27",
        "status" : "passed",
        "time" : {
          "start" : 1707994836449,
          "stop" : 1707994852250,
          "duration" : 15801
        }
      }, {
        "uid" : "508bf863a0333062",
        "status" : "passed",
        "time" : {
          "start" : 1707990751590,
          "stop" : 1707990764831,
          "duration" : 13241
        }
      }, {
        "uid" : "2c3e1731a21a1adc",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert ['дети кушают кашу', 'дети не кушают кашу'] == ['дети кушают  кашу', 'дети не кушают кашу']\n  At index 0 diff: 'дети кушают кашу' != 'дети кушают  кашу'\n  Full diff:\n  - ['дети кушают  кашу', 'дети не кушают кашу']\n  ?               -\n  + ['дети кушают кашу', 'дети не кушают кашу']",
        "time" : {
          "start" : 1707983444899,
          "stop" : 1707983460975,
          "duration" : 16076
        }
      }, {
        "uid" : "7e2f1cb2a94fb28b",
        "status" : "passed",
        "time" : {
          "start" : 1707971470799,
          "stop" : 1707971484710,
          "duration" : 13911
        }
      }, {
        "uid" : "a5ad5366b149a24",
        "status" : "passed",
        "time" : {
          "start" : 1707924520608,
          "stop" : 1707924536118,
          "duration" : 15510
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7bc01f4107b8e4a5.json",
  "parameterValues" : [ ]
}
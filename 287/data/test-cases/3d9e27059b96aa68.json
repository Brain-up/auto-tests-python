{
  "uid" : "3d9e27059b96aa68",
  "name" : "Verify href, status code of the 'All Team' link",
  "fullName" : "tests.contributors_page_test.TestContributorsPageLinks#test_cnp_03_02_verify_all_team_link",
  "historyId" : "2513d614bdf55f80776a06878d6c6d12",
  "time" : {
    "start" : 1727084746400,
    "stop" : 1727084746415,
    "duration" : 15
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//section//a)[67]\"}\n  (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55f744aa52da <unknown>\n#1 0x55f744773200 <unknown>\n#2 0x55f7447c2aa2 <unknown>\n#3 0x55f7447c2d41 <unknown>\n#4 0x55f744808964 <unknown>\n#5 0x55f7447e78fd <unknown>\n#6 0x55f744805dfd <unknown>\n#7 0x55f7447e7673 <unknown>\n#8 0x55f7447b5473 <unknown>\n#9 0x55f7447b647e <unknown>\n#10 0x55f744a6c0db <unknown>\n#11 0x55f744a70071 <unknown>\n#12 0x55f744a589d5 <unknown>\n#13 0x55f744a70bf2 <unknown>\n#14 0x55f744a3db6f <unknown>\n#15 0x55f744a94248 <unknown>\n#16 0x55f744a94417 <unknown>\n#17 0x55f744aa40cc <unknown>\n#18 0x7f1f6bc94ac3 <unknown>",
  "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7fd120c17f50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"02981f621d3cec300947546a1822c28d\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:161: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd120924a70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55f744a94417 \\\\u003Cunknown>\\\\n#17 0x55f744aa40cc \\\\u003Cunknown>\\\\n#18 0x7f1f6bc94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//section//a)[67]\"}\nE         (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55f744aa52da <unknown>\nE       #1 0x55f744773200 <unknown>\nE       #2 0x55f7447c2aa2 <unknown>\nE       #3 0x55f7447c2d41 <unknown>\nE       #4 0x55f744808964 <unknown>\nE       #5 0x55f7447e78fd <unknown>\nE       #6 0x55f744805dfd <unknown>\nE       #7 0x55f7447e7673 <unknown>\nE       #8 0x55f7447b5473 <unknown>\nE       #9 0x55f7447b647e <unknown>\nE       #10 0x55f744a6c0db <unknown>\nE       #11 0x55f744a70071 <unknown>\nE       #12 0x55f744a589d5 <unknown>\nE       #13 0x55f744a70bf2 <unknown>\nE       #14 0x55f744a3db6f <unknown>\nE       #15 0x55f744a94248 <unknown>\nE       #16 0x55f744a94417 <unknown>\nE       #17 0x55f744aa40cc <unknown>\nE       #18 0x7f1f6bc94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1727084743022,
      "stop" : 1727084743764,
      "duration" : 742
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "contributors_page_open",
    "time" : {
      "start" : 1727084743764,
      "stop" : 1727084746400,
      "duration" : 2636
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/contributors",
      "time" : {
        "start" : 1727084743764,
        "stop" : 1727084746400,
        "duration" : 2636
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"02981f621d3cec300947546a1822c28d\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1727084630239,
      "stop" : 1727084630239,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//section//a)[67]\"}\n  (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55f744aa52da <unknown>\n#1 0x55f744773200 <unknown>\n#2 0x55f7447c2aa2 <unknown>\n#3 0x55f7447c2d41 <unknown>\n#4 0x55f744808964 <unknown>\n#5 0x55f7447e78fd <unknown>\n#6 0x55f744805dfd <unknown>\n#7 0x55f7447e7673 <unknown>\n#8 0x55f7447b5473 <unknown>\n#9 0x55f7447b647e <unknown>\n#10 0x55f744a6c0db <unknown>\n#11 0x55f744a70071 <unknown>\n#12 0x55f744a589d5 <unknown>\n#13 0x55f744a70bf2 <unknown>\n#14 0x55f744a3db6f <unknown>\n#15 0x55f744a94248 <unknown>\n#16 0x55f744a94417 <unknown>\n#17 0x55f744aa40cc <unknown>\n#18 0x7f1f6bc94ac3 <unknown>",
    "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7fd120c17f50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"02981f621d3cec300947546a1822c28d\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:161: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd120924a70>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55f744a94417 \\\\u003Cunknown>\\\\n#17 0x55f744aa40cc \\\\u003Cunknown>\\\\n#18 0x7f1f6bc94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//section//a)[67]\"}\nE         (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55f744aa52da <unknown>\nE       #1 0x55f744773200 <unknown>\nE       #2 0x55f7447c2aa2 <unknown>\nE       #3 0x55f7447c2d41 <unknown>\nE       #4 0x55f744808964 <unknown>\nE       #5 0x55f7447e78fd <unknown>\nE       #6 0x55f744805dfd <unknown>\nE       #7 0x55f7447e7673 <unknown>\nE       #8 0x55f7447b5473 <unknown>\nE       #9 0x55f7447b647e <unknown>\nE       #10 0x55f744a6c0db <unknown>\nE       #11 0x55f744a70071 <unknown>\nE       #12 0x55f744a589d5 <unknown>\nE       #13 0x55f744a70bf2 <unknown>\nE       #14 0x55f744a3db6f <unknown>\nE       #15 0x55f744a94248 <unknown>\nE       #16 0x55f744a94417 <unknown>\nE       #17 0x55f744aa40cc <unknown>\nE       #18 0x7f1f6bc94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
    "steps" : [ {
      "name" : "Get attribute 'href' of the 'All Team' link",
      "time" : {
        "start" : 1727084746400,
        "stop" : 1727084746414,
        "duration" : 14
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//section//a)[67]\"}\n  (Session info: chrome=128.0.6613.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55f744aa52da <unknown>\n#1 0x55f744773200 <unknown>\n#2 0x55f7447c2aa2 <unknown>\n#3 0x55f7447c2d41 <unknown>\n#4 0x55f744808964 <unknown>\n#5 0x55f7447e78fd <unknown>\n#6 0x55f744805dfd <unknown>\n#7 0x55f7447e7673 <unknown>\n#8 0x55f7447b5473 <unknown>\n#9 0x55f7447b647e <unknown>\n#10 0x55f744a6c0db <unknown>\n#11 0x55f744a70071 <unknown>\n#12 0x55f744a589d5 <unknown>\n#13 0x55f744a70bf2 <unknown>\n#14 0x55f744a3db6f <unknown>\n#15 0x55f744a94248 <unknown>\n#16 0x55f744a94417 <unknown>\n#17 0x55f744aa40cc <unknown>\n#18 0x7f1f6bc94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/contributors_page.py\", line 161, in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/base_page.py\", line 90, in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "87a2d0856a83204d",
      "name" : "Screenshot 2024-09-23 09:45:46.574590",
      "source" : "87a2d0856a83204d.png",
      "type" : "image/png",
      "size" : 7498
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1727084746576,
      "stop" : 1727084746639,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Contributors Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "contributors_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestContributorsPage"
  }, {
    "name" : "host",
    "value" : "fv-az1016-444"
  }, {
    "name" : "thread",
    "value" : "2269-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.contributors_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 425,
        "unknown" : 0,
        "total" : 433
      },
      "items" : [ {
        "uid" : "58da790f08129158",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/286//#testresult/58da790f08129158",
        "status" : "passed",
        "time" : {
          "start" : 1727083275259,
          "stop" : 1727083275869,
          "duration" : 610
        }
      }, {
        "uid" : "31438097be0ab07e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/131//#testresult/31438097be0ab07e",
        "status" : "passed",
        "time" : {
          "start" : 1727053081346,
          "stop" : 1727053081968,
          "duration" : 622
        }
      }, {
        "uid" : "8eb0220b7d554cb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/285//#testresult/8eb0220b7d554cb",
        "status" : "passed",
        "time" : {
          "start" : 1726998154866,
          "stop" : 1726998155504,
          "duration" : 638
        }
      }, {
        "uid" : "2306bc4f6126343b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/284//#testresult/2306bc4f6126343b",
        "status" : "passed",
        "time" : {
          "start" : 1726996527533,
          "stop" : 1726996528064,
          "duration" : 531
        }
      }, {
        "uid" : "825a7351ef67cfc0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/284//#testresult/825a7351ef67cfc0",
        "status" : "passed",
        "time" : {
          "start" : 1726995086257,
          "stop" : 1726995086805,
          "duration" : 548
        }
      }, {
        "uid" : "cda87365eeeafdfc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/130//#testresult/cda87365eeeafdfc",
        "status" : "passed",
        "time" : {
          "start" : 1726966891941,
          "stop" : 1726966892756,
          "duration" : 815
        }
      }, {
        "uid" : "993aa0249f1064a1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/283//#testresult/993aa0249f1064a1",
        "status" : "passed",
        "time" : {
          "start" : 1726912464649,
          "stop" : 1726912465213,
          "duration" : 564
        }
      }, {
        "uid" : "715fcdd7a0e52c5f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/282//#testresult/715fcdd7a0e52c5f",
        "status" : "passed",
        "time" : {
          "start" : 1726910690653,
          "stop" : 1726910691216,
          "duration" : 563
        }
      }, {
        "uid" : "a24607a3a351a75e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/281//#testresult/a24607a3a351a75e",
        "status" : "passed",
        "time" : {
          "start" : 1726908462704,
          "stop" : 1726908463263,
          "duration" : 559
        }
      }, {
        "uid" : "9ecdbd416db4b469",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/129//#testresult/9ecdbd416db4b469",
        "status" : "passed",
        "time" : {
          "start" : 1726880157343,
          "stop" : 1726880158097,
          "duration" : 754
        }
      }, {
        "uid" : "42b089a7e757545b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/280//#testresult/42b089a7e757545b",
        "status" : "passed",
        "time" : {
          "start" : 1726821040880,
          "stop" : 1726821041513,
          "duration" : 633
        }
      }, {
        "uid" : "39ed7391565beb4",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/279//#testresult/39ed7391565beb4",
        "status" : "passed",
        "time" : {
          "start" : 1726818399671,
          "stop" : 1726818400211,
          "duration" : 540
        }
      }, {
        "uid" : "a44155cf26db632d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/128//#testresult/a44155cf26db632d",
        "status" : "passed",
        "time" : {
          "start" : 1726793793836,
          "stop" : 1726793794659,
          "duration" : 823
        }
      }, {
        "uid" : "e8c0191da32700f1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/278//#testresult/e8c0191da32700f1",
        "status" : "passed",
        "time" : {
          "start" : 1726734215555,
          "stop" : 1726734216178,
          "duration" : 623
        }
      }, {
        "uid" : "a42aef602526b5a5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/277//#testresult/a42aef602526b5a5",
        "status" : "passed",
        "time" : {
          "start" : 1726731896292,
          "stop" : 1726731896836,
          "duration" : 544
        }
      }, {
        "uid" : "d1be6ea89923a73b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/277//#testresult/d1be6ea89923a73b",
        "status" : "passed",
        "time" : {
          "start" : 1726730587319,
          "stop" : 1726730587926,
          "duration" : 607
        }
      }, {
        "uid" : "d57d6bc1a97283dc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/127//#testresult/d57d6bc1a97283dc",
        "status" : "passed",
        "time" : {
          "start" : 1726707379407,
          "stop" : 1726707380028,
          "duration" : 621
        }
      }, {
        "uid" : "827cbb8264491df6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/276//#testresult/827cbb8264491df6",
        "status" : "passed",
        "time" : {
          "start" : 1726649565793,
          "stop" : 1726649566331,
          "duration" : 538
        }
      }, {
        "uid" : "a7f8694cff52fba2",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/275//#testresult/a7f8694cff52fba2",
        "status" : "passed",
        "time" : {
          "start" : 1726647813952,
          "stop" : 1726647814771,
          "duration" : 819
        }
      }, {
        "uid" : "25e3166e355ad231",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/126//#testresult/25e3166e355ad231",
        "status" : "passed",
        "time" : {
          "start" : 1726620910040,
          "stop" : 1726620910600,
          "duration" : 560
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3d9e27059b96aa68.json",
  "parameterValues" : [ ]
}
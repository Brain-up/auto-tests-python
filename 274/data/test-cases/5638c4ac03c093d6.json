{
  "uid" : "5638c4ac03c093d6",
  "name" : "Check statistic table.",
  "fullName" : "tests.test_speech_exercises_ru.TestCardsRU#test_get_statistic_data",
  "historyId" : "15df626f86a935fbcd917f7ea4002a26",
  "time" : {
    "start" : 1726582453564,
    "stop" : 1726582453564,
    "duration" : 0
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nselenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_SSL_SERVER_CERT_BAD_FORMAT\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55dcd28ac86a <unknown>\n#1 0x55dcd257ae50 <unknown>\n#2 0x55dcd2573011 <unknown>\n#3 0x55dcd25630e9 <unknown>\n#4 0x55dcd2564e54 <unknown>\n#5 0x55dcd256339d <unknown>\n#6 0x55dcd2562c1c <unknown>\n#7 0x55dcd2562b0d <unknown>\n#8 0x55dcd2560b11 <unknown>\n#9 0x55dcd25611aa <unknown>\n#10 0x55dcd257d771 <unknown>\n#11 0x55dcd260e515 <unknown>\n#12 0x55dcd25ef492 <unknown>\n#13 0x55dcd260d9c6 <unknown>\n#14 0x55dcd25ef233 <unknown>\n#15 0x55dcd25bd093 <unknown>\n#16 0x55dcd25be09e <unknown>\n#17 0x55dcd2873acb <unknown>\n#18 0x55dcd2877a81 <unknown>\n#19 0x55dcd285f695 <unknown>\n#20 0x55dcd28785f2 <unknown>\n#21 0x55dcd284486f <unknown>\n#22 0x55dcd289b668 <unknown>\n#23 0x55dcd289b832 <unknown>\n#24 0x55dcd28ab65c <unknown>\n#25 0x7fe098694ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d1d905dab0b4c892ad54d71fb15ac9d\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f7d773a0b90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_SSL_SERVER_CERT_BAD_FOR...\\\\n#23 0x55dcd289b832 \\\\u003Cunknown>\\\\n#24 0x55dcd28ab65c \\\\u003Cunknown>\\\\n#25 0x7fe098694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_SSL_SERVER_CERT_BAD_FORMAT\nE         (Session info: chrome=128.0.6613.119)\nE       Stacktrace:\nE       #0 0x55dcd28ac86a <unknown>\nE       #1 0x55dcd257ae50 <unknown>\nE       #2 0x55dcd2573011 <unknown>\nE       #3 0x55dcd25630e9 <unknown>\nE       #4 0x55dcd2564e54 <unknown>\nE       #5 0x55dcd256339d <unknown>\nE       #6 0x55dcd2562c1c <unknown>\nE       #7 0x55dcd2562b0d <unknown>\nE       #8 0x55dcd2560b11 <unknown>\nE       #9 0x55dcd25611aa <unknown>\nE       #10 0x55dcd257d771 <unknown>\nE       #11 0x55dcd260e515 <unknown>\nE       #12 0x55dcd25ef492 <unknown>\nE       #13 0x55dcd260d9c6 <unknown>\nE       #14 0x55dcd25ef233 <unknown>\nE       #15 0x55dcd25bd093 <unknown>\nE       #16 0x55dcd25be09e <unknown>\nE       #17 0x55dcd2873acb <unknown>\nE       #18 0x55dcd2877a81 <unknown>\nE       #19 0x55dcd285f695 <unknown>\nE       #20 0x55dcd28785f2 <unknown>\nE       #21 0x55dcd284486f <unknown>\nE       #22 0x55dcd289b668 <unknown>\nE       #23 0x55dcd289b832 <unknown>\nE       #24 0x55dcd28ab65c <unknown>\nE       #25 0x7fe098694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1726582453564,
      "stop" : 1726582454340,
      "duration" : 776
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1726582211375,
      "stop" : 1726582211375,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1726582454340,
      "stop" : 1726582455547,
      "duration" : 1207
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_SSL_SERVER_CERT_BAD_FORMAT\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55dcd28ac86a <unknown>\n#1 0x55dcd257ae50 <unknown>\n#2 0x55dcd2573011 <unknown>\n#3 0x55dcd25630e9 <unknown>\n#4 0x55dcd2564e54 <unknown>\n#5 0x55dcd256339d <unknown>\n#6 0x55dcd2562c1c <unknown>\n#7 0x55dcd2562b0d <unknown>\n#8 0x55dcd2560b11 <unknown>\n#9 0x55dcd25611aa <unknown>\n#10 0x55dcd257d771 <unknown>\n#11 0x55dcd260e515 <unknown>\n#12 0x55dcd25ef492 <unknown>\n#13 0x55dcd260d9c6 <unknown>\n#14 0x55dcd25ef233 <unknown>\n#15 0x55dcd25bd093 <unknown>\n#16 0x55dcd25be09e <unknown>\n#17 0x55dcd2873acb <unknown>\n#18 0x55dcd2877a81 <unknown>\n#19 0x55dcd285f695 <unknown>\n#20 0x55dcd28785f2 <unknown>\n#21 0x55dcd284486f <unknown>\n#22 0x55dcd289b668 <unknown>\n#23 0x55dcd289b832 <unknown>\n#24 0x55dcd28ab65c <unknown>\n#25 0x7fe098694ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 22, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1726582454340,
        "stop" : 1726582455547,
        "duration" : 1207
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_SSL_SERVER_CERT_BAD_FORMAT\n  (Session info: chrome=128.0.6613.119)\nStacktrace:\n#0 0x55dcd28ac86a <unknown>\n#1 0x55dcd257ae50 <unknown>\n#2 0x55dcd2573011 <unknown>\n#3 0x55dcd25630e9 <unknown>\n#4 0x55dcd2564e54 <unknown>\n#5 0x55dcd256339d <unknown>\n#6 0x55dcd2562c1c <unknown>\n#7 0x55dcd2562b0d <unknown>\n#8 0x55dcd2560b11 <unknown>\n#9 0x55dcd25611aa <unknown>\n#10 0x55dcd257d771 <unknown>\n#11 0x55dcd260e515 <unknown>\n#12 0x55dcd25ef492 <unknown>\n#13 0x55dcd260d9c6 <unknown>\n#14 0x55dcd25ef233 <unknown>\n#15 0x55dcd25bd093 <unknown>\n#16 0x55dcd25be09e <unknown>\n#17 0x55dcd2873acb <unknown>\n#18 0x55dcd2877a81 <unknown>\n#19 0x55dcd285f695 <unknown>\n#20 0x55dcd28785f2 <unknown>\n#21 0x55dcd284486f <unknown>\n#22 0x55dcd289b668 <unknown>\n#23 0x55dcd289b832 <unknown>\n#24 0x55dcd28ab65c <unknown>\n#25 0x7fe098694ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 22, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.5/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d1d905dab0b4c892ad54d71fb15ac9d\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1726582455579,
      "stop" : 1726582455641,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "Statistic."
  }, {
    "name" : "epic",
    "value" : "Speech exercises."
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "subSuite",
    "value" : "TestCardsRU"
  }, {
    "name" : "host",
    "value" : "fv-az1535-406"
  }, {
    "name" : "thread",
    "value" : "2301-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_speech_exercises_ru"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 12,
        "passed" : 404,
        "unknown" : 0,
        "total" : 416
      },
      "items" : [ {
        "uid" : "81acc22873ca1f5f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/273//#testresult/81acc22873ca1f5f",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726569312344,
          "stop" : 1726569313692,
          "duration" : 1348
        }
      }, {
        "uid" : "48b22d8dbf8cb609",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/272//#testresult/48b22d8dbf8cb609",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726561242621,
          "stop" : 1726561243987,
          "duration" : 1366
        }
      }, {
        "uid" : "6d5c9a8772b6680a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/271//#testresult/6d5c9a8772b6680a",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726559888864,
          "stop" : 1726559890310,
          "duration" : 1446
        }
      }, {
        "uid" : "691a78e028fbadcc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/125//#testresult/691a78e028fbadcc",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726534564296,
          "stop" : 1726534565630,
          "duration" : 1334
        }
      }, {
        "uid" : "aee6c2521d14fe70",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/270//#testresult/aee6c2521d14fe70",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726475585861,
          "stop" : 1726475587329,
          "duration" : 1468
        }
      }, {
        "uid" : "d5dee4d03c4b8b79",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/269//#testresult/d5dee4d03c4b8b79",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726473698993,
          "stop" : 1726473700501,
          "duration" : 1508
        }
      }, {
        "uid" : "dfae1df1748d3bbb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/124//#testresult/dfae1df1748d3bbb",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726449128316,
          "stop" : 1726449129721,
          "duration" : 1405
        }
      }, {
        "uid" : "149e63eea5ec605c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/268//#testresult/149e63eea5ec605c",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726387476621,
          "stop" : 1726387478144,
          "duration" : 1523
        }
      }, {
        "uid" : "86537bcd61fc3491",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/267//#testresult/86537bcd61fc3491",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726385091614,
          "stop" : 1726385092975,
          "duration" : 1361
        }
      }, {
        "uid" : "883591c021b161f6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/123//#testresult/883591c021b161f6",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726362915949,
          "stop" : 1726362917477,
          "duration" : 1528
        }
      }, {
        "uid" : "297b17d7cf70fdfe",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/266//#testresult/297b17d7cf70fdfe",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726302377437,
          "stop" : 1726302378859,
          "duration" : 1422
        }
      }, {
        "uid" : "335b0370b4116e0c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/265//#testresult/335b0370b4116e0c",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726300018194,
          "stop" : 1726300019549,
          "duration" : 1355
        }
      }, {
        "uid" : "c09f202fbcceb8aa",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/264//#testresult/c09f202fbcceb8aa",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726298088622,
          "stop" : 1726298090058,
          "duration" : 1436
        }
      }, {
        "uid" : "bcf46c8bd951b23c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/122//#testresult/bcf46c8bd951b23c",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726276041048,
          "stop" : 1726276042412,
          "duration" : 1364
        }
      }, {
        "uid" : "31d82f79c070ed",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/263//#testresult/31d82f79c070ed",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726218956349,
          "stop" : 1726218957810,
          "duration" : 1461
        }
      }, {
        "uid" : "32b4cc7b39e76371",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/262//#testresult/32b4cc7b39e76371",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726217837179,
          "stop" : 1726217838521,
          "duration" : 1342
        }
      }, {
        "uid" : "b9d7fe9bcbe90b42",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/261//#testresult/b9d7fe9bcbe90b42",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726215629300,
          "stop" : 1726215631315,
          "duration" : 2015
        }
      }, {
        "uid" : "39de092f2f316cea",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/121//#testresult/39de092f2f316cea",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726189607434,
          "stop" : 1726189608805,
          "duration" : 1371
        }
      }, {
        "uid" : "c7bc59361276c5f9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/260//#testresult/c7bc59361276c5f9",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726156494508,
          "stop" : 1726156495844,
          "duration" : 1336
        }
      }, {
        "uid" : "44b10307e026c28c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/259//#testresult/44b10307e026c28c",
        "status" : "passed",
        "statusDetails" : "XPASS",
        "time" : {
          "start" : 1726144427072,
          "stop" : 1726144428458,
          "duration" : 1386
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "5638c4ac03c093d6.json",
  "parameterValues" : [ ]
}
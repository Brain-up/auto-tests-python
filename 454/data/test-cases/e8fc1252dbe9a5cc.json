{
  "uid" : "e8fc1252dbe9a5cc",
  "name" : "Verify if subgroup links 1-4 lead to correct pages after clicking",
  "fullName" : "tests.exercises_ru_words_page_test.TestExercisesRuWordsPageLinks#test_erw_03_06_verify_subgroup_links_lead_to_correct_pages",
  "historyId" : "d46b4c8bc04520e7a0d0dd86bf27f5cc",
  "time" : {
    "start" : 1737404949385,
    "stop" : 1737404954757,
    "duration" : 5372
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d1e4c068fa <unknown>\n#1 0x55d1e4717d20 <unknown>\n#2 0x55d1e471dae3 <unknown>\n#3 0x55d1e471ffa8 <unknown>\n#4 0x55d1e4720033 <unknown>\n#5 0x55d1e476af56 <unknown>\n#6 0x55d1e4768de5 <unknown>\n#7 0x55d1e4767fa8 <unknown>\n#8 0x55d1e475b92a <unknown>\n#9 0x55d1e478aaf2 <unknown>\n#10 0x55d1e475b0a8 <unknown>\n#11 0x55d1e478acbe <unknown>\n#12 0x55d1e47a9560 <unknown>\n#13 0x55d1e478a893 <unknown>\n#14 0x55d1e475930d <unknown>\n#15 0x55d1e475a32e <unknown>\n#16 0x55d1e4bd300b <unknown>\n#17 0x55d1e4bd6f97 <unknown>\n#18 0x55d1e4bbf71c <unknown>\n#19 0x55d1e4bd7b17 <unknown>\n#20 0x55d1e4ba46cf <unknown>\n#21 0x55d1e4bf56b8 <unknown>\n#22 0x55d1e4bf5880 <unknown>\n#23 0x55d1e4c05776 <unknown>\n#24 0x7f061ec9ca94 <unknown>\n#25 0x7f061ed29c3c <unknown>",
  "statusTrace" : "self = <tests.exercises_ru_words_page_test.TestExercisesRuWordsPage.TestExercisesRuWordsPageLinks object at 0x7f2db64adf40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"03fae7d310b55f695a9fab50306a3a91\")>\nexercises_ru_words_page_open = None\n\n    @allure.title(\"Verify if subgroup links 1-4 lead to correct pages after clicking\")\n    def test_erw_03_06_verify_subgroup_links_lead_to_correct_pages(self, driver, exercises_ru_words_page_open):\n        page = ExercisesRuWordsPage(driver)\n        opened_page1 = page.click_on_subgroup_link_family()\n>       opened_pages2_4 = page.click_on_subgroup_link_beloved_home_food_clothes()\n\ntests/exercises_ru_words_page_test.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/exercises_ru_words_page.py:260: in click_on_subgroup_link_beloved_home_food_clothes\n    self.element_is_present_and_clickable(self.locators.PAGE_LIST3_4).click()\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2db637cad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55d1e4c05776 \\\\u003Cunknown>\\\\n#24 0x7f061ec9ca94 \\\\u003Cunknown>\\\\n#25 0x7f061ed29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55d1e4c068fa <unknown>\nE       #1 0x55d1e4717d20 <unknown>\nE       #2 0x55d1e471dae3 <unknown>\nE       #3 0x55d1e471ffa8 <unknown>\nE       #4 0x55d1e4720033 <unknown>\nE       #5 0x55d1e476af56 <unknown>\nE       #6 0x55d1e4768de5 <unknown>\nE       #7 0x55d1e4767fa8 <unknown>\nE       #8 0x55d1e475b92a <unknown>\nE       #9 0x55d1e478aaf2 <unknown>\nE       #10 0x55d1e475b0a8 <unknown>\nE       #11 0x55d1e478acbe <unknown>\nE       #12 0x55d1e47a9560 <unknown>\nE       #13 0x55d1e478a893 <unknown>\nE       #14 0x55d1e475930d <unknown>\nE       #15 0x55d1e475a32e <unknown>\nE       #16 0x55d1e4bd300b <unknown>\nE       #17 0x55d1e4bd6f97 <unknown>\nE       #18 0x55d1e4bbf71c <unknown>\nE       #19 0x55d1e4bd7b17 <unknown>\nE       #20 0x55d1e4ba46cf <unknown>\nE       #21 0x55d1e4bf56b8 <unknown>\nE       #22 0x55d1e4bf5880 <unknown>\nE       #23 0x55d1e4c05776 <unknown>\nE       #24 0x7f061ec9ca94 <unknown>\nE       #25 0x7f061ed29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "exercises_ru_words_page_open",
    "time" : {
      "start" : 1737404942230,
      "stop" : 1737404949385,
      "duration" : 7155
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/groups/2/series/1",
      "time" : {
        "start" : 1737404942230,
        "stop" : 1737404949384,
        "duration" : 7154
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"03fae7d310b55f695a9fab50306a3a91\")>"
      }, {
        "name" : "main_page_open",
        "value" : "None"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1737404627786,
      "stop" : 1737404627786,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1737404938945,
      "stop" : 1737404939710,
      "duration" : 765
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1737404939710,
      "stop" : 1737404942230,
      "duration" : 2520
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1737404939711,
        "stop" : 1737404942230,
        "duration" : 2519
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"03fae7d310b55f695a9fab50306a3a91\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d1e4c068fa <unknown>\n#1 0x55d1e4717d20 <unknown>\n#2 0x55d1e471dae3 <unknown>\n#3 0x55d1e471ffa8 <unknown>\n#4 0x55d1e4720033 <unknown>\n#5 0x55d1e476af56 <unknown>\n#6 0x55d1e4768de5 <unknown>\n#7 0x55d1e4767fa8 <unknown>\n#8 0x55d1e475b92a <unknown>\n#9 0x55d1e478aaf2 <unknown>\n#10 0x55d1e475b0a8 <unknown>\n#11 0x55d1e478acbe <unknown>\n#12 0x55d1e47a9560 <unknown>\n#13 0x55d1e478a893 <unknown>\n#14 0x55d1e475930d <unknown>\n#15 0x55d1e475a32e <unknown>\n#16 0x55d1e4bd300b <unknown>\n#17 0x55d1e4bd6f97 <unknown>\n#18 0x55d1e4bbf71c <unknown>\n#19 0x55d1e4bd7b17 <unknown>\n#20 0x55d1e4ba46cf <unknown>\n#21 0x55d1e4bf56b8 <unknown>\n#22 0x55d1e4bf5880 <unknown>\n#23 0x55d1e4c05776 <unknown>\n#24 0x7f061ec9ca94 <unknown>\n#25 0x7f061ed29c3c <unknown>",
    "statusTrace" : "self = <tests.exercises_ru_words_page_test.TestExercisesRuWordsPage.TestExercisesRuWordsPageLinks object at 0x7f2db64adf40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"03fae7d310b55f695a9fab50306a3a91\")>\nexercises_ru_words_page_open = None\n\n    @allure.title(\"Verify if subgroup links 1-4 lead to correct pages after clicking\")\n    def test_erw_03_06_verify_subgroup_links_lead_to_correct_pages(self, driver, exercises_ru_words_page_open):\n        page = ExercisesRuWordsPage(driver)\n        opened_page1 = page.click_on_subgroup_link_family()\n>       opened_pages2_4 = page.click_on_subgroup_link_beloved_home_food_clothes()\n\ntests/exercises_ru_words_page_test.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/exercises_ru_words_page.py:260: in click_on_subgroup_link_beloved_home_food_clothes\n    self.element_is_present_and_clickable(self.locators.PAGE_LIST3_4).click()\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2db637cad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55d1e4c05776 \\\\u003Cunknown>\\\\n#24 0x7f061ec9ca94 \\\\u003Cunknown>\\\\n#25 0x7f061ed29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55d1e4c068fa <unknown>\nE       #1 0x55d1e4717d20 <unknown>\nE       #2 0x55d1e471dae3 <unknown>\nE       #3 0x55d1e471ffa8 <unknown>\nE       #4 0x55d1e4720033 <unknown>\nE       #5 0x55d1e476af56 <unknown>\nE       #6 0x55d1e4768de5 <unknown>\nE       #7 0x55d1e4767fa8 <unknown>\nE       #8 0x55d1e475b92a <unknown>\nE       #9 0x55d1e478aaf2 <unknown>\nE       #10 0x55d1e475b0a8 <unknown>\nE       #11 0x55d1e478acbe <unknown>\nE       #12 0x55d1e47a9560 <unknown>\nE       #13 0x55d1e478a893 <unknown>\nE       #14 0x55d1e475930d <unknown>\nE       #15 0x55d1e475a32e <unknown>\nE       #16 0x55d1e4bd300b <unknown>\nE       #17 0x55d1e4bd6f97 <unknown>\nE       #18 0x55d1e4bbf71c <unknown>\nE       #19 0x55d1e4bd7b17 <unknown>\nE       #20 0x55d1e4ba46cf <unknown>\nE       #21 0x55d1e4bf56b8 <unknown>\nE       #22 0x55d1e4bf5880 <unknown>\nE       #23 0x55d1e4c05776 <unknown>\nE       #24 0x7f061ec9ca94 <unknown>\nE       #25 0x7f061ed29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException",
    "steps" : [ {
      "name" : "Click on subgroup link 'Family' and thereby open corresponding web pages in the same tab",
      "time" : {
        "start" : 1737404949385,
        "stop" : 1737404950479,
        "duration" : 1094
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Click on subgroup links 'Beloved Home', 'Food', 'Clothes' \n    and thereby open corresponding web pages in the same tab",
      "time" : {
        "start" : 1737404950480,
        "stop" : 1737404954756,
        "duration" : 4276
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55d1e4c068fa <unknown>\n#1 0x55d1e4717d20 <unknown>\n#2 0x55d1e471dae3 <unknown>\n#3 0x55d1e471ffa8 <unknown>\n#4 0x55d1e4720033 <unknown>\n#5 0x55d1e476af56 <unknown>\n#6 0x55d1e4768de5 <unknown>\n#7 0x55d1e4767fa8 <unknown>\n#8 0x55d1e475b92a <unknown>\n#9 0x55d1e478aaf2 <unknown>\n#10 0x55d1e475b0a8 <unknown>\n#11 0x55d1e478acbe <unknown>\n#12 0x55d1e47a9560 <unknown>\n#13 0x55d1e478a893 <unknown>\n#14 0x55d1e475930d <unknown>\n#15 0x55d1e475a32e <unknown>\n#16 0x55d1e4bd300b <unknown>\n#17 0x55d1e4bd6f97 <unknown>\n#18 0x55d1e4bbf71c <unknown>\n#19 0x55d1e4bd7b17 <unknown>\n#20 0x55d1e4ba46cf <unknown>\n#21 0x55d1e4bf56b8 <unknown>\n#22 0x55d1e4bf5880 <unknown>\n#23 0x55d1e4c05776 <unknown>\n#24 0x7f061ec9ca94 <unknown>\n#25 0x7f061ed29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/exercises_ru_words_page.py\", line 260, in click_on_subgroup_link_beloved_home_food_clothes\n    self.element_is_present_and_clickable(self.locators.PAGE_LIST3_4).click()\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d668297d964d1f3d",
      "name" : "Screenshot 2025-01-20 20:29:14.889992",
      "source" : "d668297d964d1f3d.png",
      "type" : "image/png",
      "size" : 119943
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1737404954891,
      "stop" : 1737404954964,
      "duration" : 73
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Exercises 'Words' Page on the 'ru' local"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "exercises_ru_words_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestExercisesRuWordsPage"
  }, {
    "name" : "host",
    "value" : "fv-az1118-779"
  }, {
    "name" : "thread",
    "value" : "2398-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.exercises_ru_words_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "d72be94d5bb69e29",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/250//#testresult/d72be94d5bb69e29",
        "status" : "passed",
        "time" : {
          "start" : 1737334962061,
          "stop" : 1737334970229,
          "duration" : 8168
        }
      }, {
        "uid" : "225f1377b8d8fb92",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/249//#testresult/225f1377b8d8fb92",
        "status" : "passed",
        "time" : {
          "start" : 1737248725891,
          "stop" : 1737248733647,
          "duration" : 7756
        }
      }, {
        "uid" : "63fb5290ba22b6d6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/453//#testresult/63fb5290ba22b6d6",
        "status" : "passed",
        "time" : {
          "start" : 1737239298630,
          "stop" : 1737239306320,
          "duration" : 7690
        }
      }, {
        "uid" : "37482b73702eae15",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/452//#testresult/37482b73702eae15",
        "status" : "passed",
        "time" : {
          "start" : 1737232295666,
          "stop" : 1737232303311,
          "duration" : 7645
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e8fc1252dbe9a5cc.json",
  "parameterValues" : [ ]
}
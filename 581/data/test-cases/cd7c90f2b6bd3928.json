{
  "uid" : "cd7c90f2b6bd3928",
  "name" : "Verify text in the 'All Specialists' link",
  "fullName" : "tests.specialists_page_test.TestSpecialistPageText#test_sp_02_05_verify_text_in_link",
  "historyId" : "45dbc9c59b9bd62a24467ed37bde8612",
  "time" : {
    "start" : 1748275329471,
    "stop" : 1748275329471,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: Unable to receive message from renderer\n  (Session info: chrome=136.0.7103.92)\nStacktrace:\n#0 0x5575648bf78a <unknown>\n#1 0x5575643620a0 <unknown>\n#2 0x557564349ea0 <unknown>\n#3 0x557564349ba2 <unknown>\n#4 0x5575643479ef <unknown>\n#5 0x55756434831f <unknown>\n#6 0x557564356f83 <unknown>\n#7 0x5575643705ee <unknown>\n#8 0x557564376e1b <unknown>\n#9 0x557564348a30 <unknown>\n#10 0x55756436fdf5 <unknown>\n#11 0x5575643ff5ba <unknown>\n#12 0x5575643d9173 <unknown>\n#13 0x5575643a5d4b <unknown>\n#14 0x5575643a69b1 <unknown>\n#15 0x55756488493b <unknown>\n#16 0x55756488883a <unknown>\n#17 0x55756486c692 <unknown>\n#18 0x5575648893c4 <unknown>\n#19 0x5575648514cf <unknown>\n#20 0x5575648ad568 <unknown>\n#21 0x5575648ad746 <unknown>\n#22 0x5575648be5f6 <unknown>\n#23 0x7f17bd29caa4 <unknown>\n#24 0x7f17bd329c3c <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"503a958c4197ab7579306835a9634e23\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f30dfea3650>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"invalid session id: session deleted as the...\\\\n#22 0x5575648be5f6 \\\\u003Cunknown>\\\\n#23 0x7f17bd29caa4 \\\\u003Cunknown>\\\\n#24 0x7f17bd329c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nE       from disconnected: Unable to receive message from renderer\nE         (Session info: chrome=136.0.7103.92)\nE       Stacktrace:\nE       #0 0x5575648bf78a <unknown>\nE       #1 0x5575643620a0 <unknown>\nE       #2 0x557564349ea0 <unknown>\nE       #3 0x557564349ba2 <unknown>\nE       #4 0x5575643479ef <unknown>\nE       #5 0x55756434831f <unknown>\nE       #6 0x557564356f83 <unknown>\nE       #7 0x5575643705ee <unknown>\nE       #8 0x557564376e1b <unknown>\nE       #9 0x557564348a30 <unknown>\nE       #10 0x55756436fdf5 <unknown>\nE       #11 0x5575643ff5ba <unknown>\nE       #12 0x5575643d9173 <unknown>\nE       #13 0x5575643a5d4b <unknown>\nE       #14 0x5575643a69b1 <unknown>\nE       #15 0x55756488493b <unknown>\nE       #16 0x55756488883a <unknown>\nE       #17 0x55756486c692 <unknown>\nE       #18 0x5575648893c4 <unknown>\nE       #19 0x5575648514cf <unknown>\nE       #20 0x5575648ad568 <unknown>\nE       #21 0x5575648ad746 <unknown>\nE       #22 0x5575648be5f6 <unknown>\nE       #23 0x7f17bd29caa4 <unknown>\nE       #24 0x7f17bd329c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidSessionIdException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1748275329472,
      "stop" : 1748275330292,
      "duration" : 820
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1748274223042,
      "stop" : 1748274223042,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1748275330292,
      "stop" : 1748275333122,
      "duration" : 2830
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: Unable to receive message from renderer\n  (Session info: chrome=136.0.7103.92)\nStacktrace:\n#0 0x5575648bf78a <unknown>\n#1 0x5575643620a0 <unknown>\n#2 0x557564349ea0 <unknown>\n#3 0x557564349ba2 <unknown>\n#4 0x5575643479ef <unknown>\n#5 0x55756434831f <unknown>\n#6 0x557564356f83 <unknown>\n#7 0x5575643705ee <unknown>\n#8 0x557564376e1b <unknown>\n#9 0x557564348a30 <unknown>\n#10 0x55756436fdf5 <unknown>\n#11 0x5575643ff5ba <unknown>\n#12 0x5575643d9173 <unknown>\n#13 0x5575643a5d4b <unknown>\n#14 0x5575643a69b1 <unknown>\n#15 0x55756488493b <unknown>\n#16 0x55756488883a <unknown>\n#17 0x55756486c692 <unknown>\n#18 0x5575648893c4 <unknown>\n#19 0x5575648514cf <unknown>\n#20 0x5575648ad568 <unknown>\n#21 0x5575648ad746 <unknown>\n#22 0x5575648be5f6 <unknown>\n#23 0x7f17bd29caa4 <unknown>\n#24 0x7f17bd329c3c <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 29, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1748275330292,
        "stop" : 1748275333119,
        "duration" : 2827
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: Unable to receive message from renderer\n  (Session info: chrome=136.0.7103.92)\nStacktrace:\n#0 0x5575648bf78a <unknown>\n#1 0x5575643620a0 <unknown>\n#2 0x557564349ea0 <unknown>\n#3 0x557564349ba2 <unknown>\n#4 0x5575643479ef <unknown>\n#5 0x55756434831f <unknown>\n#6 0x557564356f83 <unknown>\n#7 0x5575643705ee <unknown>\n#8 0x557564376e1b <unknown>\n#9 0x557564348a30 <unknown>\n#10 0x55756436fdf5 <unknown>\n#11 0x5575643ff5ba <unknown>\n#12 0x5575643d9173 <unknown>\n#13 0x5575643a5d4b <unknown>\n#14 0x5575643a69b1 <unknown>\n#15 0x55756488493b <unknown>\n#16 0x55756488883a <unknown>\n#17 0x55756486c692 <unknown>\n#18 0x5575648893c4 <unknown>\n#19 0x5575648514cf <unknown>\n#20 0x5575648ad568 <unknown>\n#21 0x5575648ad746 <unknown>\n#22 0x5575648be5f6 <unknown>\n#23 0x7f17bd29caa4 <unknown>\n#24 0x7f17bd329c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 29, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"503a958c4197ab7579306835a9634e23\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1748275333190,
      "stop" : 1748275333193,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Specialists Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "specialists_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestSpecialistsPage"
  }, {
    "name" : "host",
    "value" : "pkrvmf6wy0o8zjz"
  }, {
    "name" : "thread",
    "value" : "2545-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.specialists_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 175,
        "unknown" : 0,
        "total" : 177
      },
      "items" : [ {
        "uid" : "33a39da49c791a90",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/376//#testresult/33a39da49c791a90",
        "status" : "passed",
        "time" : {
          "start" : 1748222866698,
          "stop" : 1748222866740,
          "duration" : 42
        }
      }, {
        "uid" : "190a90b781626eef",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/580//#testresult/190a90b781626eef",
        "status" : "passed",
        "time" : {
          "start" : 1748160887535,
          "stop" : 1748160887583,
          "duration" : 48
        }
      }, {
        "uid" : "c4a0ebec19d76ee9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/375//#testresult/c4a0ebec19d76ee9",
        "status" : "passed",
        "time" : {
          "start" : 1748136538647,
          "stop" : 1748136538693,
          "duration" : 46
        }
      }, {
        "uid" : "4a4b8f4f7cec24f8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/579//#testresult/4a4b8f4f7cec24f8",
        "status" : "passed",
        "time" : {
          "start" : 1748108227910,
          "stop" : 1748108227954,
          "duration" : 44
        }
      }, {
        "uid" : "28bf34e17b9d15a8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/374//#testresult/28bf34e17b9d15a8",
        "status" : "passed",
        "time" : {
          "start" : 1748049604011,
          "stop" : 1748049604056,
          "duration" : 45
        }
      }, {
        "uid" : "9639ea0ea0072d78",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/578//#testresult/9639ea0ea0072d78",
        "status" : "passed",
        "time" : {
          "start" : 1747990660027,
          "stop" : 1747990660072,
          "duration" : 45
        }
      }, {
        "uid" : "798d89af2e7a5fe2",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/373//#testresult/798d89af2e7a5fe2",
        "status" : "passed",
        "time" : {
          "start" : 1747963476433,
          "stop" : 1747963476477,
          "duration" : 44
        }
      }, {
        "uid" : "bc7a84dbd5d99085",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/577//#testresult/bc7a84dbd5d99085",
        "status" : "passed",
        "time" : {
          "start" : 1747943694985,
          "stop" : 1747943695034,
          "duration" : 49
        }
      }, {
        "uid" : "fe31ce18acd6f12c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/372//#testresult/fe31ce18acd6f12c",
        "status" : "passed",
        "time" : {
          "start" : 1747877105077,
          "stop" : 1747877105121,
          "duration" : 44
        }
      }, {
        "uid" : "849875d3d64985d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/576//#testresult/849875d3d64985d",
        "status" : "passed",
        "time" : {
          "start" : 1747852780456,
          "stop" : 1747852780505,
          "duration" : 49
        }
      }, {
        "uid" : "b33f1132817b04a8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/371//#testresult/b33f1132817b04a8",
        "status" : "passed",
        "time" : {
          "start" : 1747790836452,
          "stop" : 1747790836499,
          "duration" : 47
        }
      }, {
        "uid" : "15f6c68554495a94",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/575//#testresult/15f6c68554495a94",
        "status" : "passed",
        "time" : {
          "start" : 1747771980960,
          "stop" : 1747771981005,
          "duration" : 45
        }
      }, {
        "uid" : "e1f06948357247ed",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/370//#testresult/e1f06948357247ed",
        "status" : "passed",
        "time" : {
          "start" : 1747704277447,
          "stop" : 1747704277493,
          "duration" : 46
        }
      }, {
        "uid" : "9c145acd6b6f33b6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/574//#testresult/9c145acd6b6f33b6",
        "status" : "passed",
        "time" : {
          "start" : 1747643954900,
          "stop" : 1747643954946,
          "duration" : 46
        }
      }, {
        "uid" : "558fdbff81de1601",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/369//#testresult/558fdbff81de1601",
        "status" : "passed",
        "time" : {
          "start" : 1747618133006,
          "stop" : 1747618133051,
          "duration" : 45
        }
      }, {
        "uid" : "82bf35f46375a4fd",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/573//#testresult/82bf35f46375a4fd",
        "status" : "passed",
        "time" : {
          "start" : 1747593173083,
          "stop" : 1747593173128,
          "duration" : 45
        }
      }, {
        "uid" : "75fcbef60335ffe",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/368//#testresult/75fcbef60335ffe",
        "status" : "passed",
        "time" : {
          "start" : 1747531753458,
          "stop" : 1747531753507,
          "duration" : 49
        }
      }, {
        "uid" : "2852b2084c4401ed",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/572//#testresult/2852b2084c4401ed",
        "status" : "passed",
        "time" : {
          "start" : 1747469037358,
          "stop" : 1747469037403,
          "duration" : 45
        }
      }, {
        "uid" : "9f0ec93d8a724ee7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/367//#testresult/9f0ec93d8a724ee7",
        "status" : "passed",
        "time" : {
          "start" : 1747445094503,
          "stop" : 1747445094548,
          "duration" : 45
        }
      }, {
        "uid" : "1cb85e40c7b1972e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/571//#testresult/1cb85e40c7b1972e",
        "status" : "passed",
        "time" : {
          "start" : 1747412933469,
          "stop" : 1747412933511,
          "duration" : 42
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "cd7c90f2b6bd3928.json",
  "parameterValues" : [ ]
}
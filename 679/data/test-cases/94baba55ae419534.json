{
  "uid" : "94baba55ae419534",
  "name" : "Checking the possibility of authorization with the correct data",
  "fullName" : "tests.authorisation_page_test.TestAuthorizedUserPage#test_auth_user_with_correct_data",
  "historyId" : "694ff1b8129511a73727da75eece5283",
  "time" : {
    "start" : 1757365603588,
    "stop" : 1757365603588,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.217\n  (Session info: chrome=139.0.7258.154)\nStacktrace:\n#0 0x55c2c0b0508a <unknown>\n#1 0x55c2c05a4a70 <unknown>\n#2 0x55c2c058cd7c <unknown>\n#3 0x55c2c058ca85 <unknown>\n#4 0x55c2c058a8ee <unknown>\n#5 0x55c2c058b23f <unknown>\n#6 0x55c2c0599c03 <unknown>\n#7 0x55c2c05b2fce <unknown>\n#8 0x55c2c05b97db <unknown>\n#9 0x55c2c058b980 <unknown>\n#10 0x55c2c05b2d27 <unknown>\n#11 0x55c2c06424b3 <unknown>\n#12 0x55c2c061c1b3 <unknown>\n#13 0x55c2c05e859b <unknown>\n#14 0x55c2c05e9971 <unknown>\n#15 0x55c2c0aca25b <unknown>\n#16 0x55c2c0acdfa9 <unknown>\n#17 0x55c2c0ab1339 <unknown>\n#18 0x55c2c0aceb58 <unknown>\n#19 0x55c2c0a95c1f <unknown>\n#20 0x55c2c0af2118 <unknown>\n#21 0x55c2c0af22f6 <unknown>\n#22 0x55c2c0b04066 <unknown>\n#23 0x7f67b9e9caa4 <unknown>\n#24 0x7f67b9f29c3c <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"33265959c4f1b792cd54afaefca81818\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f02d3cc8a70>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 2...\\\\n#22 0x55c2c0b04066 \\\\u003Cunknown>\\\\n#23 0x7f67b9e9caa4 \\\\u003Cunknown>\\\\n#24 0x7f67b9f29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.217\nE         (Session info: chrome=139.0.7258.154)\nE       Stacktrace:\nE       #0 0x55c2c0b0508a <unknown>\nE       #1 0x55c2c05a4a70 <unknown>\nE       #2 0x55c2c058cd7c <unknown>\nE       #3 0x55c2c058ca85 <unknown>\nE       #4 0x55c2c058a8ee <unknown>\nE       #5 0x55c2c058b23f <unknown>\nE       #6 0x55c2c0599c03 <unknown>\nE       #7 0x55c2c05b2fce <unknown>\nE       #8 0x55c2c05b97db <unknown>\nE       #9 0x55c2c058b980 <unknown>\nE       #10 0x55c2c05b2d27 <unknown>\nE       #11 0x55c2c06424b3 <unknown>\nE       #12 0x55c2c061c1b3 <unknown>\nE       #13 0x55c2c05e859b <unknown>\nE       #14 0x55c2c05e9971 <unknown>\nE       #15 0x55c2c0aca25b <unknown>\nE       #16 0x55c2c0acdfa9 <unknown>\nE       #17 0x55c2c0ab1339 <unknown>\nE       #18 0x55c2c0aceb58 <unknown>\nE       #19 0x55c2c0a95c1f <unknown>\nE       #20 0x55c2c0af2118 <unknown>\nE       #21 0x55c2c0af22f6 <unknown>\nE       #22 0x55c2c0b04066 <unknown>\nE       #23 0x7f67b9e9caa4 <unknown>\nE       #24 0x7f67b9f29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1757365612331,
      "stop" : 1757365912351,
      "duration" : 300020
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.217\n  (Session info: chrome=139.0.7258.154)\nStacktrace:\n#0 0x55c2c0b0508a <unknown>\n#1 0x55c2c05a4a70 <unknown>\n#2 0x55c2c058cd7c <unknown>\n#3 0x55c2c058ca85 <unknown>\n#4 0x55c2c058a8ee <unknown>\n#5 0x55c2c058b23f <unknown>\n#6 0x55c2c0599c03 <unknown>\n#7 0x55c2c05b2fce <unknown>\n#8 0x55c2c05b97db <unknown>\n#9 0x55c2c058b980 <unknown>\n#10 0x55c2c05b2d27 <unknown>\n#11 0x55c2c06424b3 <unknown>\n#12 0x55c2c061c1b3 <unknown>\n#13 0x55c2c05e859b <unknown>\n#14 0x55c2c05e9971 <unknown>\n#15 0x55c2c0aca25b <unknown>\n#16 0x55c2c0acdfa9 <unknown>\n#17 0x55c2c0ab1339 <unknown>\n#18 0x55c2c0aceb58 <unknown>\n#19 0x55c2c0a95c1f <unknown>\n#20 0x55c2c0af2118 <unknown>\n#21 0x55c2c0af22f6 <unknown>\n#22 0x55c2c0b04066 <unknown>\n#23 0x7f67b9e9caa4 <unknown>\n#24 0x7f67b9f29c3c <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 32, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/",
      "time" : {
        "start" : 1757365612331,
        "stop" : 1757365912350,
        "duration" : 300019
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.217\n  (Session info: chrome=139.0.7258.154)\nStacktrace:\n#0 0x55c2c0b0508a <unknown>\n#1 0x55c2c05a4a70 <unknown>\n#2 0x55c2c058cd7c <unknown>\n#3 0x55c2c058ca85 <unknown>\n#4 0x55c2c058a8ee <unknown>\n#5 0x55c2c058b23f <unknown>\n#6 0x55c2c0599c03 <unknown>\n#7 0x55c2c05b2fce <unknown>\n#8 0x55c2c05b97db <unknown>\n#9 0x55c2c058b980 <unknown>\n#10 0x55c2c05b2d27 <unknown>\n#11 0x55c2c06424b3 <unknown>\n#12 0x55c2c061c1b3 <unknown>\n#13 0x55c2c05e859b <unknown>\n#14 0x55c2c05e9971 <unknown>\n#15 0x55c2c0aca25b <unknown>\n#16 0x55c2c0acdfa9 <unknown>\n#17 0x55c2c0ab1339 <unknown>\n#18 0x55c2c0aceb58 <unknown>\n#19 0x55c2c0a95c1f <unknown>\n#20 0x55c2c0af2118 <unknown>\n#21 0x55c2c0af22f6 <unknown>\n#22 0x55c2c0b04066 <unknown>\n#23 0x7f67b9e9caa4 <unknown>\n#24 0x7f67b9f29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 32, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"33265959c4f1b792cd54afaefca81818\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1757365603589,
      "stop" : 1757365612331,
      "duration" : 8742
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1757365603589,
      "stop" : 1757365603589,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1757365912409,
      "stop" : 1757365912492,
      "duration" : 83
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Authorized User Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "authorisation_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestAuthorizedUserPage"
  }, {
    "name" : "host",
    "value" : "pkrvm7jw40e0xgp"
  }, {
    "name" : "thread",
    "value" : "2599-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.authorisation_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 309,
        "unknown" : 0,
        "total" : 315
      },
      "items" : [ {
        "uid" : "6cd9504da3159969",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/678//#testresult/6cd9504da3159969",
        "status" : "passed",
        "time" : {
          "start" : 1757361842825,
          "stop" : 1757361843967,
          "duration" : 1142
        }
      }, {
        "uid" : "79fb9863cf774944",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/677//#testresult/79fb9863cf774944",
        "status" : "passed",
        "time" : {
          "start" : 1757237848164,
          "stop" : 1757237849272,
          "duration" : 1108
        }
      }, {
        "uid" : "e87e811d28d8858f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/676//#testresult/e87e811d28d8858f",
        "status" : "passed",
        "time" : {
          "start" : 1757191085297,
          "stop" : 1757191086521,
          "duration" : 1224
        }
      }, {
        "uid" : "86fc50b2e730d7d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/675//#testresult/86fc50b2e730d7d",
        "status" : "passed",
        "time" : {
          "start" : 1757066279513,
          "stop" : 1757066280573,
          "duration" : 1060
        }
      }, {
        "uid" : "188bab3bf76b529d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/674//#testresult/188bab3bf76b529d",
        "status" : "passed",
        "time" : {
          "start" : 1756808529953,
          "stop" : 1756808531245,
          "duration" : 1292
        }
      }, {
        "uid" : "16c6e4b1dc3f2d38",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/673//#testresult/16c6e4b1dc3f2d38",
        "status" : "passed",
        "time" : {
          "start" : 1756755995006,
          "stop" : 1756755996194,
          "duration" : 1188
        }
      }, {
        "uid" : "8a643cb5adfbaada",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/672//#testresult/8a643cb5adfbaada",
        "status" : "passed",
        "time" : {
          "start" : 1756647468367,
          "stop" : 1756647469525,
          "duration" : 1158
        }
      }, {
        "uid" : "ff125a6246f86fc9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/671//#testresult/ff125a6246f86fc9",
        "status" : "passed",
        "time" : {
          "start" : 1756546652101,
          "stop" : 1756546653301,
          "duration" : 1200
        }
      }, {
        "uid" : "9bbc9ce53c30cd0f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/670//#testresult/9bbc9ce53c30cd0f",
        "status" : "passed",
        "time" : {
          "start" : 1756488770311,
          "stop" : 1756488771486,
          "duration" : 1175
        }
      }, {
        "uid" : "e1cdfd8478ca9854",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/670//#testresult/e1cdfd8478ca9854",
        "status" : "passed",
        "time" : {
          "start" : 1756483454827,
          "stop" : 1756483456280,
          "duration" : 1453
        }
      }, {
        "uid" : "b1dc461bd777e93f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/669//#testresult/b1dc461bd777e93f",
        "status" : "passed",
        "time" : {
          "start" : 1756372095567,
          "stop" : 1756372097437,
          "duration" : 1870
        }
      }, {
        "uid" : "16f18853a83e6ca3",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/668//#testresult/16f18853a83e6ca3",
        "status" : "passed",
        "time" : {
          "start" : 1756295588278,
          "stop" : 1756295589387,
          "duration" : 1109
        }
      }, {
        "uid" : "886530db683241ba",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/667//#testresult/886530db683241ba",
        "status" : "passed",
        "time" : {
          "start" : 1756202213366,
          "stop" : 1756202214620,
          "duration" : 1254
        }
      }, {
        "uid" : "247cb46d909efc87",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/666//#testresult/247cb46d909efc87",
        "status" : "passed",
        "time" : {
          "start" : 1756118223004,
          "stop" : 1756118224197,
          "duration" : 1193
        }
      }, {
        "uid" : "c5e144940ff3b143",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/665//#testresult/c5e144940ff3b143",
        "status" : "passed",
        "time" : {
          "start" : 1756033883614,
          "stop" : 1756033884789,
          "duration" : 1175
        }
      }, {
        "uid" : "7f5fa61cddac1bc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/664//#testresult/7f5fa61cddac1bc",
        "status" : "passed",
        "time" : {
          "start" : 1755945986439,
          "stop" : 1755945987501,
          "duration" : 1062
        }
      }, {
        "uid" : "672a7c15869ba068",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/663//#testresult/672a7c15869ba068",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 299.499\n  (Session info: chrome=139.0.7258.127)\nStacktrace:\n#0 0x55c04fef001a <unknown>\n#1 0x55c04f98fa70 <unknown>\n#2 0x55c04f977d7c <unknown>\n#3 0x55c04f977a85 <unknown>\n#4 0x55c04f9758ee <unknown>\n#5 0x55c04f97623f <unknown>\n#6 0x55c04f984c03 <unknown>\n#7 0x55c04f99dfce <unknown>\n#8 0x55c04f9a47db <unknown>\n#9 0x55c04f976980 <unknown>\n#10 0x55c04f99dd27 <unknown>\n#11 0x55c04fa2d4b3 <unknown>\n#12 0x55c04fa071b3 <unknown>\n#13 0x55c04f9d359b <unknown>\n#14 0x55c04f9d4971 <unknown>\n#15 0x55c04feb51eb <unknown>\n#16 0x55c04feb8f39 <unknown>\n#17 0x55c04fe9c2c9 <unknown>\n#18 0x55c04feb9ae8 <unknown>\n#19 0x55c04fe80baf <unknown>\n#20 0x55c04fedd0a8 <unknown>\n#21 0x55c04fedd286 <unknown>\n#22 0x55c04feeeff6 <unknown>\n#23 0x7f8da509caa4 <unknown>\n#24 0x7f8da5129c3c <unknown>",
        "time" : {
          "start" : 1755852207117,
          "stop" : 1755852207117,
          "duration" : 0
        }
      }, {
        "uid" : "6b751fe4ed0fafdb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/662//#testresult/6b751fe4ed0fafdb",
        "status" : "passed",
        "time" : {
          "start" : 1755771608779,
          "stop" : 1755771610440,
          "duration" : 1661
        }
      }, {
        "uid" : "8a857a5d43c46312",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/661//#testresult/8a857a5d43c46312",
        "status" : "passed",
        "time" : {
          "start" : 1755721667922,
          "stop" : 1755721669270,
          "duration" : 1348
        }
      }, {
        "uid" : "54b71b19ef543671",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/660//#testresult/54b71b19ef543671",
        "status" : "passed",
        "time" : {
          "start" : 1755611949933,
          "stop" : 1755611951028,
          "duration" : 1095
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "94baba55ae419534.json",
  "parameterValues" : [ ]
}
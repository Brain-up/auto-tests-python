{
  "uid" : "384ef48b4cb1c48a",
  "name" : "Verify if links in the section 2 lead to the correct pages after clicking",
  "fullName" : "tests.contacts_page_test.TestContactsPageLinks#test_cp_03_02_verify_links_lead_to_the_correct_pages",
  "historyId" : "97fb5c32cce233ffcb41fecd0d4b116e",
  "time" : {
    "start" : 1728608146261,
    "stop" : 1728608146261,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5646a045402a <unknown>\n#1 0x5646a013a5e0 <unknown>\n#2 0x5646a01327eb <unknown>\n#3 0x5646a0122a09 <unknown>\n#4 0x5646a0124744 <unknown>\n#5 0x5646a0122cbd <unknown>\n#6 0x5646a012252f <unknown>\n#7 0x5646a0122422 <unknown>\n#8 0x5646a0120493 <unknown>\n#9 0x5646a0120ada <unknown>\n#10 0x5646a013cf41 <unknown>\n#11 0x5646a01ce8c5 <unknown>\n#12 0x5646a01aeb22 <unknown>\n#13 0x5646a01cdd7d <unknown>\n#14 0x5646a01ae8c3 <unknown>\n#15 0x5646a017c6b3 <unknown>\n#16 0x5646a017d68e <unknown>\n#17 0x5646a041ea2b <unknown>\n#18 0x5646a04229b1 <unknown>\n#19 0x5646a040b225 <unknown>\n#20 0x5646a0423532 <unknown>\n#21 0x5646a03f038f <unknown>\n#22 0x5646a0442f28 <unknown>\n#23 0x5646a04430f3 <unknown>\n#24 0x5646a0452e7c <unknown>\n#25 0x7f103da94ac3 <unknown>",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"006777c3d9bad2a7d8aa1e5262d5c87b\")>\n\n    @pytest.fixture()\n    @allure.step(f'Open page: {MainPageLinks.URL_MAIN_PAGE}')\n    def main_page_open(driver):\n>       driver.get(MainPageLinks.URL_MAIN_PAGE)\n\ntests/conftest.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb25e3c6cc0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x5646a04430f3 \\\\u003Cunknown>\\\\n#24 0x5646a0452e7c \\\\u003Cunknown>\\\\n#25 0x7f103da94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=129.0.6668.89)\nE       Stacktrace:\nE       #0 0x5646a045402a <unknown>\nE       #1 0x5646a013a5e0 <unknown>\nE       #2 0x5646a01327eb <unknown>\nE       #3 0x5646a0122a09 <unknown>\nE       #4 0x5646a0124744 <unknown>\nE       #5 0x5646a0122cbd <unknown>\nE       #6 0x5646a012252f <unknown>\nE       #7 0x5646a0122422 <unknown>\nE       #8 0x5646a0120493 <unknown>\nE       #9 0x5646a0120ada <unknown>\nE       #10 0x5646a013cf41 <unknown>\nE       #11 0x5646a01ce8c5 <unknown>\nE       #12 0x5646a01aeb22 <unknown>\nE       #13 0x5646a01cdd7d <unknown>\nE       #14 0x5646a01ae8c3 <unknown>\nE       #15 0x5646a017c6b3 <unknown>\nE       #16 0x5646a017d68e <unknown>\nE       #17 0x5646a041ea2b <unknown>\nE       #18 0x5646a04229b1 <unknown>\nE       #19 0x5646a040b225 <unknown>\nE       #20 0x5646a0423532 <unknown>\nE       #21 0x5646a03f038f <unknown>\nE       #22 0x5646a0442f28 <unknown>\nE       #23 0x5646a04430f3 <unknown>\nE       #24 0x5646a0452e7c <unknown>\nE       #25 0x7f103da94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "main_page_open",
    "time" : {
      "start" : 1728608147027,
      "stop" : 1728608147512,
      "duration" : 485
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5646a045402a <unknown>\n#1 0x5646a013a5e0 <unknown>\n#2 0x5646a01327eb <unknown>\n#3 0x5646a0122a09 <unknown>\n#4 0x5646a0124744 <unknown>\n#5 0x5646a0122cbd <unknown>\n#6 0x5646a012252f <unknown>\n#7 0x5646a0122422 <unknown>\n#8 0x5646a0120493 <unknown>\n#9 0x5646a0120ada <unknown>\n#10 0x5646a013cf41 <unknown>\n#11 0x5646a01ce8c5 <unknown>\n#12 0x5646a01aeb22 <unknown>\n#13 0x5646a01cdd7d <unknown>\n#14 0x5646a01ae8c3 <unknown>\n#15 0x5646a017c6b3 <unknown>\n#16 0x5646a017d68e <unknown>\n#17 0x5646a041ea2b <unknown>\n#18 0x5646a04229b1 <unknown>\n#19 0x5646a040b225 <unknown>\n#20 0x5646a0423532 <unknown>\n#21 0x5646a03f038f <unknown>\n#22 0x5646a0442f28 <unknown>\n#23 0x5646a04430f3 <unknown>\n#24 0x5646a0452e7c <unknown>\n#25 0x7f103da94ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 22, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1728608147027,
        "stop" : 1728608147511,
        "duration" : 484
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=129.0.6668.89)\nStacktrace:\n#0 0x5646a045402a <unknown>\n#1 0x5646a013a5e0 <unknown>\n#2 0x5646a01327eb <unknown>\n#3 0x5646a0122a09 <unknown>\n#4 0x5646a0124744 <unknown>\n#5 0x5646a0122cbd <unknown>\n#6 0x5646a012252f <unknown>\n#7 0x5646a0122422 <unknown>\n#8 0x5646a0120493 <unknown>\n#9 0x5646a0120ada <unknown>\n#10 0x5646a013cf41 <unknown>\n#11 0x5646a01ce8c5 <unknown>\n#12 0x5646a01aeb22 <unknown>\n#13 0x5646a01cdd7d <unknown>\n#14 0x5646a01ae8c3 <unknown>\n#15 0x5646a017c6b3 <unknown>\n#16 0x5646a017d68e <unknown>\n#17 0x5646a041ea2b <unknown>\n#18 0x5646a04229b1 <unknown>\n#19 0x5646a040b225 <unknown>\n#20 0x5646a0423532 <unknown>\n#21 0x5646a03f038f <unknown>\n#22 0x5646a0442f28 <unknown>\n#23 0x5646a04430f3 <unknown>\n#24 0x5646a0452e7c <unknown>\n#25 0x7f103da94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/tests/conftest.py\", line 22, in main_page_open\n    driver.get(MainPageLinks.URL_MAIN_PAGE)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 353, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"006777c3d9bad2a7d8aa1e5262d5c87b\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1728608130626,
      "stop" : 1728608130626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1728608146261,
      "stop" : 1728608147027,
      "duration" : 766
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1728608147545,
      "stop" : 1728608147607,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Contacts Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "contacts_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestContactsPage"
  }, {
    "name" : "host",
    "value" : "fv-az523-260"
  }, {
    "name" : "thread",
    "value" : "2358-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.contacts_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 492,
        "unknown" : 0,
        "total" : 497
      },
      "items" : [ {
        "uid" : "d30aef733915f9bc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/322//#testresult/d30aef733915f9bc",
        "status" : "passed",
        "time" : {
          "start" : 1728556778241,
          "stop" : 1728556780157,
          "duration" : 1916
        }
      }, {
        "uid" : "aa3b27fe84f3d4df",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/321//#testresult/aa3b27fe84f3d4df",
        "status" : "passed",
        "time" : {
          "start" : 1728553717164,
          "stop" : 1728553718578,
          "duration" : 1414
        }
      }, {
        "uid" : "c5690cbc5a9ed127",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/148//#testresult/c5690cbc5a9ed127",
        "status" : "passed",
        "time" : {
          "start" : 1728521803610,
          "stop" : 1728521805591,
          "duration" : 1981
        }
      }, {
        "uid" : "89f5b4c0c54e8ac3",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/320//#testresult/89f5b4c0c54e8ac3",
        "status" : "passed",
        "time" : {
          "start" : 1728470292311,
          "stop" : 1728470293514,
          "duration" : 1203
        }
      }, {
        "uid" : "18da30d2b79ff67b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/319//#testresult/18da30d2b79ff67b",
        "status" : "passed",
        "time" : {
          "start" : 1728467697366,
          "stop" : 1728467698776,
          "duration" : 1410
        }
      }, {
        "uid" : "fe008119cd7c3703",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/147//#testresult/fe008119cd7c3703",
        "status" : "passed",
        "time" : {
          "start" : 1728435400608,
          "stop" : 1728435402568,
          "duration" : 1960
        }
      }, {
        "uid" : "f719b6dd8d3aac61",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/318//#testresult/f719b6dd8d3aac61",
        "status" : "passed",
        "time" : {
          "start" : 1728377817424,
          "stop" : 1728377818608,
          "duration" : 1184
        }
      }, {
        "uid" : "167015ea5320629a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/317//#testresult/167015ea5320629a",
        "status" : "passed",
        "time" : {
          "start" : 1728375018218,
          "stop" : 1728375019343,
          "duration" : 1125
        }
      }, {
        "uid" : "8b28165f5eb7ac91",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/316//#testresult/8b28165f5eb7ac91",
        "status" : "passed",
        "time" : {
          "start" : 1728374907586,
          "stop" : 1728374908818,
          "duration" : 1232
        }
      }, {
        "uid" : "daabb74a582d56b8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/146//#testresult/daabb74a582d56b8",
        "status" : "passed",
        "time" : {
          "start" : 1728348996183,
          "stop" : 1728348997453,
          "duration" : 1270
        }
      }, {
        "uid" : "cea50cef0807820",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/315//#testresult/cea50cef0807820",
        "status" : "passed",
        "time" : {
          "start" : 1728292498271,
          "stop" : 1728292499461,
          "duration" : 1190
        }
      }, {
        "uid" : "1a74531ee89fe3cb",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/314//#testresult/1a74531ee89fe3cb",
        "status" : "passed",
        "time" : {
          "start" : 1728289539140,
          "stop" : 1728289540282,
          "duration" : 1142
        }
      }, {
        "uid" : "a5688d60f006f06d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/145//#testresult/a5688d60f006f06d",
        "status" : "passed",
        "time" : {
          "start" : 1728262717944,
          "stop" : 1728262719276,
          "duration" : 1332
        }
      }, {
        "uid" : "8ea960f77d5b2b6c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/313//#testresult/8ea960f77d5b2b6c",
        "status" : "passed",
        "time" : {
          "start" : 1728225793368,
          "stop" : 1728225795296,
          "duration" : 1928
        }
      }, {
        "uid" : "4e94d152fbf6173c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/312//#testresult/4e94d152fbf6173c",
        "status" : "passed",
        "time" : {
          "start" : 1728220959510,
          "stop" : 1728220960770,
          "duration" : 1260
        }
      }, {
        "uid" : "296d01f5551776d8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/144//#testresult/296d01f5551776d8",
        "status" : "passed",
        "time" : {
          "start" : 1728176471168,
          "stop" : 1728176472532,
          "duration" : 1364
        }
      }, {
        "uid" : "c7aade9ce032fc98",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/311//#testresult/c7aade9ce032fc98",
        "status" : "passed",
        "time" : {
          "start" : 1728117143505,
          "stop" : 1728117144868,
          "duration" : 1363
        }
      }, {
        "uid" : "a16c823c4c841846",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/310//#testresult/a16c823c4c841846",
        "status" : "passed",
        "time" : {
          "start" : 1728108556072,
          "stop" : 1728108557259,
          "duration" : 1187
        }
      }, {
        "uid" : "1c887d05ce0b7a5c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/143//#testresult/1c887d05ce0b7a5c",
        "status" : "passed",
        "time" : {
          "start" : 1728089814101,
          "stop" : 1728089815390,
          "duration" : 1289
        }
      }, {
        "uid" : "f6f69c02942c62ce",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/142//#testresult/f6f69c02942c62ce",
        "status" : "passed",
        "time" : {
          "start" : 1728003400684,
          "stop" : 1728003401970,
          "duration" : 1286
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "384ef48b4cb1c48a.json",
  "parameterValues" : [ ]
}
{
  "uid" : "780246b30990b171",
  "name" : "Checking the ip is available",
  "fullName" : "tests.main_page_test.TestMainPage#test_check_ip_available",
  "time" : {
    "start" : 1731719555905,
    "stop" : 1731719555905,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "PermissionError: [Errno 1] Operation not permitted",
  "statusTrace" : "self = <tests.main_page_test.TestMainPage object at 0x7fc774e748f0>\n\n    @allure.title(\"Checking the ip is available\")\n    def test_check_ip_available(self):\n        ip = '188.68.222.249'\n>       result = ping(ip, verbose=False).stats_packets_returned\n\ntests/main_page_test.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pythonping/__init__.py:81: in ping\n    comm = executor.Communicator(target, provider, timeout, interval, socket_options=options, verbose=verbose, output=out,\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pythonping/executor.py:293: in __init__\n    self.socket = network.Socket(target, 'icmp', options=socket_options, source=source)\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/pythonping/network.py:31: in __init__\n    self.socket = socket.socket(socket.AF_INET, socket.SOCK_RAW, self.protocol)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <socket.socket fd=-1, family=0, type=0, proto=0>\nfamily = <AddressFamily.AF_INET: 2>, type = <SocketKind.SOCK_RAW: 3>, proto = 1\nfileno = None\n\n    def __init__(self, family=-1, type=-1, proto=-1, fileno=None):\n        # For user code address family and type values are IntEnum members, but\n        # for the underlying _socket.socket they're just integers. The\n        # constructor of _socket.socket converts the given argument to an\n        # integer automatically.\n        if fileno is None:\n            if family == -1:\n                family = AF_INET\n            if type == -1:\n                type = SOCK_STREAM\n            if proto == -1:\n                proto = 0\n>       _socket.socket.__init__(self, family, type, proto, fileno)\nE       PermissionError: [Errno 1] Operation not permitted\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/socket.py:233: PermissionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1731718710091,
      "stop" : 1731718710091,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "780246b30990b171.json",
  "parameterValues" : [ ]
}
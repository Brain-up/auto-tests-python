{
  "uid" : "12957b947c305ec8",
  "name" : "Verify href, status code of the 'All Team' link",
  "fullName" : "tests.contributors_page_test.TestContributorsPageLinks#test_cnp_03_02_verify_all_team_link",
  "historyId" : "2513d614bdf55f80776a06878d6c6d12",
  "time" : {
    "start" : 1731459805256,
    "stop" : 1731459805275,
    "duration" : 19
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55656b32b13a <unknown>\n#1 0x55656ae46460 <unknown>\n#2 0x55656ae92f96 <unknown>\n#3 0x55656ae93221 <unknown>\n#4 0x55656aed85d4 <unknown>\n#5 0x55656aeb703d <unknown>\n#6 0x55656aed5af6 <unknown>\n#7 0x55656aeb6db3 <unknown>\n#8 0x55656ae85c10 <unknown>\n#9 0x55656ae86bee <unknown>\n#10 0x55656b2f73cb <unknown>\n#11 0x55656b2fb368 <unknown>\n#12 0x55656b2e4eec <unknown>\n#13 0x55656b2fbee7 <unknown>\n#14 0x55656b2ca13f <unknown>\n#15 0x55656b319858 <unknown>\n#16 0x55656b319a20 <unknown>\n#17 0x55656b329fb6 <unknown>\n#18 0x7f5af3294ac3 <unknown>",
  "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7ffbde5fc4d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a4cf62d08fb08aa85a290887a9d671\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:166: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbde0838c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55656b319a20 \\\\u003Cunknown>\\\\n#17 0x55656b329fb6 \\\\u003Cunknown>\\\\n#18 0x7f5af3294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\nE         (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55656b32b13a <unknown>\nE       #1 0x55656ae46460 <unknown>\nE       #2 0x55656ae92f96 <unknown>\nE       #3 0x55656ae93221 <unknown>\nE       #4 0x55656aed85d4 <unknown>\nE       #5 0x55656aeb703d <unknown>\nE       #6 0x55656aed5af6 <unknown>\nE       #7 0x55656aeb6db3 <unknown>\nE       #8 0x55656ae85c10 <unknown>\nE       #9 0x55656ae86bee <unknown>\nE       #10 0x55656b2f73cb <unknown>\nE       #11 0x55656b2fb368 <unknown>\nE       #12 0x55656b2e4eec <unknown>\nE       #13 0x55656b2fbee7 <unknown>\nE       #14 0x55656b2ca13f <unknown>\nE       #15 0x55656b319858 <unknown>\nE       #16 0x55656b319a20 <unknown>\nE       #17 0x55656b329fb6 <unknown>\nE       #18 0x7f5af3294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1731459346241,
      "stop" : 1731459346241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "contributors_page_open",
    "time" : {
      "start" : 1731459804924,
      "stop" : 1731459805255,
      "duration" : 331
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/contributors",
      "time" : {
        "start" : 1731459804925,
        "stop" : 1731459805255,
        "duration" : 330
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a4cf62d08fb08aa85a290887a9d671\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1731459804155,
      "stop" : 1731459804924,
      "duration" : 769
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55656b32b13a <unknown>\n#1 0x55656ae46460 <unknown>\n#2 0x55656ae92f96 <unknown>\n#3 0x55656ae93221 <unknown>\n#4 0x55656aed85d4 <unknown>\n#5 0x55656aeb703d <unknown>\n#6 0x55656aed5af6 <unknown>\n#7 0x55656aeb6db3 <unknown>\n#8 0x55656ae85c10 <unknown>\n#9 0x55656ae86bee <unknown>\n#10 0x55656b2f73cb <unknown>\n#11 0x55656b2fb368 <unknown>\n#12 0x55656b2e4eec <unknown>\n#13 0x55656b2fbee7 <unknown>\n#14 0x55656b2ca13f <unknown>\n#15 0x55656b319858 <unknown>\n#16 0x55656b319a20 <unknown>\n#17 0x55656b329fb6 <unknown>\n#18 0x7f5af3294ac3 <unknown>",
    "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7ffbde5fc4d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e8a4cf62d08fb08aa85a290887a9d671\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:166: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbde0838c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55656b319a20 \\\\u003Cunknown>\\\\n#17 0x55656b329fb6 \\\\u003Cunknown>\\\\n#18 0x7f5af3294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\nE         (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55656b32b13a <unknown>\nE       #1 0x55656ae46460 <unknown>\nE       #2 0x55656ae92f96 <unknown>\nE       #3 0x55656ae93221 <unknown>\nE       #4 0x55656aed85d4 <unknown>\nE       #5 0x55656aeb703d <unknown>\nE       #6 0x55656aed5af6 <unknown>\nE       #7 0x55656aeb6db3 <unknown>\nE       #8 0x55656ae85c10 <unknown>\nE       #9 0x55656ae86bee <unknown>\nE       #10 0x55656b2f73cb <unknown>\nE       #11 0x55656b2fb368 <unknown>\nE       #12 0x55656b2e4eec <unknown>\nE       #13 0x55656b2fbee7 <unknown>\nE       #14 0x55656b2ca13f <unknown>\nE       #15 0x55656b319858 <unknown>\nE       #16 0x55656b319a20 <unknown>\nE       #17 0x55656b329fb6 <unknown>\nE       #18 0x7f5af3294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
    "steps" : [ {
      "name" : "Get attribute 'href' of the 'All Team' link",
      "time" : {
        "start" : 1731459805256,
        "stop" : 1731459805274,
        "duration" : 18
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55656b32b13a <unknown>\n#1 0x55656ae46460 <unknown>\n#2 0x55656ae92f96 <unknown>\n#3 0x55656ae93221 <unknown>\n#4 0x55656aed85d4 <unknown>\n#5 0x55656aeb703d <unknown>\n#6 0x55656aed5af6 <unknown>\n#7 0x55656aeb6db3 <unknown>\n#8 0x55656ae85c10 <unknown>\n#9 0x55656ae86bee <unknown>\n#10 0x55656b2f73cb <unknown>\n#11 0x55656b2fb368 <unknown>\n#12 0x55656b2e4eec <unknown>\n#13 0x55656b2fbee7 <unknown>\n#14 0x55656b2ca13f <unknown>\n#15 0x55656b319858 <unknown>\n#16 0x55656b319a20 <unknown>\n#17 0x55656b329fb6 <unknown>\n#18 0x7f5af3294ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/contributors_page.py\", line 166, in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/base_page.py\", line 90, in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "5bb216bbd9093309",
      "name" : "Screenshot 2024-11-13 01:03:25.407210",
      "source" : "5bb216bbd9093309.png",
      "type" : "image/png",
      "size" : 48845
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1731459805408,
      "stop" : 1731459805470,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Contributors Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "contributors_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestContributorsPage"
  }, {
    "name" : "host",
    "value" : "fv-az1446-12"
  }, {
    "name" : "thread",
    "value" : "2313-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.contributors_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 8,
        "broken" : 13,
        "skipped" : 21,
        "passed" : 545,
        "unknown" : 0,
        "total" : 587
      },
      "items" : [ {
        "uid" : "20414058a2943747",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/383//#testresult/20414058a2943747",
        "status" : "passed",
        "time" : {
          "start" : 1731412653222,
          "stop" : 1731412653963,
          "duration" : 741
        }
      }, {
        "uid" : "1fed64f6524af3d7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/382//#testresult/1fed64f6524af3d7",
        "status" : "passed",
        "time" : {
          "start" : 1731410209557,
          "stop" : 1731410210098,
          "duration" : 541
        }
      }, {
        "uid" : "5563ea0b881c5fc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/381//#testresult/5563ea0b881c5fc",
        "status" : "passed",
        "time" : {
          "start" : 1731408140580,
          "stop" : 1731408141431,
          "duration" : 851
        }
      }, {
        "uid" : "5b451d564d79468c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/181//#testresult/5b451d564d79468c",
        "status" : "passed",
        "time" : {
          "start" : 1731373023301,
          "stop" : 1731373024136,
          "duration" : 835
        }
      }, {
        "uid" : "8f79f5bf7741ba7e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/380//#testresult/8f79f5bf7741ba7e",
        "status" : "passed",
        "time" : {
          "start" : 1731355707178,
          "stop" : 1731355707764,
          "duration" : 586
        }
      }, {
        "uid" : "7d314f33b58ff20",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/379//#testresult/7d314f33b58ff20",
        "status" : "passed",
        "time" : {
          "start" : 1731353629004,
          "stop" : 1731353629755,
          "duration" : 751
        }
      }, {
        "uid" : "6a6b6e3bdc02624e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/180//#testresult/6a6b6e3bdc02624e",
        "status" : "passed",
        "time" : {
          "start" : 1731286748423,
          "stop" : 1731286748999,
          "duration" : 576
        }
      }, {
        "uid" : "fbf655f2ee8c7e43",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/179//#testresult/fbf655f2ee8c7e43",
        "status" : "passed",
        "time" : {
          "start" : 1731200470932,
          "stop" : 1731200471661,
          "duration" : 729
        }
      }, {
        "uid" : "892d0bc2c1ba27ea",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/178//#testresult/892d0bc2c1ba27ea",
        "status" : "passed",
        "time" : {
          "start" : 1731113723829,
          "stop" : 1731113724390,
          "duration" : 561
        }
      }, {
        "uid" : "d8b646af8f86722a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/378//#testresult/d8b646af8f86722a",
        "status" : "passed",
        "time" : {
          "start" : 1731063493756,
          "stop" : 1731063494582,
          "duration" : 826
        }
      }, {
        "uid" : "3b0d8e8bf61199ec",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/377//#testresult/3b0d8e8bf61199ec",
        "status" : "passed",
        "time" : {
          "start" : 1731060100803,
          "stop" : 1731060101479,
          "duration" : 676
        }
      }, {
        "uid" : "490d37567bd82579",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/177//#testresult/490d37567bd82579",
        "status" : "passed",
        "time" : {
          "start" : 1731027433833,
          "stop" : 1731027434569,
          "duration" : 736
        }
      }, {
        "uid" : "99bbd37b76d4259f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/376//#testresult/99bbd37b76d4259f",
        "status" : "passed",
        "time" : {
          "start" : 1730968503532,
          "stop" : 1730968504088,
          "duration" : 556
        }
      }, {
        "uid" : "e0d94785f08d7b09",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/375//#testresult/e0d94785f08d7b09",
        "status" : "passed",
        "time" : {
          "start" : 1730967036319,
          "stop" : 1730967036941,
          "duration" : 622
        }
      }, {
        "uid" : "a230ea0ead616b61",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/176//#testresult/a230ea0ead616b61",
        "status" : "passed",
        "time" : {
          "start" : 1730941164247,
          "stop" : 1730941164815,
          "duration" : 568
        }
      }, {
        "uid" : "825b2c9168b3a409",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/374//#testresult/825b2c9168b3a409",
        "status" : "passed",
        "time" : {
          "start" : 1730889568973,
          "stop" : 1730889569600,
          "duration" : 627
        }
      }, {
        "uid" : "68c68a23cb9b14c6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/373//#testresult/68c68a23cb9b14c6",
        "status" : "passed",
        "time" : {
          "start" : 1730888169275,
          "stop" : 1730888169831,
          "duration" : 556
        }
      }, {
        "uid" : "abf0124a6d40b62d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/175//#testresult/abf0124a6d40b62d",
        "status" : "passed",
        "time" : {
          "start" : 1730854630161,
          "stop" : 1730854630786,
          "duration" : 625
        }
      }, {
        "uid" : "77646d78e3bde538",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/372//#testresult/77646d78e3bde538",
        "status" : "passed",
        "time" : {
          "start" : 1730799603604,
          "stop" : 1730799604145,
          "duration" : 541
        }
      }, {
        "uid" : "d93c67ac3c11d70d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/371//#testresult/d93c67ac3c11d70d",
        "status" : "passed",
        "time" : {
          "start" : 1730797716949,
          "stop" : 1730797717509,
          "duration" : 560
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "12957b947c305ec8.json",
  "parameterValues" : [ ]
}
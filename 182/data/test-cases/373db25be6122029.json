{
  "uid" : "373db25be6122029",
  "name" : "Verify size of the image in the section 1",
  "fullName" : "tests.start_unauthorized_page_test.TestStartUnauthorizedPageImage#test_su_04_02_verify_image_size_in_section1",
  "historyId" : "5d33a9e2e0b8cc173b47693e5dee210b",
  "time" : {
    "start" : 1731462064902,
    "stop" : 1731462064922,
    "duration" : 20
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//section/img\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55c5b3e3613a <unknown>\n#1 0x55c5b3951460 <unknown>\n#2 0x55c5b399df96 <unknown>\n#3 0x55c5b399e221 <unknown>\n#4 0x55c5b39e35d4 <unknown>\n#5 0x55c5b39c203d <unknown>\n#6 0x55c5b39e0af6 <unknown>\n#7 0x55c5b39c1db3 <unknown>\n#8 0x55c5b3990c10 <unknown>\n#9 0x55c5b3991bee <unknown>\n#10 0x55c5b3e023cb <unknown>\n#11 0x55c5b3e06368 <unknown>\n#12 0x55c5b3defeec <unknown>\n#13 0x55c5b3e06ee7 <unknown>\n#14 0x55c5b3dd513f <unknown>\n#15 0x55c5b3e24858 <unknown>\n#16 0x55c5b3e24a20 <unknown>\n#17 0x55c5b3e34fb6 <unknown>\n#18 0x7f4dcda94ac3 <unknown>",
  "statusTrace" : "self = <tests.start_unauthorized_page_test.TestStartUnauthorizedPage.TestStartUnauthorizedPageImage object at 0x7ffbddff95b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"96648ef3c297dd5c209859f575b3e0b4\")>\nmain_page_open = None\n\n    @allure.title(\"Verify size of the image in the section 1\")\n    def test_su_04_02_verify_image_size_in_section1(self, driver, main_page_open):\n        page = StartUnauthorizedPage(driver)\n>       image_size = page.get_size_of_image()\n\ntests/start_unauthorized_page_test.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/start_unauthorized_page.py:177: in get_size_of_image\n    return self.get_image_size(self.locators.SECTION_1_IMAGE)\npages/base_page.py:102: in get_image_size\n    return self.driver.find_element(*locator).size\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbddd74470>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55c5b3e24a20 \\\\u003Cunknown>\\\\n#17 0x55c5b3e34fb6 \\\\u003Cunknown>\\\\n#18 0x7f4dcda94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//section/img\"}\nE         (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55c5b3e3613a <unknown>\nE       #1 0x55c5b3951460 <unknown>\nE       #2 0x55c5b399df96 <unknown>\nE       #3 0x55c5b399e221 <unknown>\nE       #4 0x55c5b39e35d4 <unknown>\nE       #5 0x55c5b39c203d <unknown>\nE       #6 0x55c5b39e0af6 <unknown>\nE       #7 0x55c5b39c1db3 <unknown>\nE       #8 0x55c5b3990c10 <unknown>\nE       #9 0x55c5b3991bee <unknown>\nE       #10 0x55c5b3e023cb <unknown>\nE       #11 0x55c5b3e06368 <unknown>\nE       #12 0x55c5b3defeec <unknown>\nE       #13 0x55c5b3e06ee7 <unknown>\nE       #14 0x55c5b3dd513f <unknown>\nE       #15 0x55c5b3e24858 <unknown>\nE       #16 0x55c5b3e24a20 <unknown>\nE       #17 0x55c5b3e34fb6 <unknown>\nE       #18 0x7f4dcda94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1731459346241,
      "stop" : 1731459346241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1731462064503,
      "stop" : 1731462064902,
      "duration" : 399
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1731462064504,
        "stop" : 1731462064902,
        "duration" : 398
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"96648ef3c297dd5c209859f575b3e0b4\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1731462063734,
      "stop" : 1731462064503,
      "duration" : 769
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//section/img\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55c5b3e3613a <unknown>\n#1 0x55c5b3951460 <unknown>\n#2 0x55c5b399df96 <unknown>\n#3 0x55c5b399e221 <unknown>\n#4 0x55c5b39e35d4 <unknown>\n#5 0x55c5b39c203d <unknown>\n#6 0x55c5b39e0af6 <unknown>\n#7 0x55c5b39c1db3 <unknown>\n#8 0x55c5b3990c10 <unknown>\n#9 0x55c5b3991bee <unknown>\n#10 0x55c5b3e023cb <unknown>\n#11 0x55c5b3e06368 <unknown>\n#12 0x55c5b3defeec <unknown>\n#13 0x55c5b3e06ee7 <unknown>\n#14 0x55c5b3dd513f <unknown>\n#15 0x55c5b3e24858 <unknown>\n#16 0x55c5b3e24a20 <unknown>\n#17 0x55c5b3e34fb6 <unknown>\n#18 0x7f4dcda94ac3 <unknown>",
    "statusTrace" : "self = <tests.start_unauthorized_page_test.TestStartUnauthorizedPage.TestStartUnauthorizedPageImage object at 0x7ffbddff95b0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"96648ef3c297dd5c209859f575b3e0b4\")>\nmain_page_open = None\n\n    @allure.title(\"Verify size of the image in the section 1\")\n    def test_su_04_02_verify_image_size_in_section1(self, driver, main_page_open):\n        page = StartUnauthorizedPage(driver)\n>       image_size = page.get_size_of_image()\n\ntests/start_unauthorized_page_test.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/start_unauthorized_page.py:177: in get_size_of_image\n    return self.get_image_size(self.locators.SECTION_1_IMAGE)\npages/base_page.py:102: in get_image_size\n    return self.driver.find_element(*locator).size\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbddd74470>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55c5b3e24a20 \\\\u003Cunknown>\\\\n#17 0x55c5b3e34fb6 \\\\u003Cunknown>\\\\n#18 0x7f4dcda94ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//section/img\"}\nE         (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55c5b3e3613a <unknown>\nE       #1 0x55c5b3951460 <unknown>\nE       #2 0x55c5b399df96 <unknown>\nE       #3 0x55c5b399e221 <unknown>\nE       #4 0x55c5b39e35d4 <unknown>\nE       #5 0x55c5b39c203d <unknown>\nE       #6 0x55c5b39e0af6 <unknown>\nE       #7 0x55c5b39c1db3 <unknown>\nE       #8 0x55c5b3990c10 <unknown>\nE       #9 0x55c5b3991bee <unknown>\nE       #10 0x55c5b3e023cb <unknown>\nE       #11 0x55c5b3e06368 <unknown>\nE       #12 0x55c5b3defeec <unknown>\nE       #13 0x55c5b3e06ee7 <unknown>\nE       #14 0x55c5b3dd513f <unknown>\nE       #15 0x55c5b3e24858 <unknown>\nE       #16 0x55c5b3e24a20 <unknown>\nE       #17 0x55c5b3e34fb6 <unknown>\nE       #18 0x7f4dcda94ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
    "steps" : [ {
      "name" : "Get size values of the image",
      "time" : {
        "start" : 1731462064902,
        "stop" : 1731462064921,
        "duration" : 19
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//section/img\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55c5b3e3613a <unknown>\n#1 0x55c5b3951460 <unknown>\n#2 0x55c5b399df96 <unknown>\n#3 0x55c5b399e221 <unknown>\n#4 0x55c5b39e35d4 <unknown>\n#5 0x55c5b39c203d <unknown>\n#6 0x55c5b39e0af6 <unknown>\n#7 0x55c5b39c1db3 <unknown>\n#8 0x55c5b3990c10 <unknown>\n#9 0x55c5b3991bee <unknown>\n#10 0x55c5b3e023cb <unknown>\n#11 0x55c5b3e06368 <unknown>\n#12 0x55c5b3defeec <unknown>\n#13 0x55c5b3e06ee7 <unknown>\n#14 0x55c5b3dd513f <unknown>\n#15 0x55c5b3e24858 <unknown>\n#16 0x55c5b3e24a20 <unknown>\n#17 0x55c5b3e34fb6 <unknown>\n#18 0x7f4dcda94ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/start_unauthorized_page.py\", line 177, in get_size_of_image\n    return self.get_image_size(self.locators.SECTION_1_IMAGE)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/base_page.py\", line 102, in get_image_size\n    return self.driver.find_element(*locator).size\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "95f0b1948390fcd1",
      "name" : "Screenshot 2024-11-13 01:41:05.069358",
      "source" : "95f0b1948390fcd1.png",
      "type" : "image/png",
      "size" : 48845
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1731462065070,
      "stop" : 1731462065133,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Start Unauthorized Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "start_unauthorized_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestStartUnauthorizedPage"
  }, {
    "name" : "host",
    "value" : "fv-az1446-12"
  }, {
    "name" : "thread",
    "value" : "2313-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.start_unauthorized_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 476,
        "unknown" : 0,
        "total" : 483
      },
      "items" : [ {
        "uid" : "457117896391ab38",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/383//#testresult/457117896391ab38",
        "status" : "passed",
        "time" : {
          "start" : 1731413498121,
          "stop" : 1731413498185,
          "duration" : 64
        }
      }, {
        "uid" : "966836292da5379b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/382//#testresult/966836292da5379b",
        "status" : "passed",
        "time" : {
          "start" : 1731411050706,
          "stop" : 1731411050784,
          "duration" : 78
        }
      }, {
        "uid" : "6089cfec91487c92",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/381//#testresult/6089cfec91487c92",
        "status" : "passed",
        "time" : {
          "start" : 1731409179685,
          "stop" : 1731409179757,
          "duration" : 72
        }
      }, {
        "uid" : "c572827b81e114a6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/181//#testresult/c572827b81e114a6",
        "status" : "passed",
        "time" : {
          "start" : 1731374000359,
          "stop" : 1731374000419,
          "duration" : 60
        }
      }, {
        "uid" : "5980286db1473437",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/380//#testresult/5980286db1473437",
        "status" : "passed",
        "time" : {
          "start" : 1731356539345,
          "stop" : 1731356539404,
          "duration" : 59
        }
      }, {
        "uid" : "a5a8b860b26b3820",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/379//#testresult/a5a8b860b26b3820",
        "status" : "passed",
        "time" : {
          "start" : 1731354451935,
          "stop" : 1731354452019,
          "duration" : 84
        }
      }, {
        "uid" : "b6840328eaf7298c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/180//#testresult/b6840328eaf7298c",
        "status" : "passed",
        "time" : {
          "start" : 1731287446856,
          "stop" : 1731287446916,
          "duration" : 60
        }
      }, {
        "uid" : "6fdc3dab3512ff15",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/179//#testresult/6fdc3dab3512ff15",
        "status" : "passed",
        "time" : {
          "start" : 1731201340686,
          "stop" : 1731201340745,
          "duration" : 59
        }
      }, {
        "uid" : "94e42d29eb652dfc",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/178//#testresult/94e42d29eb652dfc",
        "status" : "passed",
        "time" : {
          "start" : 1731114468058,
          "stop" : 1731114468132,
          "duration" : 74
        }
      }, {
        "uid" : "ad97b60fa4020690",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/378//#testresult/ad97b60fa4020690",
        "status" : "passed",
        "time" : {
          "start" : 1731064360858,
          "stop" : 1731064360916,
          "duration" : 58
        }
      }, {
        "uid" : "ae1fa2a959fc9e36",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/377//#testresult/ae1fa2a959fc9e36",
        "status" : "passed",
        "time" : {
          "start" : 1731060813009,
          "stop" : 1731060813071,
          "duration" : 62
        }
      }, {
        "uid" : "345d861dd4b5f010",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/177//#testresult/345d861dd4b5f010",
        "status" : "passed",
        "time" : {
          "start" : 1731028302472,
          "stop" : 1731028302533,
          "duration" : 61
        }
      }, {
        "uid" : "f407a32a70dea8cf",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/376//#testresult/f407a32a70dea8cf",
        "status" : "passed",
        "time" : {
          "start" : 1730969183417,
          "stop" : 1730969183478,
          "duration" : 61
        }
      }, {
        "uid" : "da494943a504630d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/375//#testresult/da494943a504630d",
        "status" : "passed",
        "time" : {
          "start" : 1730967757940,
          "stop" : 1730967758013,
          "duration" : 73
        }
      }, {
        "uid" : "dd0cf49c18462d59",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/176//#testresult/dd0cf49c18462d59",
        "status" : "passed",
        "time" : {
          "start" : 1730941904533,
          "stop" : 1730941904597,
          "duration" : 64
        }
      }, {
        "uid" : "96c8410ff9ecab0d",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/374//#testresult/96c8410ff9ecab0d",
        "status" : "passed",
        "time" : {
          "start" : 1730890295132,
          "stop" : 1730890295214,
          "duration" : 82
        }
      }, {
        "uid" : "2e5144c1c85fd457",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/373//#testresult/2e5144c1c85fd457",
        "status" : "passed",
        "time" : {
          "start" : 1730888852988,
          "stop" : 1730888853052,
          "duration" : 64
        }
      }, {
        "uid" : "6bee778dbe636e5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/175//#testresult/6bee778dbe636e5",
        "status" : "passed",
        "time" : {
          "start" : 1730855349905,
          "stop" : 1730855349977,
          "duration" : 72
        }
      }, {
        "uid" : "7bfe3b949807bb9e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/372//#testresult/7bfe3b949807bb9e",
        "status" : "passed",
        "time" : {
          "start" : 1730800266240,
          "stop" : 1730800266300,
          "duration" : 60
        }
      }, {
        "uid" : "2936a5cee210e40a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/371//#testresult/2936a5cee210e40a",
        "status" : "passed",
        "time" : {
          "start" : 1730798391516,
          "stop" : 1730798391576,
          "duration" : 60
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "373db25be6122029.json",
  "parameterValues" : [ ]
}
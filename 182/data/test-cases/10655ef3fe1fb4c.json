{
  "uid" : "10655ef3fe1fb4c",
  "name" : "Verify size of the image in the 'Logo' link in the Header on the Start Unauthorized Page",
  "fullName" : "tests.header_test.TestUnauthHeaderPageImages#test_hpu_04_02_verify_unauth_logo_image_size",
  "historyId" : "d0f5507086fdaeef5a8788727e5ebe4a",
  "time" : {
    "start" : 1731460759820,
    "stop" : 1731460759838,
    "duration" : 18
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//nav//*[name()='svg']\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55ce87f5413a <unknown>\n#1 0x55ce87a6f460 <unknown>\n#2 0x55ce87abbf96 <unknown>\n#3 0x55ce87abc221 <unknown>\n#4 0x55ce87b015d4 <unknown>\n#5 0x55ce87ae003d <unknown>\n#6 0x55ce87afeaf6 <unknown>\n#7 0x55ce87adfdb3 <unknown>\n#8 0x55ce87aaec10 <unknown>\n#9 0x55ce87aafbee <unknown>\n#10 0x55ce87f203cb <unknown>\n#11 0x55ce87f24368 <unknown>\n#12 0x55ce87f0deec <unknown>\n#13 0x55ce87f24ee7 <unknown>\n#14 0x55ce87ef313f <unknown>\n#15 0x55ce87f42858 <unknown>\n#16 0x55ce87f42a20 <unknown>\n#17 0x55ce87f52fb6 <unknown>\n#18 0x7f1030694ac3 <unknown>",
  "statusTrace" : "self = <tests.header_test.TestHeaderPage.TestUnauthorizedHeaderPage.TestUnauthHeaderPageImages object at 0x7ffbde26ad50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"57a55824cd8b383e806a21b8d92c4e9e\")>\nmain_page_open = None\n\n    @allure.title(\"Verify size of the image in the 'Logo' link in the Header on the Start Unauthorized Page\")\n    def test_hpu_04_02_verify_unauth_logo_image_size(self, driver, main_page_open):\n        page = HeaderPage(driver)\n>       image_size = page.get_size_of_unauth_logo_image()\n\ntests/header_test.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_page.py:473: in get_size_of_unauth_logo_image\n    return self.get_image_size(self.locators.LOGO_IMAGE_UNAUTH)\npages/base_page.py:102: in get_image_size\n    return self.driver.find_element(*locator).size\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbddf636b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55ce87f42a20 \\\\u003Cunknown>\\\\n#17 0x55ce87f52fb6 \\\\u003Cunknown>\\\\n#18 0x7f1030694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//nav//*[name()='svg']\"}\nE         (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ce87f5413a <unknown>\nE       #1 0x55ce87a6f460 <unknown>\nE       #2 0x55ce87abbf96 <unknown>\nE       #3 0x55ce87abc221 <unknown>\nE       #4 0x55ce87b015d4 <unknown>\nE       #5 0x55ce87ae003d <unknown>\nE       #6 0x55ce87afeaf6 <unknown>\nE       #7 0x55ce87adfdb3 <unknown>\nE       #8 0x55ce87aaec10 <unknown>\nE       #9 0x55ce87aafbee <unknown>\nE       #10 0x55ce87f203cb <unknown>\nE       #11 0x55ce87f24368 <unknown>\nE       #12 0x55ce87f0deec <unknown>\nE       #13 0x55ce87f24ee7 <unknown>\nE       #14 0x55ce87ef313f <unknown>\nE       #15 0x55ce87f42858 <unknown>\nE       #16 0x55ce87f42a20 <unknown>\nE       #17 0x55ce87f52fb6 <unknown>\nE       #18 0x7f1030694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1731459346241,
      "stop" : 1731459346241,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1731460758719,
      "stop" : 1731460759486,
      "duration" : 767
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "main_page_open",
    "time" : {
      "start" : 1731460759486,
      "stop" : 1731460759819,
      "duration" : 333
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://brainup.site/",
      "time" : {
        "start" : 1731460759486,
        "stop" : 1731460759819,
        "duration" : 333
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"57a55824cd8b383e806a21b8d92c4e9e\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//nav//*[name()='svg']\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55ce87f5413a <unknown>\n#1 0x55ce87a6f460 <unknown>\n#2 0x55ce87abbf96 <unknown>\n#3 0x55ce87abc221 <unknown>\n#4 0x55ce87b015d4 <unknown>\n#5 0x55ce87ae003d <unknown>\n#6 0x55ce87afeaf6 <unknown>\n#7 0x55ce87adfdb3 <unknown>\n#8 0x55ce87aaec10 <unknown>\n#9 0x55ce87aafbee <unknown>\n#10 0x55ce87f203cb <unknown>\n#11 0x55ce87f24368 <unknown>\n#12 0x55ce87f0deec <unknown>\n#13 0x55ce87f24ee7 <unknown>\n#14 0x55ce87ef313f <unknown>\n#15 0x55ce87f42858 <unknown>\n#16 0x55ce87f42a20 <unknown>\n#17 0x55ce87f52fb6 <unknown>\n#18 0x7f1030694ac3 <unknown>",
    "statusTrace" : "self = <tests.header_test.TestHeaderPage.TestUnauthorizedHeaderPage.TestUnauthHeaderPageImages object at 0x7ffbde26ad50>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"57a55824cd8b383e806a21b8d92c4e9e\")>\nmain_page_open = None\n\n    @allure.title(\"Verify size of the image in the 'Logo' link in the Header on the Start Unauthorized Page\")\n    def test_hpu_04_02_verify_unauth_logo_image_size(self, driver, main_page_open):\n        page = HeaderPage(driver)\n>       image_size = page.get_size_of_unauth_logo_image()\n\ntests/header_test.py:189: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_page.py:473: in get_size_of_unauth_logo_image\n    return self.get_image_size(self.locators.LOGO_IMAGE_UNAUTH)\npages/base_page.py:102: in get_image_size\n    return self.driver.find_element(*locator).size\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffbddf636b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55ce87f42a20 \\\\u003Cunknown>\\\\n#17 0x55ce87f52fb6 \\\\u003Cunknown>\\\\n#18 0x7f1030694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//nav//*[name()='svg']\"}\nE         (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55ce87f5413a <unknown>\nE       #1 0x55ce87a6f460 <unknown>\nE       #2 0x55ce87abbf96 <unknown>\nE       #3 0x55ce87abc221 <unknown>\nE       #4 0x55ce87b015d4 <unknown>\nE       #5 0x55ce87ae003d <unknown>\nE       #6 0x55ce87afeaf6 <unknown>\nE       #7 0x55ce87adfdb3 <unknown>\nE       #8 0x55ce87aaec10 <unknown>\nE       #9 0x55ce87aafbee <unknown>\nE       #10 0x55ce87f203cb <unknown>\nE       #11 0x55ce87f24368 <unknown>\nE       #12 0x55ce87f0deec <unknown>\nE       #13 0x55ce87f24ee7 <unknown>\nE       #14 0x55ce87ef313f <unknown>\nE       #15 0x55ce87f42858 <unknown>\nE       #16 0x55ce87f42a20 <unknown>\nE       #17 0x55ce87f52fb6 <unknown>\nE       #18 0x7f1030694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
    "steps" : [ {
      "name" : "Get size of the 'Logo' image in the Header for an unauthorized user",
      "time" : {
        "start" : 1731460759820,
        "stop" : 1731460759838,
        "duration" : 18
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//nav//*[name()='svg']\"}\n  (Session info: chrome=130.0.6723.91); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55ce87f5413a <unknown>\n#1 0x55ce87a6f460 <unknown>\n#2 0x55ce87abbf96 <unknown>\n#3 0x55ce87abc221 <unknown>\n#4 0x55ce87b015d4 <unknown>\n#5 0x55ce87ae003d <unknown>\n#6 0x55ce87afeaf6 <unknown>\n#7 0x55ce87adfdb3 <unknown>\n#8 0x55ce87aaec10 <unknown>\n#9 0x55ce87aafbee <unknown>\n#10 0x55ce87f203cb <unknown>\n#11 0x55ce87f24368 <unknown>\n#12 0x55ce87f0deec <unknown>\n#13 0x55ce87f24ee7 <unknown>\n#14 0x55ce87ef313f <unknown>\n#15 0x55ce87f42858 <unknown>\n#16 0x55ce87f42a20 <unknown>\n#17 0x55ce87f52fb6 <unknown>\n#18 0x7f1030694ac3 <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/header_page.py\", line 473, in get_size_of_unauth_logo_image\n    return self.get_image_size(self.locators.LOGO_IMAGE_UNAUTH)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/base_page.py\", line 102, in get_image_size\n    return self.driver.find_element(*locator).size\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.7/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "5f6c1031c2fa79be",
      "name" : "Screenshot 2024-11-13 01:19:19.983449",
      "source" : "5f6c1031c2fa79be.png",
      "type" : "image/png",
      "size" : 48845
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1731460759985,
      "stop" : 1731460760047,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Test Header"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "header_test"
  }, {
    "name" : "subSuite",
    "value" : "TestHeaderPage"
  }, {
    "name" : "host",
    "value" : "fv-az1446-12"
  }, {
    "name" : "thread",
    "value" : "2313-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.header_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 130,
        "unknown" : 0,
        "total" : 134
      },
      "items" : [ {
        "uid" : "6d4d773d409060e9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/383//#testresult/6d4d773d409060e9",
        "status" : "passed",
        "time" : {
          "start" : 1731413053204,
          "stop" : 1731413053277,
          "duration" : 73
        }
      }, {
        "uid" : "865b3fb1f9588b6e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/382//#testresult/865b3fb1f9588b6e",
        "status" : "passed",
        "time" : {
          "start" : 1731410610804,
          "stop" : 1731410610857,
          "duration" : 53
        }
      }, {
        "uid" : "e162492c5feccd9b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/381//#testresult/e162492c5feccd9b",
        "status" : "passed",
        "time" : {
          "start" : 1731408607441,
          "stop" : 1731408607491,
          "duration" : 50
        }
      }, {
        "uid" : "fdc4d2cd2af37b57",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/181//#testresult/fdc4d2cd2af37b57",
        "status" : "passed",
        "time" : {
          "start" : 1731373460622,
          "stop" : 1731373460672,
          "duration" : 50
        }
      }, {
        "uid" : "89dad8dd76a129c5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/380//#testresult/89dad8dd76a129c5",
        "status" : "passed",
        "time" : {
          "start" : 1731356091624,
          "stop" : 1731356091679,
          "duration" : 55
        }
      }, {
        "uid" : "98cb5921e90e3328",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/379//#testresult/98cb5921e90e3328",
        "status" : "passed",
        "time" : {
          "start" : 1731354004517,
          "stop" : 1731354004569,
          "duration" : 52
        }
      }, {
        "uid" : "6769b089eecb1c38",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/180//#testresult/6769b089eecb1c38",
        "status" : "passed",
        "time" : {
          "start" : 1731287072054,
          "stop" : 1731287072118,
          "duration" : 64
        }
      }, {
        "uid" : "83b715c12c022eb7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/179//#testresult/83b715c12c022eb7",
        "status" : "passed",
        "time" : {
          "start" : 1731200859267,
          "stop" : 1731200859318,
          "duration" : 51
        }
      }, {
        "uid" : "d4bf5baf7df47ba2",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/178//#testresult/d4bf5baf7df47ba2",
        "status" : "passed",
        "time" : {
          "start" : 1731114083219,
          "stop" : 1731114083271,
          "duration" : 52
        }
      }, {
        "uid" : "55694469239925f",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/378//#testresult/55694469239925f",
        "status" : "passed",
        "time" : {
          "start" : 1731063885739,
          "stop" : 1731063885792,
          "duration" : 53
        }
      }, {
        "uid" : "f92a6315685ead29",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/377//#testresult/f92a6315685ead29",
        "status" : "passed",
        "time" : {
          "start" : 1731060427678,
          "stop" : 1731060427745,
          "duration" : 67
        }
      }, {
        "uid" : "1072d21cdda98759",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/177//#testresult/1072d21cdda98759",
        "status" : "passed",
        "time" : {
          "start" : 1731027841964,
          "stop" : 1731027842020,
          "duration" : 56
        }
      }, {
        "uid" : "bc82edc6b38c2e85",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/376//#testresult/bc82edc6b38c2e85",
        "status" : "passed",
        "time" : {
          "start" : 1730968809330,
          "stop" : 1730968809383,
          "duration" : 53
        }
      }, {
        "uid" : "a6b47813cc02c3d3",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/375//#testresult/a6b47813cc02c3d3",
        "status" : "passed",
        "time" : {
          "start" : 1730967365011,
          "stop" : 1730967365065,
          "duration" : 54
        }
      }, {
        "uid" : "20869bf46211c0c1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/176//#testresult/20869bf46211c0c1",
        "status" : "passed",
        "time" : {
          "start" : 1730941520077,
          "stop" : 1730941520145,
          "duration" : 68
        }
      }, {
        "uid" : "e0d74ff18cdd6017",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/374//#testresult/e0d74ff18cdd6017",
        "status" : "passed",
        "time" : {
          "start" : 1730889899923,
          "stop" : 1730889899985,
          "duration" : 62
        }
      }, {
        "uid" : "e368b19e1c803e82",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/373//#testresult/e368b19e1c803e82",
        "status" : "passed",
        "time" : {
          "start" : 1730888478980,
          "stop" : 1730888479033,
          "duration" : 53
        }
      }, {
        "uid" : "5b78bfcb911778c",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/175//#testresult/5b78bfcb911778c",
        "status" : "passed",
        "time" : {
          "start" : 1730854957029,
          "stop" : 1730854957093,
          "duration" : 64
        }
      }, {
        "uid" : "9074c7cdc5a8fe03",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/372//#testresult/9074c7cdc5a8fe03",
        "status" : "passed",
        "time" : {
          "start" : 1730799900008,
          "stop" : 1730799900063,
          "duration" : 55
        }
      }, {
        "uid" : "fe44307a364ad7a7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/371//#testresult/fe44307a364ad7a7",
        "status" : "passed",
        "time" : {
          "start" : 1730798017261,
          "stop" : 1730798017312,
          "duration" : 51
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "10655ef3fe1fb4c.json",
  "parameterValues" : [ ]
}
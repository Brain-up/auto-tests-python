{
  "uid" : "291acfed8cbcc3a0",
  "name" : "Verify href, status code of the 'All Team' link",
  "fullName" : "tests.contributors_page_test.TestContributorsPageLinks#test_cnp_03_02_verify_all_team_link",
  "historyId" : "2513d614bdf55f80776a06878d6c6d12",
  "time" : {
    "start" : 1736989000854,
    "stop" : 1736989000871,
    "duration" : 17
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55eec65738fa <unknown>\n#1 0x55eec6084d20 <unknown>\n#2 0x55eec60d3a66 <unknown>\n#3 0x55eec60d3d01 <unknown>\n#4 0x55eec6119184 <unknown>\n#5 0x55eec60f7b1d <unknown>\n#6 0x55eec6116560 <unknown>\n#7 0x55eec60f7893 <unknown>\n#8 0x55eec60c630d <unknown>\n#9 0x55eec60c732e <unknown>\n#10 0x55eec654000b <unknown>\n#11 0x55eec6543f97 <unknown>\n#12 0x55eec652c71c <unknown>\n#13 0x55eec6544b17 <unknown>\n#14 0x55eec65116cf <unknown>\n#15 0x55eec65626b8 <unknown>\n#16 0x55eec6562880 <unknown>\n#17 0x55eec6572776 <unknown>\n#18 0x7fc321c9ca94 <unknown>\n#19 0x7fc321d29c3c <unknown>",
  "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7f07339442f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9e380ab8fbd9b16d167bd8f369376a88\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:164: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0733777140>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55eec6572776 \\\\u003Cunknown>\\\\n#18 0x7fc321c9ca94 \\\\u003Cunknown>\\\\n#19 0x7fc321d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55eec65738fa <unknown>\nE       #1 0x55eec6084d20 <unknown>\nE       #2 0x55eec60d3a66 <unknown>\nE       #3 0x55eec60d3d01 <unknown>\nE       #4 0x55eec6119184 <unknown>\nE       #5 0x55eec60f7b1d <unknown>\nE       #6 0x55eec6116560 <unknown>\nE       #7 0x55eec60f7893 <unknown>\nE       #8 0x55eec60c630d <unknown>\nE       #9 0x55eec60c732e <unknown>\nE       #10 0x55eec654000b <unknown>\nE       #11 0x55eec6543f97 <unknown>\nE       #12 0x55eec652c71c <unknown>\nE       #13 0x55eec6544b17 <unknown>\nE       #14 0x55eec65116cf <unknown>\nE       #15 0x55eec65626b8 <unknown>\nE       #16 0x55eec6562880 <unknown>\nE       #17 0x55eec6572776 <unknown>\nE       #18 0x7fc321c9ca94 <unknown>\nE       #19 0x7fc321d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "contributors_page_open",
    "time" : {
      "start" : 1736988998094,
      "stop" : 1736989000854,
      "duration" : 2760
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/contributors",
      "time" : {
        "start" : 1736988998095,
        "stop" : 1736989000854,
        "duration" : 2759
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"9e380ab8fbd9b16d167bd8f369376a88\")>"
      } ],
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 0
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1736988997339,
      "stop" : 1736988998094,
      "duration" : 755
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1736988890246,
      "stop" : 1736988890246,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55eec65738fa <unknown>\n#1 0x55eec6084d20 <unknown>\n#2 0x55eec60d3a66 <unknown>\n#3 0x55eec60d3d01 <unknown>\n#4 0x55eec6119184 <unknown>\n#5 0x55eec60f7b1d <unknown>\n#6 0x55eec6116560 <unknown>\n#7 0x55eec60f7893 <unknown>\n#8 0x55eec60c630d <unknown>\n#9 0x55eec60c732e <unknown>\n#10 0x55eec654000b <unknown>\n#11 0x55eec6543f97 <unknown>\n#12 0x55eec652c71c <unknown>\n#13 0x55eec6544b17 <unknown>\n#14 0x55eec65116cf <unknown>\n#15 0x55eec65626b8 <unknown>\n#16 0x55eec6562880 <unknown>\n#17 0x55eec6572776 <unknown>\n#18 0x7fc321c9ca94 <unknown>\n#19 0x7fc321d29c3c <unknown>",
    "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7f07339442f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9e380ab8fbd9b16d167bd8f369376a88\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:164: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0733777140>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55eec6572776 \\\\u003Cunknown>\\\\n#18 0x7fc321c9ca94 \\\\u003Cunknown>\\\\n#19 0x7fc321d29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\nE         (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55eec65738fa <unknown>\nE       #1 0x55eec6084d20 <unknown>\nE       #2 0x55eec60d3a66 <unknown>\nE       #3 0x55eec60d3d01 <unknown>\nE       #4 0x55eec6119184 <unknown>\nE       #5 0x55eec60f7b1d <unknown>\nE       #6 0x55eec6116560 <unknown>\nE       #7 0x55eec60f7893 <unknown>\nE       #8 0x55eec60c630d <unknown>\nE       #9 0x55eec60c732e <unknown>\nE       #10 0x55eec654000b <unknown>\nE       #11 0x55eec6543f97 <unknown>\nE       #12 0x55eec652c71c <unknown>\nE       #13 0x55eec6544b17 <unknown>\nE       #14 0x55eec65116cf <unknown>\nE       #15 0x55eec65626b8 <unknown>\nE       #16 0x55eec6562880 <unknown>\nE       #17 0x55eec6572776 <unknown>\nE       #18 0x7fc321c9ca94 <unknown>\nE       #19 0x7fc321d29c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
    "steps" : [ {
      "name" : "Get attribute 'href' of the 'All Team' link",
      "time" : {
        "start" : 1736989000854,
        "stop" : 1736989000870,
        "duration" : 16
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=131.0.6778.204); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55eec65738fa <unknown>\n#1 0x55eec6084d20 <unknown>\n#2 0x55eec60d3a66 <unknown>\n#3 0x55eec60d3d01 <unknown>\n#4 0x55eec6119184 <unknown>\n#5 0x55eec60f7b1d <unknown>\n#6 0x55eec6116560 <unknown>\n#7 0x55eec60f7893 <unknown>\n#8 0x55eec60c630d <unknown>\n#9 0x55eec60c732e <unknown>\n#10 0x55eec654000b <unknown>\n#11 0x55eec6543f97 <unknown>\n#12 0x55eec652c71c <unknown>\n#13 0x55eec6544b17 <unknown>\n#14 0x55eec65116cf <unknown>\n#15 0x55eec65626b8 <unknown>\n#16 0x55eec6562880 <unknown>\n#17 0x55eec6572776 <unknown>\n#18 0x7fc321c9ca94 <unknown>\n#19 0x7fc321d29c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/contributors_page.py\", line 164, in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/base_page.py\", line 90, in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.8/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "e9b19ac1dbe1cd3a",
      "name" : "Screenshot 2025-01-16 00:56:41.030589",
      "source" : "e9b19ac1dbe1cd3a.png",
      "type" : "image/png",
      "size" : 7498
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1736989001031,
      "stop" : 1736989001096,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Contributors Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "contributors_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestContributorsPage"
  }, {
    "name" : "host",
    "value" : "fv-az1933-990"
  }, {
    "name" : "thread",
    "value" : "2397-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.contributors_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 123,
        "unknown" : 0,
        "total" : 126
      },
      "items" : [ {
        "uid" : "998a240857d00fa",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/245//#testresult/998a240857d00fa",
        "status" : "passed",
        "time" : {
          "start" : 1736902663201,
          "stop" : 1736902663924,
          "duration" : 723
        }
      }, {
        "uid" : "f25b5f1bb2fbd1ff",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/449//#testresult/f25b5f1bb2fbd1ff",
        "status" : "passed",
        "time" : {
          "start" : 1736894304767,
          "stop" : 1736894305301,
          "duration" : 534
        }
      }, {
        "uid" : "c37716dff1d3e6ff",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/448//#testresult/c37716dff1d3e6ff",
        "status" : "passed",
        "time" : {
          "start" : 1736887945329,
          "stop" : 1736887945890,
          "duration" : 561
        }
      }, {
        "uid" : "b4d4f5e1b67a56f3",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/244//#testresult/b4d4f5e1b67a56f3",
        "status" : "passed",
        "time" : {
          "start" : 1736816187158,
          "stop" : 1736816187769,
          "duration" : 611
        }
      }, {
        "uid" : "58ef51a55808a7e5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/243//#testresult/58ef51a55808a7e5",
        "status" : "passed",
        "time" : {
          "start" : 1736730119860,
          "stop" : 1736730120398,
          "duration" : 538
        }
      }, {
        "uid" : "8e0693abb1b903b1",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/447//#testresult/8e0693abb1b903b1",
        "status" : "passed",
        "time" : {
          "start" : 1736716383820,
          "stop" : 1736716384404,
          "duration" : 584
        }
      }, {
        "uid" : "b1a5e4efafe86c4e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/446//#testresult/b1a5e4efafe86c4e",
        "status" : "passed",
        "time" : {
          "start" : 1736713947880,
          "stop" : 1736713948421,
          "duration" : 541
        }
      }, {
        "uid" : "2d691a6fb044ff39",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/445//#testresult/2d691a6fb044ff39",
        "status" : "passed",
        "time" : {
          "start" : 1736711121878,
          "stop" : 1736711122685,
          "duration" : 807
        }
      }, {
        "uid" : "a8fc9009cbd67832",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/444//#testresult/a8fc9009cbd67832",
        "status" : "passed",
        "time" : {
          "start" : 1736706725253,
          "stop" : 1736706726064,
          "duration" : 811
        }
      }, {
        "uid" : "bddd2bef8141ddb2",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/242//#testresult/bddd2bef8141ddb2",
        "status" : "passed",
        "time" : {
          "start" : 1736643843074,
          "stop" : 1736643843701,
          "duration" : 627
        }
      }, {
        "uid" : "7d7d6d6d6a7b5534",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/443//#testresult/7d7d6d6d6a7b5534",
        "status" : "passed",
        "time" : {
          "start" : 1736590574388,
          "stop" : 1736590575004,
          "duration" : 616
        }
      }, {
        "uid" : "d2d0e98b166ef920",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/241//#testresult/d2d0e98b166ef920",
        "status" : "passed",
        "time" : {
          "start" : 1736557120287,
          "stop" : 1736557120935,
          "duration" : 648
        }
      }, {
        "uid" : "4c32ae83775e47",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/442//#testresult/4c32ae83775e47",
        "status" : "passed",
        "time" : {
          "start" : 1736542586799,
          "stop" : 1736542587332,
          "duration" : 533
        }
      }, {
        "uid" : "4a8e31e070d98bb0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/240//#testresult/4a8e31e070d98bb0",
        "status" : "passed",
        "time" : {
          "start" : 1736470794896,
          "stop" : 1736470795452,
          "duration" : 556
        }
      }, {
        "uid" : "c32ae5e469aed78b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/441//#testresult/c32ae5e469aed78b",
        "status" : "passed",
        "time" : {
          "start" : 1736421379194,
          "stop" : 1736421379779,
          "duration" : 585
        }
      }, {
        "uid" : "22f8b081e639c104",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/239//#testresult/22f8b081e639c104",
        "status" : "passed",
        "time" : {
          "start" : 1736384319277,
          "stop" : 1736384320088,
          "duration" : 811
        }
      }, {
        "uid" : "f47ec56fdbff37f6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/440//#testresult/f47ec56fdbff37f6",
        "status" : "passed",
        "time" : {
          "start" : 1736367100500,
          "stop" : 1736367101249,
          "duration" : 749
        }
      }, {
        "uid" : "4d23114bf103521e",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/238//#testresult/4d23114bf103521e",
        "status" : "passed",
        "time" : {
          "start" : 1736297907857,
          "stop" : 1736297908393,
          "duration" : 536
        }
      }, {
        "uid" : "fcfe0a5144e3b863",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/237//#testresult/fcfe0a5144e3b863",
        "status" : "passed",
        "time" : {
          "start" : 1736211541786,
          "stop" : 1736211542555,
          "duration" : 769
        }
      }, {
        "uid" : "d2294dd6ffaea81a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/439//#testresult/d2294dd6ffaea81a",
        "status" : "passed",
        "time" : {
          "start" : 1736197945206,
          "stop" : 1736197946010,
          "duration" : 804
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "291acfed8cbcc3a0.json",
  "parameterValues" : [ ]
}
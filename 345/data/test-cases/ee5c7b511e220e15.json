{
  "uid" : "ee5c7b511e220e15",
  "name" : "Verify href, status code of the 'All Team' link",
  "fullName" : "tests.contributors_page_test.TestContributorsPageLinks#test_cnp_03_02_verify_all_team_link",
  "historyId" : "2513d614bdf55f80776a06878d6c6d12",
  "time" : {
    "start" : 1745543105679,
    "stop" : 1745543105695,
    "duration" : 16
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=135.0.7049.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55e6dfe54cea <unknown>\n#1 0x55e6df9055f0 <unknown>\n#2 0x55e6df956a33 <unknown>\n#3 0x55e6df956c21 <unknown>\n#4 0x55e6df9a5274 <unknown>\n#5 0x55e6df97c68d <unknown>\n#6 0x55e6df9a2660 <unknown>\n#7 0x55e6df97c433 <unknown>\n#8 0x55e6df948ea3 <unknown>\n#9 0x55e6df949b01 <unknown>\n#10 0x55e6dfe19b3b <unknown>\n#11 0x55e6dfe1da21 <unknown>\n#12 0x55e6dfe00c32 <unknown>\n#13 0x55e6dfe1e594 <unknown>\n#14 0x55e6dfde4eef <unknown>\n#15 0x55e6dfe42d98 <unknown>\n#16 0x55e6dfe42f76 <unknown>\n#17 0x55e6dfe53b36 <unknown>\n#18 0x7fd06729caa4 <unknown>\n#19 0x7fd067329c3c <unknown>",
  "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7f81805691f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"99bf74b07e4400c3e91a0e06fdb33d15\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:164: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f81802aec00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55e6dfe53b36 \\\\u003Cunknown>\\\\n#18 0x7fd06729caa4 \\\\u003Cunknown>\\\\n#19 0x7fd067329c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\nE         (Session info: chrome=135.0.7049.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55e6dfe54cea <unknown>\nE       #1 0x55e6df9055f0 <unknown>\nE       #2 0x55e6df956a33 <unknown>\nE       #3 0x55e6df956c21 <unknown>\nE       #4 0x55e6df9a5274 <unknown>\nE       #5 0x55e6df97c68d <unknown>\nE       #6 0x55e6df9a2660 <unknown>\nE       #7 0x55e6df97c433 <unknown>\nE       #8 0x55e6df948ea3 <unknown>\nE       #9 0x55e6df949b01 <unknown>\nE       #10 0x55e6dfe19b3b <unknown>\nE       #11 0x55e6dfe1da21 <unknown>\nE       #12 0x55e6dfe00c32 <unknown>\nE       #13 0x55e6dfe1e594 <unknown>\nE       #14 0x55e6dfde4eef <unknown>\nE       #15 0x55e6dfe42d98 <unknown>\nE       #16 0x55e6dfe42f76 <unknown>\nE       #17 0x55e6dfe53b36 <unknown>\nE       #18 0x7fd06729caa4 <unknown>\nE       #19 0x7fd067329c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1745543101984,
      "stop" : 1745543102799,
      "duration" : 815
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "clear_allure_results_folder",
    "time" : {
      "start" : 1745542975127,
      "stop" : 1745542975127,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "contributors_page_open",
    "time" : {
      "start" : 1745543102800,
      "stop" : 1745543105678,
      "duration" : 2878
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Open page: https://www.brainup.site/contributors",
      "time" : {
        "start" : 1745543102800,
        "stop" : 1745543105678,
        "duration" : 2878
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "driver",
        "value" : "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"99bf74b07e4400c3e91a0e06fdb33d15\")>"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=135.0.7049.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55e6dfe54cea <unknown>\n#1 0x55e6df9055f0 <unknown>\n#2 0x55e6df956a33 <unknown>\n#3 0x55e6df956c21 <unknown>\n#4 0x55e6df9a5274 <unknown>\n#5 0x55e6df97c68d <unknown>\n#6 0x55e6df9a2660 <unknown>\n#7 0x55e6df97c433 <unknown>\n#8 0x55e6df948ea3 <unknown>\n#9 0x55e6df949b01 <unknown>\n#10 0x55e6dfe19b3b <unknown>\n#11 0x55e6dfe1da21 <unknown>\n#12 0x55e6dfe00c32 <unknown>\n#13 0x55e6dfe1e594 <unknown>\n#14 0x55e6dfde4eef <unknown>\n#15 0x55e6dfe42d98 <unknown>\n#16 0x55e6dfe42f76 <unknown>\n#17 0x55e6dfe53b36 <unknown>\n#18 0x7fd06729caa4 <unknown>\n#19 0x7fd067329c3c <unknown>",
    "statusTrace" : "self = <tests.contributors_page_test.TestContributorsPage.TestContributorsPageLinks object at 0x7f81805691f0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"99bf74b07e4400c3e91a0e06fdb33d15\")>\ncontributors_page_open = None\n\n    @allure.title(\"Verify href, status code of the 'All Team' link\")\n    def test_cnp_03_02_verify_all_team_link(self, driver, contributors_page_open):\n        page = ContributorsPage(driver)\n>       link_href = page.get_all_team_link_href()\n\ntests/contributors_page_test.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/contributors_page.py:164: in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\npages/base_page.py:90: in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f81802aec00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#17 0x55e6dfe53b36 \\\\u003Cunknown>\\\\n#18 0x7fd06729caa4 \\\\u003Cunknown>\\\\n#19 0x7fd067329c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\nE         (Session info: chrome=135.0.7049.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55e6dfe54cea <unknown>\nE       #1 0x55e6df9055f0 <unknown>\nE       #2 0x55e6df956a33 <unknown>\nE       #3 0x55e6df956c21 <unknown>\nE       #4 0x55e6df9a5274 <unknown>\nE       #5 0x55e6df97c68d <unknown>\nE       #6 0x55e6df9a2660 <unknown>\nE       #7 0x55e6df97c433 <unknown>\nE       #8 0x55e6df948ea3 <unknown>\nE       #9 0x55e6df949b01 <unknown>\nE       #10 0x55e6dfe19b3b <unknown>\nE       #11 0x55e6dfe1da21 <unknown>\nE       #12 0x55e6dfe00c32 <unknown>\nE       #13 0x55e6dfe1e594 <unknown>\nE       #14 0x55e6dfde4eef <unknown>\nE       #15 0x55e6dfe42d98 <unknown>\nE       #16 0x55e6dfe42f76 <unknown>\nE       #17 0x55e6dfe53b36 <unknown>\nE       #18 0x7fd06729caa4 <unknown>\nE       #19 0x7fd067329c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException",
    "steps" : [ {
      "name" : "Get attribute 'href' of the 'All Team' link",
      "time" : {
        "start" : 1745543105679,
        "stop" : 1745543105694,
        "duration" : 15
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'mt-20')]/a\"}\n  (Session info: chrome=135.0.7049.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55e6dfe54cea <unknown>\n#1 0x55e6df9055f0 <unknown>\n#2 0x55e6df956a33 <unknown>\n#3 0x55e6df956c21 <unknown>\n#4 0x55e6df9a5274 <unknown>\n#5 0x55e6df97c68d <unknown>\n#6 0x55e6df9a2660 <unknown>\n#7 0x55e6df97c433 <unknown>\n#8 0x55e6df948ea3 <unknown>\n#9 0x55e6df949b01 <unknown>\n#10 0x55e6dfe19b3b <unknown>\n#11 0x55e6dfe1da21 <unknown>\n#12 0x55e6dfe00c32 <unknown>\n#13 0x55e6dfe1e594 <unknown>\n#14 0x55e6dfde4eef <unknown>\n#15 0x55e6dfe42d98 <unknown>\n#16 0x55e6dfe42f76 <unknown>\n#17 0x55e6dfe53b36 <unknown>\n#18 0x7fd06729caa4 <unknown>\n#19 0x7fd067329c3c <unknown>\n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/contributors_page.py\", line 164, in get_all_team_link_href\n    return self.get_link_href(self.locators.ALL_TEAM_LINK)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/auto-tests-python/auto-tests-python/pages/base_page.py\", line 90, in get_link_href\n    return self.driver.find_element(*locator).get_attribute(\"href\")\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 738, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.10/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "e2e66b7290678bb",
      "name" : "Screenshot 2025-04-25 01:05:05.851795",
      "source" : "e2e66b7290678bb.png",
      "type" : "image/png",
      "size" : 7498
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1745543105853,
      "stop" : 1745543105915,
      "duration" : 62
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "The Contributors Page"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "contributors_page_test"
  }, {
    "name" : "subSuite",
    "value" : "TestContributorsPage"
  }, {
    "name" : "host",
    "value" : "fv-az790-187"
  }, {
    "name" : "thread",
    "value" : "2428-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.contributors_page_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 113,
        "unknown" : 0,
        "total" : 115
      },
      "items" : [ {
        "uid" : "2f3cbf1634d21732",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/549//#testresult/2f3cbf1634d21732",
        "status" : "passed",
        "time" : {
          "start" : 1745517949222,
          "stop" : 1745517950028,
          "duration" : 806
        }
      }, {
        "uid" : "b90bca7455c3d8b5",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/344//#testresult/b90bca7455c3d8b5",
        "status" : "passed",
        "time" : {
          "start" : 1745456686387,
          "stop" : 1745456687113,
          "duration" : 726
        }
      }, {
        "uid" : "9312f6cfef83974a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/548//#testresult/9312f6cfef83974a",
        "status" : "passed",
        "time" : {
          "start" : 1745426065440,
          "stop" : 1745426066249,
          "duration" : 809
        }
      }, {
        "uid" : "ae36ab10e5127c77",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/343//#testresult/ae36ab10e5127c77",
        "status" : "passed",
        "time" : {
          "start" : 1745370323462,
          "stop" : 1745370324304,
          "duration" : 842
        }
      }, {
        "uid" : "50b1c13cd590da9",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/547//#testresult/50b1c13cd590da9",
        "status" : "passed",
        "time" : {
          "start" : 1745347819452,
          "stop" : 1745347820102,
          "duration" : 650
        }
      }, {
        "uid" : "cd46d10ce19e6aa0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/342//#testresult/cd46d10ce19e6aa0",
        "status" : "passed",
        "time" : {
          "start" : 1745283875799,
          "stop" : 1745283876605,
          "duration" : 806
        }
      }, {
        "uid" : "4662bfb4eb3179f7",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/546//#testresult/4662bfb4eb3179f7",
        "status" : "passed",
        "time" : {
          "start" : 1745258818055,
          "stop" : 1745258818877,
          "duration" : 822
        }
      }, {
        "uid" : "5c8eb40f6fc3b38b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/545//#testresult/5c8eb40f6fc3b38b",
        "status" : "passed",
        "time" : {
          "start" : 1745181053008,
          "stop" : 1745181053616,
          "duration" : 608
        }
      }, {
        "uid" : "e298bb06a5fcc78b",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/340//#testresult/e298bb06a5fcc78b",
        "status" : "passed",
        "time" : {
          "start" : 1745111332423,
          "stop" : 1745111332969,
          "duration" : 546
        }
      }, {
        "uid" : "ff6db38e56ddd5d6",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/339//#testresult/ff6db38e56ddd5d6",
        "status" : "passed",
        "time" : {
          "start" : 1745024476086,
          "stop" : 1745024476914,
          "duration" : 828
        }
      }, {
        "uid" : "24562a78df8fa3a0",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/544//#testresult/24562a78df8fa3a0",
        "status" : "passed",
        "time" : {
          "start" : 1745010651642,
          "stop" : 1745010652206,
          "duration" : 564
        }
      }, {
        "uid" : "a095db5a9913a7a4",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/543//#testresult/a095db5a9913a7a4",
        "status" : "passed",
        "time" : {
          "start" : 1745003655486,
          "stop" : 1745003656207,
          "duration" : 721
        }
      }, {
        "uid" : "f1f40b6a6a2cc846",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/338//#testresult/f1f40b6a6a2cc846",
        "status" : "passed",
        "time" : {
          "start" : 1744938186974,
          "stop" : 1744938187519,
          "duration" : 545
        }
      }, {
        "uid" : "d9b07b70599aa66a",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/337//#testresult/d9b07b70599aa66a",
        "status" : "passed",
        "time" : {
          "start" : 1744851887400,
          "stop" : 1744851888207,
          "duration" : 807
        }
      }, {
        "uid" : "809be097cba31752",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/541//#testresult/809be097cba31752",
        "status" : "passed",
        "time" : {
          "start" : 1744833518984,
          "stop" : 1744833519539,
          "duration" : 555
        }
      }, {
        "uid" : "62cf7ed6663722ea",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/336//#testresult/62cf7ed6663722ea",
        "status" : "passed",
        "time" : {
          "start" : 1744765513417,
          "stop" : 1744765514252,
          "duration" : 835
        }
      }, {
        "uid" : "197917ed07e49476",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/540//#testresult/197917ed07e49476",
        "status" : "passed",
        "time" : {
          "start" : 1744718895828,
          "stop" : 1744718896488,
          "duration" : 660
        }
      }, {
        "uid" : "95aba9f226604bbf",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/335//#testresult/95aba9f226604bbf",
        "status" : "passed",
        "time" : {
          "start" : 1744679136139,
          "stop" : 1744679136971,
          "duration" : 832
        }
      }, {
        "uid" : "c163af77b953bf68",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/539//#testresult/c163af77b953bf68",
        "status" : "passed",
        "time" : {
          "start" : 1744663708966,
          "stop" : 1744663709581,
          "duration" : 615
        }
      }, {
        "uid" : "206d4db3f4bcbdd8",
        "reportUrl" : "https://Brain-up.github.io/auto-tests-python/334//#testresult/206d4db3f4bcbdd8",
        "status" : "passed",
        "time" : {
          "start" : 1744592809957,
          "stop" : 1744592810509,
          "duration" : 552
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ee5c7b511e220e15.json",
  "parameterValues" : [ ]
}